
@{
    ViewBag.Title = "Group Setup";
}

<div class="kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid" ng-controller="AcGrouprCtrl">
    <!-- Begin: life time stats -->
    <div class="row">
        <div class="kt-portlet kt-portlet--mobile">
            <div class="kt-portlet__head kt-portlet__head--lg">
                <div class="kt-portlet__head-label">
                    <span class="kt-portlet__head-icon">
                        @*<i class="kt-font-brand flaticon2-line-chart"></i>*@
                    </span>
                    <h3 class="kt-portlet__head-title">
                        <!----Titel Text-->
                        <span class="caption-subject font-green sbold uppercase">@ViewBag.Title</span>
                        <!----Titel Text -->
                    </h3>
                </div>
                <div class="kt-portlet__head-toolbar">
                    <div class="kt-portlet__head-wrapper">
                        <div class="dropdown dropdown-inline">
                            <button type="button" ng-click="resetForm();getAcRootGroups()" class="btn btn-brand btn-icon-sm" data-toggle="modal" data-target="#addmodal" aria-haspopup="true" aria-expanded="false">
                                <!----Add Button -->
                                <i class="flaticon2-plus"></i> Add New
                                <!----Add Button -->
                            </button>

                        </div>
                    </div>
                </div>
            </div>

            <div class="kt-portlet__body">
                <div class="row">
                    <div class="col-md-4 col-sm-5 col-xs-6">
                        <div class="form-group">
                            <div class="col-lg-3 col-md-5 col-sm-4 col-xs-8" style="padding-left:0px">
                                <select class="form-control" ng-model="pageSize" ng-options="P.value as P.text for P in pageSizeArray"></select>
                            </div>                            
                        </div>
                    </div>
                    <div class="col-md-4 col-sm-3 col-xs-1">
                    </div>
                    <div class="col-md-4 col-sm-4 col-xs-5">
                        <div id="sample_3_filter" class="pull-right">
                            <input ng-model="q" id="search" class="form-control" placeholder="Filter text">
                        </div>
                    </div>
                </div>
                <div class="table-scrollable"> </div>
                <table class="table table-bordered table-hover rounded">
                    <thead>
                        <tr class="btn-primary">
                            <th>Parent</th>
                            <th>Account Group Name</th>
                            <th>Display</th>
                            <th>Order</th>
                            <th>Status</th>
                            @*<th style="text-align:center">Action</th>*@
                        </tr>
                    </thead>
                    <tbody>
                        <tr ng-show="AcGroups.length <= 0"><td colspan="5" style="text-align:center;"><i class="fa fa-refresh"></i> Loading new data!!</td></tr>
                        <tr dir-paginate="item in AcGroups| filter:q  | itemsPerPage: pageSize" current-page="currentPage">
                            <td ng-show="item.ParentName != null">{{item.ParentName}}</td>
                            <td ng-show="item.ParentName == null">N/A</td>
                            <td>{{item.Name}}</td>
                            <td style="width:10%" class="text-center"><input style="width:50%" type="checkbox" ng-model="item.IsDisplay" ng-checked="item.IsDisplay==true" ng-change="SetDisplay(item)" /></td>
                            <td style="width:10%">
                                <input type="number" min="1" oninput="validity.valid||(value='');" ng-model="item.DisplayOrder" ng-disabled="item.IsDisplay==false" class="form-control" ng-blur="SetOrder(item)" onfocus="if(parseFloat(this.value) ==0) { this.value = ''; }" onblur="if(this.value == '') { this.value = '0'; }" />
                            </td>
                            <td ng-show="item.Status=='A'">Active</td>
                            <td ng-show="item.Status=='I'">Inactive</td>
                            @*<td align="center">
                                <div class="input-group-btn">
                                    <button type="button" class="btn btn-label-success" data-toggle="dropdown">
                                        Options
                                        <span class="caret"></span>
                                    </button>
                                    <ul class="dropdown-menu pull-right">
                                        <li>
                                            <a ng-show="item.Status=='A'" ng-click="inactive(item)"><i class="fa fa-ban"></i> Inactive</a>
                                        </li>
                                        <li>
                                            <a ng-show="item.Status=='I'" ng-click="active(item)"><i class="fa fa-ban"></i> Active</a>
                                        </li>
                                        <li>
                                            <a ng-click="edit(item)" data-target="#editmodal" data-toggle="modal" ng-show="item.IsEdit"><i class="fa fa-edit"></i> Edit</a>
                                        </li>
                                        <li>
                                            <a ng-click="deleteAcGroup(item)"><i class="fa fa-trash"></i> Delete</a>
                                        </li>
                                    </ul>
                                </div>
                            </td>*@
                        </tr>
                    </tbody>
                </table>
                <div class="row">
                    <dir-pagination-controls boundary-links="true" template-url="~/assets/angular/lib/dirPagination.tpl.html"></dir-pagination-controls>
                </div>
            </div>
        </div>
    </div>

    <!-- End: life time stats -->
    <!--Add Modal Area Start-->
    <div id="addmodal" class="modal fade" tabindex="-1" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog">
            <div class="modal-content">
                <form name="addform" ng-submit="save()" class="form-horizontal" id="form_sample_1" novalidate autocomplete="off">
                    <div class="modal-header">
                        <h4 class="modal-title">{{modalTitle}}</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                    </div>
                    <div class="modal-body">
                        <div class="form-body">
                            <div class="row" >
                                <div class="col-md-12">
                                    <div>
                                        <div class="form-group row" ng-class="{ 'has-error' : submitted && addform.Category.$invalid}">
                                            <label class="col-md-4 control-label"style="text-align:right">
                                                Select Category:
                                                <span class="required">*</span>
                                            </label>
                                            <div class="col-md-8">
                                                <select class="form-control" ng-model="AcLedger.RootGroupId"  name="Category" ng-options="RGroup.LedgerId as RGroup.Name for RGroup in RootGroups" required>
                                                    <option value="">Select One</option>
                                                </select>
                                                <div class="form-control-focus"> </div>
                                                <span ng-show="submitted &&  addform.Category.$error.required" class="help-block">Category Required</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group row" ng-class="{ 'has-error' : submitted && addform.SubCat1.$invalid}">
                                        <label class="col-md-4 control-label"style="text-align:right">
                                            Group:
                                            @*<span class="required">*</span>*@
                                        </label>
                                        <div class="col-md-8">
                                            <input type="text" ng-model="ParentId" typeahead-on-select='onSelect($item, $model, $label,crRow)' placeholder="Search Ledger by Name"
                                                   uib-typeahead="i  as i.Text for i in Search($viewValue)" typeahead-loading="loadingLocations" typeahead-no-results="noResults" class="form-control">
                                            <i ng-show="loadingLocations" class="glyphicon glyphicon-refresh"></i>
                                            <div ng-show="noResults"><i class="glyphicon glyphicon-remove"></i> No Results Found</div>
                                            <div class="form-control-focus"> </div>
                                            @*<input type="hidden" name="StudentIID" ng-model="StudentIID" ng-value="Std.Value" />*@

                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-lg-12">
                                            <div class="form-group row" ng-class="{ 'has-error' : submitted && addform.name.$invalid}">
                                                <label class="col-md-4 control-label"style="text-align:right">
                                                    Group Name:
                                                    <span class="required">*</span>
                                                </label>
                                                <div class="col-md-8">
                                                    <input type="text" ng-model="AcLedger.Name" class="form-control" placeholder="Group Name" name="name" required>
                                                    <div class="form-control-focus"> </div>
                                                    <span ng-show="submitted &&  addform.name.$error.required" class="help-block">Name Required</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-md-4 control-label"style="text-align:right">
                                            Cash Flow Type:
                                        </label>
                                        <div class="col-md-8">
                                            <select class="form-control" ng-model="AcLedger.CashFlowType" name="CashFlowType">
                                                <option value="">Select One</option>
                                                <option value="Operation">Operation</option>
                                                <option value="Investing">Investing</option>
                                                <option value="Financing">Financing</option>
                                            </select>
                                            <div class="form-control-focus"> </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" data-dismiss="modal" class="btn  btn-secondary" ng-click="resetForm();submitted=false">Cancel</button>
                                <button type="submit" ng-click="submitted=true" class="btn btn-success">Save</button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <!--Add Modal Area End-->
    <!--edit Modal Area Start-->
    <div id="editmodal" class="modal fade" tabindex="-1" data-backdrop="static" data-keyboard="false" >
        <div class="modal-dialog">
            <div class="modal-content">
                <form name="editform" ng-submit="save()" class="form-horizontal" id="form_sample_1" novalidate autocomplete="off">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                        <h4 class="modal-title">{{modalTitle}}</h4>
                    </div>
                    <div class="modal-body">
                        <div class="form-body">
                            <div class="row">
                                <div class="col-md-12">
                                    <div>
                                        
                                    </div>
                                    <div class="form-group row" ng-class="{ 'has-error' : submitted && addform.SubCat1.$invalid}">
                                        <label class="col-md-4 control-label"style="text-align:right">
                                            Group:
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-8" >
                                           
                                            <label disabled class="form-control">{{AcLedger.RootGroupId == AcLedger.ParentId ? 'This Group is Under The Category' : AcLedger.ParentName}}</label>
                                        </div>
                                   
                                    </div>

                                    <div class="row">
                                        <div class="col-lg-12">
                                            <div class="form-group row" ng-class="{ 'has-error' : submitted && addform.name.$invalid}">
                                                <label class="col-md-4 control-label"style="text-align:right">
                                                    Group Name:
                                                    <span class="required">*</span>
                                                </label>
                                                <div class="col-md-8">
                                                    <input type="text" ng-model="AcLedger.Name" class="form-control" placeholder="Group Name" name="name" required>
                                                    <div class="form-control-focus"> </div>
                                                    <span ng-show="submitted &&  addform.name.$error.required" class="help-block">Name Required</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-md-4 control-label"style="text-align:right">
                                            Cash Flow Type:
                                        </label>
                                        <div class="col-md-8">
                                            <select class="form-control" ng-model="AcLedger.CashFlowType" name="CashFlowType">
                                                <option value="">Select One</option>
                                                <option value="Operation">Operation</option>
                                                <option value="Investing">Investing</option>
                                                <option value="Financing">Financing</option>
                                            </select>
                                            <div class="form-control-focus"> </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" data-dismiss="modal" class="btn  btn-secondary" ng-click="getAcGroup();resetForm();submitted=false">Cancel</button>
                                <button type="submit" ng-click="submitted=true" class="btn  btn-success">Save</button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <!--edit Modal Area End-->
</div>

@section Scripts{

    <script type="text/javascript">
        OEMSApp.controller("AcGrouprCtrl", ["$scope", "$http", "SweetAlert", "$filter",
              function ($scope, $http, SweetAlert, $filter) {

                  init();
                  function init() {
                      initialize();
                      getAcGroup();
                      // getAcRootGroups();
                  }
                  function initialize() {
                      $scope.modalTitle = "Add Account Group";
                      $scope.AcLedger = {};
                      $scope.vm = {};
                      $scope.vm.TransactionDetail = [];
                      $scope.RootGroups = [];
                      $scope.arrNum = 0;
                      $scope.Groups0 = [];
                      $scope.GroupsbyG = [];
                      $scope.AcLedger.LedgerId = 0;
                      $scope.secGroups = [];
                      $scope.thirdGroups = [];

                      $scope.showChild1 = false;
                      $scope.showChild2 = false;
                      $scope.showChild3 = false;

                      $scope.AcGroups = [];
                  
                      $scope.currentPage = 1;
                      $scope.pageno = 1;
                      $scope.pagesize = 10;
                      $scope.total_count = 12;
                      $scope.search = '';
                      $scope.Id = '';
                      $scope.getAcGroup = getAcGroup;
                      //$scope.getAcRootGroups = getAcRootGroups;
                      $scope.res = {};
                      $scope.data = {};
                      $scope.resetForm = resetForm;
                      $scope.hstep = 1;
                      $scope.mstep = 15;
                      $scope.GroupP = {};
                      $scope.isGroup = false;

                      $scope.editItems = true;
                      $scope.ParentId = null;

                      $scope.AcLedger.OpenningBalanceDc = 1;
                      $scope.pageSizeArray = [];
                      $scope.pageSizeArray.push({ value: 5, text: 5 });
                      $scope.pageSizeArray.push({ value: 10, text: 10 });
                      $scope.pageSizeArray.push({ value: 20, text: 20 });
                      $scope.pageSizeArray.push({ value: 50, text: 50 });
                      $scope.currentPage = 1;
                      $scope.pageSize = 10;

                  }
                  function resetForm() {
                      $scope.modalTitle = "Add Account Group";

                      $scope.AcLedger = {};
                      $scope.AcLedger.LedgerId = 0;
                      $scope.addform.$setUntouched();
                      $scope.addform.$setPristine();
                      $scope.submitted = false;
                      $scope.ParentId = null;
                      $scope.GroupSets = {
                          choices: []

                      }
                      $scope.showChild1 = false;
                      $scope.showChild2 = false;
                      $scope.showChild3 = false;
                      $scope.editItems = true;
                  }

                  $scope.addNewGroup = function () {
                      $scope.GroupSets.choices.push('');
                      $scope.arrNum += 1;
                      $scope.isGroup = true;
                  }


                  $scope.Search = function (val) {
                      if (val.length >= 3)
                          return $http.get(baseUrl + 'Accounts/SearchGroup/' + val + '/' + $scope.AcLedger.RootGroupId, {
                              params: {}
                          }).then(function (response) {
                              return response.data.results.map(function (item) {
                                  return item;
                              });
                          });
                  };

                  // for dropdown select list event....
                  $scope.onSelect = function onSelect($item, $model, $label, itemRow) {
                      var hasLedger = 0;
                      var keepGoing = true;
                     
                      if (keepGoing) {
                          angular.forEach($scope.vm.TransactionDetail, function (value, key) {
                              if (value.LedgerId == num($item.Value)) {
                                  console.log("Item Found!");
                                  
                                  hasLedger = true;
                                  keepGoing = false;
                                  return;
                              }
                          });
                      }
                      if (hasLedger) {
                          toastr["error"]("Ledger Allready selected!!!");
                          itemRow.LedgerId = 0;
                          itemRow.CurrentBalance = 0;
                          return;
                      }
                      $scope.studentSearchs = [];
                      $http({
                          method: 'GET',
                          url: baseUrl + 'Accounts/GetLedgersByLedgerIdEdit/' + $item.Value
                      }).then(function successCallback(response) {
                          $scope.LedgersById = response.data.results;
                          itemRow.CurrentBalance = $scope.LedgersById[0].CurrentBalance;
                          itemRow.LedgerId = num($item.Value);
                      }, function errorCallback(response) {
                          toastr["error"](response.data.Message);
                      });
                  };



                  function getAcGroup() {
                      $scope.AcGroups = [];
                      $http({
                          method: 'GET',
                          url: baseUrl + 'Accounts/GetAllGroups/'
                      }).then(function successCallback(response) {
                          $scope.AcGroups = response.data.results;
                         
                      }, function errorCallback(response) {
                          toastr["warning"](response.data.Message);
                      });
                  }
                  $scope.getAcRootGroups = function getAcRootGroups() {
                      $scope.RootGroups = [];
                      $http({
                          method: 'GET',
                          url: baseUrl + 'Accounts/GetAllRootLedger/'
                      }).then(function successCallback(response) {
                          $scope.RootGroups = response.data.results;
                          console.log($scope.RootGroups);
                      }, function errorCallback(response) {
                          toastr["warning"](response.data.Message);
                      });
                  }

                  $scope.getGroupById = function getGroupById(Id) {
                      $scope.Groups = [];
                      $http({
                          method: 'GET',
                          url: baseUrl + 'Accounts/GetLedgersByLedgerId/' + Id
                      }).then(function successCallback(response) {
                          $scope.Groups = response.data.results;
                          if ($scope.Groups.length > 0) {
                              $scope.showChild1 = true;
                          }

                      }, function errorCallback(response) {
                          toastr["warning"](response.data.Message);
                      });
                  }
                  $scope.getChildByLdegerId = function getChildByLdegerId(Id) {
                      $scope.GroupsbyG = [];
                      $http({
                          method: 'GET',
                          url: baseUrl + 'Accounts/GetLedgersByLedgerIdEdit/' + Id
                      }).then(function successCallback(response) {
                          $scope.GroupsbyL = response.data.results;
                      }, function errorCallback(response) {
                          toastr["warning"](response.data.Message);
                      });
                  }

                  $scope.inactive = function (item) {
                      SweetAlert.swal({
                          title: "Are you sure  ?", type: "warning", showCancelButton: true, confirmButtonColor: "#DD6B55",
                          confirmButtonText: "Yes, Inactive it!",
                          
                      },
                       function (isConfirm) {
                           if (isConfirm) {

                      if (item.LedgerId != 0) {
                          item.Status = 'I';
                          $http({
                              method: 'PUT',
                              url: baseUrl + 'Accounts/UpdateLedgers/',
                              data: item
                          }).then(function successCallback(response) {
                              getAcGroup();
                              toastr["info"]("Successfully Inactivated!");
                              resetForm();
                          }, function errorCallback(response) {
                              toastr["warning"](response.data.Message);
                              resetForm();
                              getAcGroup();
                          });
                      }
                           }
                       });
                  }
                  $scope.active = function (item) {
                     
                      SweetAlert.swal({
                          title: "Are you sure  ?", type: "warning", showCancelButton: true, confirmButtonColor: "#DD6B55",
                          confirmButtonText: "Yes, Active it!",
                          
                      },
                          function (isConfirm) {
                              if (isConfirm) {
                                  if (item.LedgerId != 0) {
                                      item.Status = 'A';
                                      $http({
                                          method: 'PUT',
                                          url: baseUrl + 'Accounts/ActiveInactiveLedger/',
                                          data: item
                                      }).then(function successCallback(response) {
                                          getAcGroup();
                                          toastr["info"]("Successfully Activated!");
                                          resetForm();
                                      }, function errorCallback(response) {
                                          toastr["warning"](response.data.Message);
                                          resetForm();
                                          getAcGroup();
                                      });
                                  }
                              }
                          });
                  
                  }



                  $scope.edit = function (n) {
                      $scope.modalTitle = "Edit Account Group";
                      $scope.AcLedger = n;
                      //console.log($scope.AcLedger);

                     
                      $scope.Id = n.LedgerId;
                      $scope.AcLedger.LedgerId = n.LedgerId;
                      $scope.AcLedger.Name = n.Name;
                 
                      //$http({
                      //    method: 'GET',
                      //    url: baseUrl + 'Accounts/GetLedgersByLedgerIdEdit/' + n.ParentId
                      //}).then(function successCallback(response) {
                      //    $scope.Groups = response.data.results;
                      //    $scope.showChild1 = true;
                      //    $scope.AcLedger.ParentId = $scope.LedgerId;
                      //    //if ($scope.AcLedger.LedgerId != 0) {
                      //    //    $http({
                      //    //        method: 'GET',
                      //    //        url: baseUrl + 'Accounts/GetLedgersByLedgerIdEdit/' + $scope.Groups[0].ParentId
                      //    //    }).then(function successCallback(response) {
                      //            //$scope.showChild1 = true;
                      //            $http({
                      //                method: 'GET',
                      //                url: baseUrl + 'Accounts/GetAllRootLedger/'
                      //            }).then(function successCallback(response) {
                      //                $scope.RootGroups = response.data.results;
                      //            }, function errorCallback(response) {
                      //                //toastr["warning"](response.data.Message);
                      //            });
                      //            $scope.AcLedger.ParentId = response.data.results[0].LedgerId;
                      //    //    }, function errorCallback(response) {
                      //    //        //toastr["warning"](response.data.Message);
                      //    //    });
                      //    //}

                      //}, function errorCallback(response) {
                          
                      //});
                  }
                  $scope.SetDisplay = function (item) {
                      $http({
                          method: 'PUT',
                          url: baseUrl + 'Accounts/UpdateDisplay/',
                          data: item
                      }).then(function successCallback(response) {
                          toastr["info"](response.data.message);
                          if (item.IsDisplay == false) {
                              item.DisplayOrder = 0;
                          }
                          getAcGroup();
                      }, function errorCallback(response) {
                          toastr["warning"](response.data.Message);
                          item.IsDisplay = false;
                          getAcGroup();
                      });
                  }
                  $scope.SetOrder = function (item) {
                      $http({
                          method: 'PUT',
                          url: baseUrl + 'Accounts/UpdateDisplayOrder/',
                          data: item
                      }).then(function successCallback(response) {
                          toastr["info"](response.data.message);
                      }, function errorCallback(response) {
                          toastr["warning"](response.data.Message);
                          item.DisplayOrder = 0;
                      });
                  }
                  $scope.save = function save() {
                   //   debugger;
                      if ($scope.addform.$invalid)
                          return;
                                        
                          if ($scope.ParentId == null || $scope.ParentId == "") {
                              $scope.AcLedger.ParentId = $scope.AcLedger.RootGroupId;
                          }
                          else {

                              $scope.AcLedger.ParentId = $scope.ParentId.Value;
                          }

                      $scope.AcLedger.IsGroup=true;
                      if ($scope.AcLedger.LedgerId != 0) /// For Update
                      {
                          //if ($scope.AcLedger != '') {
                              $http({
                                  method: 'PUT',
                                  url: baseUrl + 'Accounts/UpdateLedgers/', // + $scope.AcLedger.Name + '/' + $scope.AcLedger.LedgerId
                                  data: $scope.AcLedger
                              }).then(function successCallback(response) {
                                  $('#editmodal').modal('toggle');                              
                                  toastr["info"](response.data.message);
                                  resetForm();
                                  getAcGroup();
                              }, function errorCallback(response) {
                                  toastr["warning"](response.data.Message);
                                  $('#editmodal').modal('toggle');
                                  resetForm();
                                  getAcGroup();
                              });
                          //}
                      } else {  //  For Add

                      
                          if ($scope.AcLedger != {}) {
                              $scope.AcLedger.IsGroup = true;
                              $http({
                                  method: 'POST',
                                  url: baseUrl + 'Accounts/AddLedgers/',
                                  data: $scope.AcLedger
                              }).then(function successCallback(response) {
                                  $('#addmodal').modal('toggle');
                                  debugger;
                                  toastr["info"](response.data.message);
                                  resetForm();
                                  getAcGroup();
                              }, function errorCallback(response) {
                                  toastr["warning"](response.data.Message);
                                  $('#addmodal').modal('toggle');
                                  resetForm();
                                  getAcGroup();
                              });
                          }
                      }
                  };
                  $scope.deleteAcGroup = function deleteAcGroup(n){
                      SweetAlert.swal({
                          title: "Are you sure to delete it ?", type: "warning", showCancelButton: true, confirmButtonColor: "#DD6B55",
                          confirmButtonText: "Yes, delete it!",
                          closeOnConfirm: false
                      },
                      
                                       
                        function (isConfirm) {
                        if (isConfirm) {
                        if (n.Id != 0) {
                          n.IsDeleted = true;
                          $http({
                              method: 'PUT',
                              url: baseUrl + 'Accounts/DeleteGroupLedgers/',
                              data: n
                          }).then(function successCallback(response) {
                              getAcGroup();
                              SweetAlert.swal("Deleted!", "Your data has been deleted.", "success");
                          }, function errorCallback(response) {
                              toastr["warning"](response.data.Message);
                              getAcGroup();
                          });
                      }
                  }
              });
              
                  };
        }]);

    </script>
}