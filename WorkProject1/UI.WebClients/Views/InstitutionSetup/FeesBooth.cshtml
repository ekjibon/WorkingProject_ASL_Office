@{
    ViewBag.Title = "Fees Booth";
}
<div ng-controller="feesbooth">
    <!-- Begin: life time stats -->
    <div class="portlet light bordered">
        <div class="portlet-title">
            <div class="caption">
                <i class="icon-settings font-green"></i>
                <span class="caption-subject font-green sbold uppercase">@ViewBag.Title</span>
            </div>
            <div class="actions">
                <div class="btn-group btn-group-solid">
                    <button ng-click="resetForm()" class="btn green" data-target="#addmodal" data-toggle="modal"> <i class="fa fa-plus"></i> Add Fees Booth</button>
                </div>
            </div>
        </div>
        <div class="portlet-body">
            <div class="table-container">
                <div id="sample_3_wrapper" class="dataTables_wrapper no-footer">
                    <div class="row">
                        <div class="col-md-4 col-sm-5 col-xs-6">
                            <div class="form-group">
                                <div class="col-lg-3 col-md-5 col-sm-4 col-xs-8" style="padding-left:0px">
                                    <select class="form-control" ng-model="pageSize" ng-options="P.value as P.text for P in pageSizeArray"></select>
                                </div>
                                <div class="col-md-7  col-sm-8  col-xs-4">
                                    @*<label for="search" class="control-label" style="padding-top:5px">Items</label>*@
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 col-sm-3 col-xs-1">
                        </div>
                        <div class="col-md-4 col-sm-4 col-xs-5">
                            <div id="sample_3_filter" class="pull-right">
                                <input ng-model="q" id="search" class="form-control" placeholder="Filter text">
                            </div>
                        </div>
                    </div>
                    <div class="table-scrollable"> </div>
                    <table class="table table-bordered table-hover">
                        <thead>
                            <tr class="bg-primary">
                                <th>Booth Name</th>
                                <th>Booth Code</th>
                                <th>Branch</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr ng-show="FeesBooths.results.length <= 0"><td colspan="5" style="text-align:center;"><i class="fa fa-refresh"></i> Loading new data!!</td></tr>
                            <tr dir-paginate="item in FeesBooths.results| filter:q |itemsPerPage:pageSize" current-page="currentPage" total-items="total_count">
                                <td>{{item.BoothName}}</td>
                                <td>{{item.BoothCode}}</td>
                                <td>{{item.BranchName}}</td>
                                <td>
                                    <a href="javascript:;" class="btn btn-icon-only green" ng-click="edit(item)" data-target="#addmodal" data-toggle="modal">
                                        <i class="fa fa-edit"></i>
                                    </a>
                                    <a ng-click="deletefeesbooth(item)"  class="btn btn-icon-only red">
                                        <i class="fa fa-trash"></i>
                                    </a>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <div class="row ">
                        <dir-pagination-controls boundary-links="true" template-url="~/assets/angular/lib/dirPagination.tpl.html"></dir-pagination-controls>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- End: life time stats -->
    <!--Modal Area Start-->
    <div id="addmodal" class="modal fade" tabindex="-1" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog">
            <div class="modal-content">
                <form name="addform" ng-submit="save()" class="form-horizontal" id="form_sample_1" novalidate>
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">X</button>
                        <h4 class="modal-title">{{aemodalTitle}}</h4>
                    </div>
                    <div class="modal-body">
                        <div class="form-body">
                            <div class="col-md-12">
                                <div class="form-group" ng-class="{ 'has-error' : submitted && addform.branch.$invalid}">
                                    <label class="col-md-3 control-label">
                                        Branch
                                        <span class="required">*</span>
                                    </label>
                                    <div class="col-md-9">
                                        <select class="form-control" ng-model="feesbooth.BoothBranchId" ng-options="branch.BranchId as branch.BranchName for branch in branchs" name="branch" required>
                                            <option value=''>Select Option</option>
                                        </select>
                                        <div class="form-control-focus"> </div>
                                        <span ng-show="submitted && addform.branch.$error.required" class="help-block">Branch Name Required</span>
                                    </div>
                                </div>
                                <div class="form-group" ng-class="{ 'has-error' : submitted && addform.name.$invalid}">
                                    <label class="col-md-3 control-label" for="form_control_1">
                                        Booth Name
                                        <span class="required">*</span>
                                    </label>
                                    <div class="col-md-9">
                                        <input type="text" ng-model="feesbooth.BoothName" class="form-control" placeholder="Booth Name" name="name" required>
                                        <div class="form-control-focus"> </div>
                                        <span ng-show="submitted && addform.name.$error.required" class="help-block">Section Required</span>
                                    </div>
                                </div>
                                <div class="form-group" ng-class="{ 'has-error' : submitted && addform.code.$invalid}">
                                    <label class="col-md-3 control-label" for="form_control_1">
                                        Booth Code
                                        <span class="required">*</span>
                                    </label>
                                    <div class="col-md-9">
                                        <input type="text" ng-model="feesbooth.BoothCode" class="form-control" placeholder="Booth Code" name="code" required>
                                        <div class="form-control-focus"> </div>
                                        <span ng-show="submitted && addform.code.$error.required" class="help-block">Booth Code Required;</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" data-dismiss="modal" class="btn dark btn-outline" ng-click="resetForm();submitted=false">Cancel</button>
                        <button type="submit" ng-click="submitted=true" class="btn green">{{btn}}</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <!--Modal Area End-->
</div>
@section Scripts{
    <script type="text/javascript">
        OEMSApp.controller("feesbooth", ["$scope", "$http", "SweetAlert",
           function ($scope, $http, SweetAlert) {
               init();
               function init() {
                   initialize();
                   getFeesBooths();
                   getAllBranchs();
               }
               function initialize() {
                   $scope.aemodalTitle = "Add Fees Booth";
                   $scope.btn = "Save";
                   $scope.boothname = '';
                   $scope.currentPage = 1;
                   $scope.pageno = 1;
                   $scope.pagesize = 10;
                   $scope.total_count = 12;
                   $scope.search = '';
                   $scope.feesbooth = {};
                   $scope.feesbooth.BoothId = 0;
                   $scope.FeesBooths = [];
                   $scope.Id = '';
                   $scope.getFeesBooths = getFeesBooths;
                   $scope.res = {};
                   $scope.data = {};
                   $scope.resetForm = resetForm;
                   $scope.branchs = [];
                   $scope.getAllBranchs = getAllBranchs;
                   $scope.pageSizeArray = [];
                   $scope.pageSizeArray.push({ value: 5, text: 5 });
                   $scope.pageSizeArray.push({ value: 10, text: 10 });
                   $scope.pageSizeArray.push({ value: 20, text: 20 });
                   $scope.pageSizeArray.push({ value: 50, text: 50 });
                   $scope.currentPage = 1;
                   $scope.pageSize = 10;
               }
               function resetForm() {
                   $scope.aemodalTitle = "Add Fees Booth";
                   $scope.feesbooth = {};
                   $scope.feesbooth.BoothId = 0;
                   $scope.addform.$setUntouched();
                   $scope.addform.$setPristine();
                   $scope.submitted = false;
                   $scope.feesbooths = [];
                   $scope.Id = '';
                   $scope.btn = "Save";
                   getFeesBooths();
               }
               function getFeesBooths() {
                   $scope.FeesBooths = [];
                   $http({
                       method: 'GET',
                       url: baseUrl + 'SetupInstitution/GetAllFeesBooth/' 
                   }).then(function successCallback(response) {
                       // when the response is available
                       $scope.FeesBooths = response.data;
                       $scope.total_count = response.data.results.length;
                   }, function errorCallback(response) {
                       toastr["warning"](response.data.Message);
                   });
               }
               $scope.edit = function (n) {
                   $scope.feesbooth = n;
                   $scope.feesbooth.BoothId = n.BoothId;
                   $scope.btn = "Update";
                   $scope.aemodalTitle = "Update Fees Booth";
               };
               $scope.save = function save() {
                   if ($scope.addform.$invalid)
                       return;
                   if ($scope.feesbooth.BoothId != 0) {
                       if ($scope.feesbooth != {}) {
                           $http({           //Update
                               method: 'PUT',
                               url: baseUrl + 'SetupInstitution/UpdateFeesBooth/',
                               data: $scope.feesbooth
                           }).then(function successCallback(response) {
                               $('#addmodal').modal('toggle');
                               getFeesBooths($scope.currentPage);
                               toastr["info"](response.data.message);
                               resetForm();
                              
                           }, function errorCallback(response) {
                               toastr["warning"](response.data.Message);
                           });
                       }
                   } else {       //Add

                       if ($scope.feesbooth != {}) {
                           $http({
                               method: 'POST',
                               url: baseUrl + 'SetupInstitution/AddFeesBooth/',
                               data: $scope.feesbooth
                           }).then(function successCallback(response) {
                               $('#addmodal').modal('toggle');
                               getFeesBooths($scope.currentPage);
                               toastr["info"](response.data.message);
                               resetForm();
                               $scope.btn = "Save";
                           }, function errorCallback(response) {
                               toastr["warning"](response.data.Message);
                           });
                       }
                      
                   }
                       
                       
                   
               };
               $scope.deletefeesbooth = function deletefeesbooth(n) {
                   // SweetAlert.swal("Good job!", "You clicked the button!", "success");
                   SweetAlert.swal({
                       title: "Are you sure to delete it ?", type: "warning", showCancelButton: true, confirmButtonColor: "#DD6B55",
                       confirmButtonText: "Yes, delete it!",
                       closeOnConfirm: false
                   },
                   function (isConfirm) {
                       if (isConfirm) {
                           $http({
                               method: 'DELETE',
                               url: baseUrl + 'SetupInstitution/DeleteFeesBooth/' + n.BoothId
                           }).then(function successCallback(response) {
                               SweetAlert.swal("Deleted!", "Your data has been deleted.", "success");
                               getFeesBooths($scope.currentPage);
                           }, function errorCallback(response) {
                               toastr["warning"](response.data.Message);
                           });
                       }
                   });
               };
               function getAllBranchs() {
                   $scope.branchs = [];
                   $http({
                       method: 'GET',
                       url: baseUrl + 'SetupInstitution/GetAllBranchs/'
                   }).then(function successCallback(response) {
                       $scope.branchs = response.data.results;
                   }, function errorCallback(response) {
                       toastr["warning"](response.data.Message);
                   });
               }
           }]);
    </script>
}
