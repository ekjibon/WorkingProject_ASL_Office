
@{
    ViewBag.Title = "Section";
}
<div ng-controller="section">
    <!-- Begin: life time stats -->
    <div class="portlet light bordered">
        <div class="portlet-title">
            <div class="caption">
                <i class="icon-settings font-green"></i>
                <span class="caption-subject font-green sbold uppercase">@ViewBag.Title</span>
            </div>
            <div class="actions">
                <div class="btn-group btn-group-solid">
                    <button ng-click="resetForm()" class="btn green" data-target="#addmodal" data-toggle="modal"> <i class="fa fa-plus"></i> Add Section</button>
                </div>
            </div>
        </div>
        <div class="portlet-body">
            <div class="table-container">
                <div id="sample_3_wrapper" class="dataTables_wrapper no-footer">
                    <div class="row">
                        <div class="col-md-4 col-sm-5 col-xs-6">
                            <div class="form-group">
                                <div class="col-lg-3 col-md-5 col-sm-4 col-xs-8" style="padding-left:0px">
                                    <select class="form-control" ng-model="pageSize" ng-options="P.value as P.text for P in pageSizeArray"></select>
                                </div>
                                <div class="col-md-7  col-sm-8  col-xs-4">
                                    @*<label for="search" class="control-label" style="padding-top:5px">Items</label>*@
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 col-sm-3 col-xs-1">
                        </div>
                        <div class="col-md-4 col-sm-4 col-xs-5">
                            <div id="sample_3_filter" class="pull-right">
                                <input ng-model="q" id="search" class="form-control" placeholder="Filter text">
                            </div>
                        </div>
                    </div>
                        <div class="table-scrollable"> </div>
                        <table class="table table-bordered table-hover">
                            <thead>
                                <tr class="btn-primary">
                                    <th>Shift Name</th>
                                    <th>Class Name</th>
                                    <th>Section Name</th>
                                    <th>Code</th>
                                    <th>Number of Seat</th>
                                    <th>Lock Out </th>
                                    <th>PickUp Time</th>
                                    <th style="text-align:center">Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr ng-show="Sections.results.length <= 0"><td colspan="5" style="text-align:center;"><i class="fa fa-refresh"></i> Loading new data!!</td></tr>
                                <tr dir-paginate="item in Sections.results | filter:q |itemsPerPage:pageSize" current-page="currentPage">
                                    <td>{{item.ShiftName}}</td>
                                    <td>{{item.className}}</td>
                                   <td>{{item.SectionName}}</td>
                                    <td>{{item.SectionCode}}</td>
                                    <td>{{item.NoOfSeat}}</td>
                                    <td>{{item.LockOut | date:"hh: mm a"}}</td>
                                    <td>{{item.PickUpTime | date:"hh:mm a"}}</td>
                                    
                                    <td align="center">
                                        <a  class="btn btn-icon-only green" ng-click="edit(item)" data-target="#addmodal" data-toggle="modal">
                                            <i class="fa fa-edit"></i>
                                        </a>
                                        <a ng-click="deletesection(item)"  class="btn btn-icon-only red">
                                            <i class="fa fa-trash"></i>
                                        </a>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                
                         <div class="row ">
                            <dir-pagination-controls boundary-links="true" template-url="~/assets/angular/lib/dirPagination.tpl.html"></dir-pagination-controls>
                        </div>
                    </div>
            </div>
        </div>
    </div>
    <!-- End: life time stats -->
    <!--Modal Area Start-->
    <div id="addmodal" class="modal fade" tabindex="-1" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog">
            <div class="modal-content">
                <form name="addform" ng-submit="save()" class="form-horizontal" id="form_sample_1" novalidate>
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                        <h4 class="modal-title">{{aemodalTitle}}</h4>
                    </div>
                    <div class="modal-body">
                        <div class="form-body">
                            <div class="col-md-12">
                                <div class="form-group" ng-class="{ 'has-error' : submitted && addform.Branch.$invalid}">
                                    <label class="col-md-3 control-label">
                                        Branch :
                                        <span class="required">*</span>
                                    </label>
                                    <div class="col-md-9">
                                        <select class="form-control" ng-model="section.BranchId" required name="Branch" ng-options="B.BranchId as B.BranchName for B in Branchs.results">
                                            <option value="" selected="selected">Choose Option</option>
                                        </select>
                                        <div class="form-control-focus"> </div>
                                        <span ng-show="submitted && addform.Branch.$error.required" class="help-block">Branch Name Required</span>
                                    </div>
                                </div>
                                <div class="form-group" ng-class="{ 'has-error' : submitted && addform.Shift.$invalid}">
                                    <label class="col-md-3 control-label">
                                        Shift :
                                        <span class="required">*</span>
                                    </label>
                                    <div class="col-md-9">
                                        <select class="form-control" ng-model="section.ShiftId" required name="Shift" ng-options="Shift.ShiftId as Shift.ShiftName for Shift in CommonFeilds.Shift | filter:{BranchId:section.BranchId}:true">
                                            <option value="" selected="selected">Choose Option</option>
                                        </select>
                                        <div class="form-control-focus"> </div>
                                        <span ng-show="submitted && addform.Shift.$error.required" class="help-block">Shift Name Required</span>
                                    </div>
                                </div>
                                <div class="form-group" ng-class="{ 'has-error' : submitted && addform.class.$invalid}">
                                    <label class="col-md-3 control-label">
                                        Class
                                        <span class="required">*</span>
                                    </label>
                                    <div class="col-md-9">
                                        <select class="form-control" ng-model="section.ClassId" name="class" ng-change="GetGroup(section.ClassId)" required ng-options="class.ClassId as class.ClassName for class in CommonFeilds.ClassInfo | filter:{VersionId:studentInfo.VersionID}:true">
                                            <option value="" selected="selected">Choose Option</option>
                                        </select>
                                        <div class="form-control-focus"> </div>
                                        <span ng-show="submitted && addform.class.$error.required" class="help-block">Class Name Required</span>
                                    </div>
                                </div>
                               <div class="form-group" ng-class="{ 'has-error' : submitted && addform.section.$invalid}">
                                    <label class="col-md-3 control-label" for="form_control_1">
                                        Section
                                        <span class="required">*</span>
                                    </label>
                                    <div class="col-md-9">
                                        <input type="text" ng-model="section.SectionName" class="form-control" placeholder="Section" name="section" required>
                                        <div class="form-control-focus"> </div>
                                        <span ng-show="submitted && addform.section.$error.required" class="help-block">Section Required</span>
                                    </div>
                                </div>
                                <div class="form-group" ng-class="{ 'has-error' : submitted && addform.code.$invalid}">
                                    <label class="col-md-3 control-label" for="form_control_1">
                                        Code
                                        <span class="required">*</span>
                                    </label>
                                    <div class="col-md-9">
                                        <input type="text" ng-model="section.SectionCode"  ng-pattern="/^\S{0,50}$/" class="form-control" placeholder="Section Code" name="code" required>
                                        <div class="form-control-focus"> </div>
                                        <span ng-show="submitted && addform.code.$error.required" class="help-block">Code Required</span>
                                        <span style="color:red" class="help-block" ng-if="submitted && addform.code.$invalid">No Space Allow</span>
                                    </div>
                                </div>
                                <div class="form-group" ng-class="{ 'has-error' : submitted && addform.NoOfSeat.$invalid}">
                                    <label class="col-md-3 control-label" for="form_control_1">
                                        No. Of Seat
                                        <span class="required">*</span>
                                    </label>
                                    <div class="col-md-9">
                                        <input type="text" value="0" ng-model="section.NoOfSeat" ng-pattern="/^[0-9]\d{0,3}$/" class="form-control" placeholder="Section seat number" name="NoOfSeat" required>
                                        <div class="form-control-focus"> </div>
                                        <span ng-show="submitted && addform.NoOfSeat.$error.required" class="help-block">Number of Seat Required</span>
                                        <span style="color:red" class="help-block" ng-if="submitted && addform.NoOfSeat.$invalid">No Space Allow</span>
                                        <span style="color:red" class="help-block" ng-if="addform.NoOfSeat.$error.pattern">Operator Not Allow!</span>
                                    </div>
                                </div>
                                <div class="form-group" ng-class="{ 'has-error' : submitted && addform.LockOut.$invalid}">
                                    <label class="col-md-4 control-label" style="margin-top: 35px;">
                                        Lock Out :
                                    </label>
                                    <div class="col-md-8">
                                        <div uib-timepicker ng-model="section.LockOut" name="LockOut" ng-required="shift.LockOut==null" ng-change="changed()"
                                             hour-step="hstep" minute-step="mstep" show-meridian="true" readonly-time="true" readonly-date="true"
                                             disabled-date="true"></div>
                                        <div class="form-control-focus"> </div>
                                        <span ng-show="submitted &&  addform.LockOut.$error.required" class="help-block">Invalid Time </span>
                                    </div>
                                </div>
                                <div class="form-group" ng-class="{ 'has-error' : submitted && addform.PickUpTime.$invalid}">
                                    <label class="col-md-4 control-label" style="margin-top: 35px;">
                                        PickUp Time :
                                    </label>
                                    <div class="col-md-8">
                                        <div uib-timepicker ng-model="section.PickUpTime" name="PickUpTime" ng-required="shift.ShiftEndTime==null" ng-change="changed()"
                                             hour-step="hstep" minute-step="mstep" show-meridian="true" readonly-time="true" readonly-date="true"
                                             disabled-date="true"></div>
                                        <div class="form-control-focus"> </div>
                                        <span ng-show="submitted &&  addform.PickUpTime.$error.required" class="help-block">Invalid Time </span>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" data-dismiss="modal" class="btn dark btn-outline" ng-click="resetForm();submitted=false">Cancel</button>
                        <button type="submit" ng-click="submitted=true" class="btn green">Save</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <!--Modal Area End-->
</div>
@section Scripts{
    <script type="text/javascript">
        OEMSApp.controller("section", ["$scope", "$http", "SweetAlert",
           function ($scope, $http, SweetAlert) {
               init();
               function init() {
                   initialize();
                   getAllCommons();
                   getSections();
                   getBranchs(1)
               }
               function initialize() {
                   $scope.aemodalTitle = "Add Section";
                   $scope.currentPage = 1;
                   $scope.pageno = 1;
                   $scope.pagesize = 10;
                   $scope.total_count = 12;
                   $scope.search = '';
                   $scope.section = {};
                   $scope.section.GroupId = 0;
                   $scope.Sections = [];
                   $scope.Id = '';
                   $scope.res = {};
                   $scope.data = {};
                   $scope.resetForm = resetForm;
                   $scope.hstep = 1;
                   $scope.mstep = 15;
                   $scope.section.SectionId = 0;
                   $scope.Classes = [];
              
               
                   $scope.CommonFeilds = [];
               
                   $scope.getAllClasses = getAllClasses;
                   $scope.pageSizeArray = [];
                   $scope.pageSizeArray.push({ value: 5, text: 5 });
                   $scope.pageSizeArray.push({ value: 10, text: 10 });
                   $scope.pageSizeArray.push({ value: 20, text: 20 });
                   $scope.pageSizeArray.push({ value: 50, text: 50 });
                   $scope.currentPage = 1;
                   $scope.pageSize = 10;
                 
               }
               function resetForm() {
                   $scope.aemodalTitle = "Add Section";
                   $scope.section = {};
                   $scope.addform.$setUntouched();
                   $scope.addform.$setPristine();
                   $scope.submitted = false;
                   $scope.Id = '';
                   $scope.section.SectionId = 0;
                   getSections(1);
               }
               function getBranchs(pageno) {
                   $scope.Branchs = [];
                   $http({
                       method: 'GET',
                       url: baseUrl + 'SetupInstitution/GetAllBranchs/'
                   }).then(function successCallback(response) {
                       $scope.Branchs = response.data;
                   }, function errorCallback(response) {
                       toastr["warning"](response.data.Message);
                   });
               }
               function getSections() {
                   $scope.Sections = [];
                   $http({
                       method: 'GET',
                       url: baseUrl + 'SetupInstitution/GetAllSectionInfo/'
                   }).then(function successCallback(response) {
                       // this callback will be called asynchronously
                       // when the response is available
                       $scope.Sections = response.data;
                       // $scope.AspNetRoles = response.data;
                       $scope.total_count = response.data.totalcount;
                       //console.log(response.data);
                   }, function errorCallback(response) {
                       toastr["warning"](response.data.Message);
                   });
                   //$scope.AspNetRoles = $scope.data;
                   //console.log($scope.data.totalcount);
                   // $scope.totalcount = 3; //$scope.data.totalcount;
               }
               $scope.searchData = function () {
                   getSections(1);
                   // $scope.total_count = 88;
               };
               $scope.edit = function (n) {
                   $scope.section = {};
               
                   $scope.aemodalTitle = "Update Section";
                 
                   setTimeout($scope.section = n, 20000);
                   $scope.SectionId = n.SectionId;
                
               };
               $scope.save = function save() {
                   if ($scope.addform.$invalid)
                       return;
                   if ($scope.section.SectionId != 0) /// For Update
                   {
                       if ($scope.section != '') {
                           $http({
                               method: 'PUT',
                               url: baseUrl + 'SetupInstitution/UpdateSectionInfo/',
                               data: $scope.section
                           }).then(function successCallback(response) {
                               $('#addmodal').modal('toggle');
                               getSections(1);
                               toastr["info"](response.data.message);
                               resetForm();
                           }, function errorCallback(response) {
                               toastr["warning"](response.data.Message);
                           });
                       }
                   } else {  //  For Add
                       if ($scope.section != {}) {
                           $http({
                               method: 'POST',
                               url: baseUrl + 'SetupInstitution/AddSection/',
                               data:$scope.section
                           }).then(function successCallback(response) {

                               $('#addmodal').modal('toggle');
                               getSections(1);
                               toastr["info"](response.data.message);
                               resetForm();
                           }, function errorCallback(response) {
                               toastr["warning"](response.data.Message);
                           });
                       }
                   }
               };
               $scope.deletesection = function deletesection(n) {
                   // SweetAlert.swal("Good job!", "You clicked the button!", "success");
                   SweetAlert.swal({
                       title: "Are you sure to delete it ?", type: "warning", showCancelButton: true, confirmButtonColor: "#DD6B55",
                       confirmButtonText: "Yes, delete it!",
                       closeOnConfirm: false
                   },
                   function (isConfirm) {
                       if (isConfirm) {
                           $http({
                               method: 'DELETE',
                               url: baseUrl + 'SetupInstitution/DeleteSection/' + n.SectionId
                           }).then(function successCallback(response) {
                               SweetAlert.swal("Deleted!", "Your data has been deleted.", "success");
                               getSections(1);
                           }, function errorCallback(response) {
                               toastr["info"](response.data.message);
                           });
                       }
                   });
               };
          
               function getAllClasses() {
                   $http({
                       method: 'GET',
                       url: baseUrl + 'SetupInstitution/GetClass/'
                   }).then(function successCallback(response) {
                       $scope.Classes = response.data.results;
                   }, function errorCallback(response) {
                       toastr["info"](response.data.message);
                   });
               }
        
               function getAllCommons() {
                   $scope.CommonFeilds = [];
                   $http({
                       method: 'GET',
                       url: baseUrl + 'Common/GetCommonItem/'
                   }).then(function successCallback(response) {
                       $scope.CommonFeilds = response.data.results;
                   }, function errorCallback(response) {
                       toastr["info"](response.data.message);
                   });
               }
            
           }]);
    </script>



}