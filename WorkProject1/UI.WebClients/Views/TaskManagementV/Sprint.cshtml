
@{
    ViewBag.Title = "Sprint";
}

<div class="kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid" ng-controller="ctrlSprint">
    <div class="row">
        <div class="kt-portlet kt-portlet--mobile">
            <div class="kt-portlet__head kt-portlet__head--lg">
                <div class="kt-portlet__head-label">
                    <h3 class="kt-portlet__head-title">
                        All Sprint
                    </h3>
                </div>
                <div class="kt-portlet__head-toolbar">
                    <div class="kt-portlet__head-wrapper">
                        <div class="dropdown dropdown-inline">
                            <button type="button" ng-click="resetForm();submitted=false" class="btn btn-brand btn-icon-sm" data-toggle="modal" data-target="#addmodal" aria-haspopup="true" aria-expanded="false">
                                <i class="flaticon2-plus"></i> Add New Sprint
                            </button>

                        </div>
                    </div>
                </div>
            </div>

            <div class="kt-portlet__body">


                <div class="row">
                    <div class="col-md-4 col-sm-5 col-xs-6">
                        <div class="form-group">
                            <div class="col-lg-3 col-md-5 col-sm-4 col-xs-8" style="padding-left:0px">

                                <select class="form-control kt-font-brand" ng-model="pageSize" ng-options="P.value as P.text for P in pageSizeArray"></select>
                            </div>

                        </div>

                    </div>
                    <div class="col-md-4 col-sm-3 col-xs-1">
                    </div>
                    <div class="col-md-4 col-sm-4 col-xs-5">
                        <div id="sample_3_filter" class="pull-right">
                            <input ng-model="q" id="search" class="form-control" placeholder="Filter text">
                        </div>
                    </div>
                </div>
                <table class="table table-bordered table-hover rounded">
                    <thead>
                        <tr class="btn-primary">
                            @*<th>SL#</th>*@
                            <th>Project</th>
                            <th>Sprint Title</th>
                            <th>Start Date</th>
                            <th>End Date</th>
                            <th>Goal</th>
                            <th>Start Status</th>
                            <th style="text-align:center">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr ng-show="SprintList.length <= 0"><td colspan="5" style="text-align:center;"><i class="fa fa-refresh"></i> Loading new data!!</td></tr>
                        <tr dir-paginate="item in SprintList| filter:q  | itemsPerPage: pageSize" current-page="currentPage">
                            @*<td>{{$index+1}}</td>*@
                            <td>{{item.ProjectName}} </td>
                            <td>{{item.SprintTitle}} </td>
                            <td>{{item.StartDate | date:'dd/MM/yyyy'}}</td>
                            <td>{{item.EndDate | date:'dd/MM/yyyy'}}</td>
                            <td>{{item.Goal}} </td>
                            <td ng-if="item.IsStart=='1' && item.Completed=='0'"> Yes</td>
                            <td ng-if="item.IsStart=='0'"> No</td>
                            <td ng-if="item.IsStart=='1' && item.Completed=='1'"> Done</td>
                            <td align="center">
                                <a class="btn btn-outline-brand btn-elevate btn-icon" ng-click="editSprint(item)" data-target="#addmodal" data-toggle="modal">
                                    <i class="fa fa-edit"></i>
                                </a>
                                <a class="btn btn-outline-danger btn-elevate btn-icon" ng-click="deleteSprint(item.Id)" href="javascript:;">
                                    <i class="fa fa-trash"></i>
                                </a>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <div class="row">
                    <dir-pagination-controls boundary-links="true" template-url="~/assets/angular/lib/dirPagination.tpl.html"></dir-pagination-controls>
                </div>
            </div>
        </div>
    </div>

    <!--Modal Area Start-->
    <div id="addmodal" class="modal fade" tabindex="-1" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog">
            <div class="modal-content">
                <form name="addBasic" ng-submit="save()" class="form-horizontal" id="form_sample_1" novalidate autocomplete="off">
                    <div class="modal-header">
                        <h5 class="modal-title">{{modalTitle}}</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true" ng-click="resetForm();submitted=false"></button>

                    </div>
                    <div class="modal-body">
                        <div class="form-body">
                            <div class="row">
                                <div class="col-md-12">


                                    <div class="form-group row" ng-class="{ 'has-error' : submitted && addBasic.Project.$invalid}">
                                        <label class="col-md-4 control-label text-right">
                                            Project :
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-8">
                                            <select class="form-control" ng-model="SprintInfo.ProjectId" required name="Project" ng-options="aProject.Id as aProject.ProjectName for aProject in ProjectList">
                                                <option value="" selected="selected">Choose an Option</option>
                                            </select>
                                            <div class="form-control-focus"> </div>
                                            <span ng-show="submitted && addBasic.Project.$error.required" class="help-block">Project Required</span>
                                        </div>
                                    </div>


                                    <div class="form-group row" ng-class="{ 'has-error' : submitted && addBasic.SprintTitle.$invalid}">
                                        <label class="col-md-4 control-label text-right">
                                            Sprint Title :
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-8">
                                            <input type="text" ng-model="SprintInfo.SprintTitle" class="form-control" placeholder="Sprint Name" name="SprintTitle" required>
                                            <div class="form-control-focus"> </div>
                                            <span ng-show="submitted &&  addBasic.SprintTitle.$error.required" class="help-block">Sprint Title Required</span>
                                        </div>
                                    </div>

                                    <div class="form-group row" ng-class="{ 'has-error' : submitted && addBasic.StartDate.$invalid}">
                                        <label class="col-md-4 control-label text-right">
                                            Start Date :
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-8">
                                            <input type="text" class="form-control" ng-change="check()" uib-datepicker-popup="dd/MM/yyyy" datepicker-options="dateOptions" placeholder="Start Date" name="StartDate" ng-model="SprintInfo.SprintStartDate" is-open="strat.opened" ng-click="strat.opened=true" ng-required="true" close-text="Close" readonly="readonly" />
                                            <div class="form-control-focus"> </div>
                                            <span ng-show="submitted &&  addBasic.StartDate.$error.required" class="help-block">Start Date Required</span>
                                        </div>
                                    </div>

                                    <div class="form-group row" @*ng-class="{ 'has-error' : submitted && addBasic.EndDate.$invalid}"*@>
                                        <label class="col-md-4 control-label text-right">
                                            End Date :
                                            @*<span class="required">*</span>*@
                                        </label>
                                        <div class="col-md-8">
                                            <input type="text" class="form-control" uib-datepicker-popup="dd/MM/yyyy" datepicker-options="dateOptionsEnd" placeholder="End Date" name="EndDate" ng-model="SprintInfo.SprintEndDate" is-open="end.opened" ng-click="end.opened=true" ng-required="false" close-text="Close" readonly="readonly" />
                                            @*<div class="form-control-focus"> </div>
                                                <span ng-show="submitted &&  addBasic.EndDate.$error.required" class="help-block">End Date Required</span>*@
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        <label class="col-md-4 control-label text-right">
                                            Goal :
                                        </label>
                                        <div class="col-md-8">
                                            <textarea class="form-control" ng-model="SprintInfo.Goal" id="exampleFormControlTextarea1" rows="1" placeholder="Goal Info.."></textarea>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" data-dismiss="modal" class="btn btn-secondary" ng-click="resetForm();submitted=false">Cancel</button>
                        <button type="submit" ng-click="submitted=true" class="btn btn-success">{{modalbutton}}</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <!--Modal Area End-->
</div>
<!-- END FORM-->
@section Scripts{

    <script type="text/javascript">
        OEMSApp.controller("ctrlSprint", ["$scope", "$http", "SweetAlert",
              function ($scope, $http, SweetAlert) {
                  init();
                  function init() {
                      initialize();
                      getAllSprint();
                      getProjectList();
                  }

                  function initialize() {
                      $scope.modalbutton = 'Save';
                      $scope.modalTitle = 'Add New Sprint';
                      $scope.SprintInfo = {};
                      $scope.SprintInfo.Id = 0;
                      $scope.SprintList = [];
                      $scope.resetForm = resetForm;
                      $scope.pageSize = 10;
                      $scope.pageSizeArray = [];
                      $scope.pageSizeArray.push({ value: 5, text: 5 });
                      $scope.pageSizeArray.push({ value: 10, text: 10 });
                      $scope.pageSizeArray.push({ value: 20, text: 20 });
                      $scope.pageSizeArray.push({ value: 50, text: 50 });
                      $scope.currentPage = 1;
                      $scope.ProjectList = getProjectList;
                      $scope.ProjectList = [];
                      $scope.Project = {};
                      $scope.Project.Id = 0;
                      $scope.dateOptions = { minDate: new Date() };

                  }

                  function resetForm() {
                      $scope.modalTitle = "Add New Sprint";
                      $scope.SprintInfo = {};
                      $scope.SprintInfo.Id = 0;
                      $scope.addBasic.$setUntouched();
                      $scope.addBasic.$setPristine();
                      $scope.modalbutton = 'Save';
                      $scope.Project = {};
                      $scope.Project.Id = 0;
                  }

                  $scope.check = function () {
                      $scope.dateOptionsEnd = { minDate: $scope.SprintInfo.SprintStartDate };
                  }


                  $scope.save = function save() {
                      if ($scope.addBasic.$invalid) {
                          console.log($scope.addBasic.$invalid);
                          return;
                      }
                      else {

                          if ($scope.SprintInfo.Id == 0) {

                              $http({
                                  method: 'POST',
                                  url: baseUrl + 'TaskManagement/AddSprint',
                                  data: $scope.SprintInfo
                              }).then(function successCallback(response) {
                                  $('#addmodal').modal('toggle');
                                  toastr["info"](response.data.message);
                                  getAllSprint();
                                  resetForm();
                              }, function errorCallback(response) {
                                  toastr["warning"](response.data.Message);
                              });
                          }
                          else {
                              $http({
                                  method: 'PUT',
                                  url: baseUrl + 'TaskManagement/UpdateSprint',
                                  data: $scope.SprintInfo
                              }).then(function successCallback(response) {
                                  toastr["info"](response.data.message);
                                  if (response.data.httpStatusCode != 305) {
                                      $('#addmodal').modal('toggle');
                                      getAllSprint();
                                      resetForm();
                                  }
                              }, function errorCallback(response) {
                                  toastr["warning"](response.data.Message);
                              });
                          }
                      }
                  }

                  function validation() {

                      var sdate = new Date();
                      sdate.setDate(sdate.getDate() - 1);

                      if ($scope.SprintInfo.SprintStartDate < sdate) {
                          toastr["warning"]("Please Select Valid Start date..!");
                          return false;
                      } else if ($scope.SprintInfo.SprintEndDate < $scope.SprintInfo.SprintStartDate) {
                          toastr["warning"]("Please Select Valid End date..!");
                          return false;
                      } else {
                          return true;
                      }
                  }

                  $scope.deleteSprint = function deleteSprint(id) {
                      SweetAlert.swal({
                          title: "Are you sure to delete it ?", type: "warning", showCancelButton: true, confirmButtonColor: "#DD6B55",
                          confirmButtonText: "Yes, delete it!",
                          closeOnConfirm: false
                      },
                        function (isConfirm) {
                            if (isConfirm) {
                                $http({
                                    method: 'DELETE',
                                    url: baseUrl + 'TaskManagement/DeleteSprint/' + id,
                                }).then(function successCallback(response) {
                                    SweetAlert.swal("Deleted!", "Your data has been deleted.", "success");
                                    getAllSprint();
                                }, function errorCallback(response) {
                                    toastr["error"](response.data.Message);
                                });
                            }
                        });
                  }

                  $scope.editSprint = function editSprint(item) {
                      $scope.modalTitle = "Update Sprint";
                      $scope.modalbutton = 'Update';
                      $scope.SprintInfo.Id = item.Id;
                      $scope.SprintInfo.SprintTitle = item.SprintTitle;
                      $scope.SprintInfo.SprintStartDate = new Date(item.StartDate);
                      $scope.SprintInfo.SprintEndDate = new Date(item.EndDate);
                      $scope.SprintInfo.IsStart = item.IsStart;
                      $scope.SprintInfo.Goal = item.Goal;
                      $scope.SprintInfo.ProjectId = item.ProjectId;

                  }

                  function getAllSprint() {
                      $scope.SprintList = [];
                      $http({
                          method: 'GET',
                          url: baseUrl + 'TaskManagement/GetAllSprint/'
                      }).then(function successCallback(response) {
                          $scope.SprintList = response.data.results;
                          console.log($scope.SprintList)
                      }, function errorCallback(response) {
                          toastr["info"](response.data.Message);
                      });
                  }

                  function getProjectList() {
                      $scope.ProjectList = [];
                      $http({
                          method: 'GET',
                          url: baseUrl + 'TaskManagement/GetAllActiveProject/'
                      }).then(function successCallback(response) {
                          $scope.ProjectList = response.data.results;
                          console.log($scope.ProjectList);
                      }, function errorCallback(response) {
                          toastr["warning"](response.data.Message);
                      });
                  }

              }]);

    </script>
}

