
@{
    ViewBag.Title = "Project";
}

<div class="kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid" ng-controller="ctrlProject">
    <div class="row">
        <div class="kt-portlet kt-portlet--mobile">
            <div class="kt-portlet__head kt-portlet__head--lg">
                <div class="kt-portlet__head-label">
                    <span class="kt-portlet__head-icon">
                        <i class="kt-font-brand flaticon2-line-chart"></i>
                    </span>
                    <h3 class="kt-portlet__head-title">
                        <!----Titel Text-->
                        All Project
                        <!----Titel Text -->
                    </h3>
                </div>
                <div class="kt-portlet__head-toolbar">
                    <div class="kt-portlet__head-wrapper">
                        <div class="dropdown dropdown-inline">
                            <button type="button" ng-click="submitted=false" class="btn btn-brand btn-icon-sm" data-toggle="modal" data-target="#addmodal" aria-haspopup="true" aria-expanded="false">
                                <!----Add Button -->
                                <i class="flaticon2-plus"></i>  Add New Project
                                <!----Add Button -->
                            </button>

                        </div>
                    </div>
                </div>
            </div>

            <div class="kt-portlet__body">


                <div class="row">
                    <div class="col-md-4 col-sm-5 col-xs-6">
                        <div class="form-group">
                            <div class="col-lg-3 col-md-5 col-sm-4 col-xs-8" style="padding-left:0px">

                                <select class="form-control kt-font-brand" ng-model="pagesize" ng-options="P.value as P.text for P in pageSizeArray"></select>
                            </div>

                        </div>

                    </div>
                    <div class="col-md-4 col-sm-3 col-xs-1">
                    </div>
                    <div class="col-md-4 col-sm-4 col-xs-5">
                        <div id="sample_3_filter" class="pull-right">
                            <input ng-model="q" id="search" class="form-control" placeholder="Filter text">
                        </div>
                    </div>
                </div>
                <table class="table table-bordered table-hover rounded">
                    <thead>
                        <tr class="btn-primary">
                            <th>SL</th>
                            <th>Project Name</th>
                            <th>Expire Date</th>
                            <th>Status</th>
                            <th style="text-align:center">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr ng-show="projectList.length <= 0"><td colspan="5" style="text-align:center;"><i class="fa fa-refresh"></i> Loading new data!!</td></tr>
                        <tr dir-paginate="item in projectList| filter:q  | itemsPerPage: pageSize" current-page="currentPage">
                            <td>{{$index+1}}</td>
                            <td>{{item.ProjectName}} </td>
                            <td>{{item.ExpireDate | date:'dd/MM/yyyy'}}</td>
                            <td ng-if="item.Status=='A'"> Active</td>
                            <td ng-if="item.Status=='I'"> Inactive</td>

                            <td align="center">
                                <a class="btn btn-outline-brand btn-elevate btn-icon" ng-click="editProject(item)" data-target="#addmodal" data-toggle="modal">
                                    <i class="fa fa-edit"></i>
                                </a>
                                <a ng-click="deleteProject(item.Id)" href="javascript:;" class="btn btn-outline-brand btn-elevate btn-icon">
                                    <i class="fa fa-trash"></i>
                                </a>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <div class="row">
                    <dir-pagination-controls boundary-links="true" template-url="~/assets/angular/lib/dirPagination.tpl.html"></dir-pagination-controls>
                </div>
            </div>
        </div>
    </div>
   </div>

    <div class="portlet box blue-hoki" style="width: 100%" ng-controller="ctrlProject">
        

        <!--Modal Area Start-->
        <div id="addmodal" class="modal fade" tabindex="-1" data-backdrop="static" data-keyboard="false">
            <div class="modal-dialog">
                <div class="modal-content">
                    <form name="addBasic" ng-submit="save()" class="form-horizontal" id="form_sample_1" novalidate autocomplete="off">
                        <div class="modal-header">
                            <h5 class="modal-title">{{modalTitle}}</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true" ng-click="resetForm();submitted=false"></button>
                        </div>
                        <div class="modal-body">
                            <div class="form-body">
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group" ng-class="{ 'has-error' : submitted && addBasic.ProjectName.$invalid}">
                                            <label class="col-md-4 control-label">
                                                Project Full Name :
                                                <span class="required">*</span>
                                            </label>
                                            <div class="col-md-8">
                                                <input type="text" ng-model="projectInfo.ProjectName" class="form-control" placeholder="Project Name" name="ProjectName" required>
                                                <div class="form-control-focus"> </div>
                                                <span ng-show="submitted &&  addBasic.ProjectName.$error.required" class="help-block">Project Name Required</span>
                                            </div>
                                        </div>

                                        <div class="form-group" ng-class="{ 'has-error' : submitted && addBasic.ExpireDate.$invalid}">
                                            <label class="col-md-4 control-label">
                                                Expire Date :
                                                @*<span class="required">*</span>*@
                                            </label>
                                            <div class="col-md-8">
                                                <input type="text" class="form-control" uib-datepicker-popup="dd/MM/yyyy" placeholder="Expire Date" name="ExpireDate" ng-model="projectInfo.Date" @*min-date="projectInfo.ExpireDate"*@ is-open="popup2.opened" ng-click="popup2.opened=true" ng-required="false" close-text="Close" @*alt-input-formats="altInputFormats"*@ readonly="readonly" />
                                                @*<div class="form-control-focus"> </div>
                                                    <span ng-show="submitted &&  addBasic.ExpireDate.$error.required" class="help-block">Expire Date Required</span>*@
                                            </div>
                                        </div>

                                        <div class="form-group" ng-class="{ 'has-error' : submitted && addBasic.Status.$invalid}">
                                            <label class="col-md-4 control-label">
                                                Status :
                                                @*<span class="required">*</span>*@
                                            </label>
                                            <div class="col-md-8">
                                                <select ng-model="projectInfo.Status" class="form-control" placeholder="Status" name="Status">
                                                    <option value=''>Choose Option</option>
                                                    <option value='A'>Active</option>
                                                    <option value='I'>Inactive</option>
                                                </select>
                                                @*<div class="form-control-focus"> </div>
                                                    <span ng-show="submitted &&  addBasic.Status.$error.required" class="help-block">Status Required</span>*@
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="col-md-4 control-label">
                                                IsSupport : <input type="checkbox" name="IsSupport" ng-model="projectInfo.IsSupport" ng-checked="projectInfo.IsSupport==true" />
                                            </label>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" data-dismiss="modal" class="btn dark btn-outline" ng-click="resetForm();submitted=false">Cancel</button>
                            <button type="submit" ng-click="submitted=true" class="btn green-haze">{{modalbutton}}</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <!--Modal Area End-->
    </div>
    <!-- END FORM-->
    @section Scripts{

        <script type="text/javascript">
            OEMSApp.controller("ctrlProject", ["$scope", "$http", "SweetAlert",
                  function ($scope, $http, SweetAlert) {
                      init();
                      function init() {
                          initialize();
                          getAllProject();
                      }

                      function initialize() {
                          $scope.modalbutton = 'Save';
                          $scope.modalTitle = 'Add New Project';
                          $scope.projectInfo = {};
                          $scope.projectInfo.Id = 0;
                          $scope.projectList = [];
                          $scope.resetForm = resetForm;
                          $scope.pagesize = 10;
                          $scope.pageSizeArray = [];
                          $scope.pageSizeArray.push({ value: 5, text: 5 });
                          $scope.pageSizeArray.push({ value: 10, text: 10 });
                          $scope.pageSizeArray.push({ value: 20, text: 20 });
                          $scope.pageSizeArray.push({ value: 50, text: 50 });
                          $scope.currentPage = 1;

                      }

                      function resetForm() {
                          $scope.modalTitle = "Add New Project";
                          $scope.projectInfo = {};
                          $scope.projectInfo.Id = 0;
                          $scope.addBasic.$setUntouched();
                          $scope.addBasic.$setPristine();
                          $scope.modalbutton = 'Save';
                      }

                      $scope.save = function save() {
                          if ($scope.addBasic.$invalid)
                              return;
                          else {
                              console.log($scope.projectInfo);
                              var result = validation();
                              if (result) {
                                  if ($scope.projectInfo.Id == 0) { // Add
                                      $http({
                                          method: 'POST',
                                          url: baseUrl + 'TaskManagement/AddProject',
                                          data: $scope.projectInfo
                                      }).then(function successCallback(response) {
                                          $('#addmodal').modal('toggle');
                                          toastr["info"](response.data.message);
                                          getAllProject();
                                          resetForm();
                                      }, function errorCallback(response) {
                                          toastr["warning"](response.data.Message);
                                      });
                                  } else { // Update
                                      $http({
                                          method: 'PUT',
                                          url: baseUrl + 'TaskManagement/UpdateProject',
                                          data: $scope.projectInfo
                                      }).then(function successCallback(response) {
                                          toastr["info"](response.data.message);
                                          if (response.data.httpStatusCode != 305) {
                                              $('#addmodal').modal('toggle');
                                              getAllProject();
                                              resetForm();
                                          }

                                      }, function errorCallback(response) {
                                          toastr["warning"](response.data.Message);
                                      });
                                  }


                              }
                          }
                      }

                      function validation() {
                          var sdate = new Date();
                          sdate.setDate(sdate.getDate() - 1);

                          if ($scope.projectInfo.Date < sdate) {
                              toastr["warning"]("Please Select Valid date..!");
                              return false;
                          } else {
                              return true;
                          }
                      }

                      $scope.deleteProject = function deleteProject(id) {
                          SweetAlert.swal({
                              title: "Are you sure to delete it ?", type: "warning", showCancelButton: true, confirmButtonColor: "#DD6B55",
                              confirmButtonText: "Yes, delete it!",
                              closeOnConfirm: false
                          },
                            function (isConfirm) {
                                if (isConfirm) {
                                    $http({
                                        method: 'DELETE',
                                        url: baseUrl + 'TaskManagement/DeleteProject/' + id,
                                    }).then(function successCallback(response) {
                                        SweetAlert.swal("Deleted!", "Your data has been deleted.", "success");
                                        getAllProject();
                                    }, function errorCallback(response) {
                                        toastr["error"](response.data.Message);
                                    });
                                }
                            });
                      }

                      $scope.editProject = function editProject(item) {
                          $scope.projectInfo = {};
                          $scope.modalTitle = "Update Project";
                          $scope.modalbutton = 'Update';
                          $scope.projectInfo.Id = item.Id;
                          $scope.projectInfo.ProjectName = item.ProjectName;
                          $scope.projectInfo.Date = new Date(item.ExpireDate);
                          $scope.projectInfo.Status = item.Status;
                          $scope.projectInfo.IsSupport = item.IsSupport;

                      }

                      function getAllProject() {
                          $scope.projectList = [];
                          $http({
                              method: 'GET',
                              url: baseUrl + 'TaskManagement/GetAllProject/'
                          }).then(function successCallback(response) {
                              $scope.projectList = response.data.results;
                          }, function errorCallback(response) {
                              toastr["info"](response.data.Message);
                          });
                      }




                      //function validation() {

                      //    if ($scope.projectInfo.Id == undefined) {
                      //        return true;
                      //    }
                      //    else {
                      //        if ($scope.projectInfo.Status == null) {
                      //            toastr["info"]("Please Select Sany option..!");
                      //            return false;
                      //        }

                      //        else {
                      //            //$scope.projectInfo.ActivityStatus = $scope.projectInfo.ActivityStatus;
                      //            return true;
                      //        }
                      //    }
                      //}
                  }]);

        </script>
    }

