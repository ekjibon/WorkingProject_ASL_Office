
@{
    ViewBag.Title = "Alert Setting";
}

<div class="portlet box blue-hoki" style="width: 100%" ng-controller="ctrlAlertSetting">
    <!-- Begin: life time stats -->
    <div class="portlet light bordered">
        <div class="portlet-title">
            <div class="caption">
                <i class="icon-settings font-green"></i>
                <span class="caption-subject font-green sbold uppercase">Alert Setting</span>
            </div>
            <div class="actions">
                <div class="btn-group btn-group-solid">
                    <button ng-click="submitted=false" class="btn green" data-target="#addmodal" data-toggle="modal"> <i class="fa fa-plus"></i> Add New Alert Setting</button>
                </div>
            </div>
        </div>
        <div class="portlet-body">
            <div class="table-container">
                <div id="sample_3_wrapper" class="dataTables_wrapper no-footer">
                    <div class="row">
                        <div class="col-md-4 col-sm-5 col-xs-6">
                            <div class="form-group">
                                <div class="col-lg-3 col-md-5 col-sm-4 col-xs-8" style="padding-left:0px">
                                    <select class="form-control" ng-model="pageSize" ng-options="P.value as P.text for P in pageSizeArray"></select>
                                </div>
                                <div class="col-md-7  col-sm-8  col-xs-4">
                                    @*<label for="search" class="control-label" style="padding-top:5px">Items</label>*@
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 col-sm-3 col-xs-1">
                        </div>
                        <div class="col-md-4 col-sm-4 col-xs-5">
                            <div id="sample_3_filter" class="pull-right">
                                <input ng-model="q" id="search" class="form-control" placeholder="Filter text">
                            </div>
                        </div>
                    </div>
                    <div class="table-scrollable"> </div>
                    <table class="table table-bordered table-hover">
                        <thead>
                            <tr class="btn-primary">
                                <th>SL#</th>
                                <th>Alert Type</th>
                                <th>From Address</th>
                                <th>To Address</th>
                                <th>CC Address</th>
                                <th>BCC Address</th>
                                <th>Subject</th>
                                <th>Destination Mobile No</th>
                                <th>Body</th>
                                <th style="text-align:center">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr ng-show="alertSettingList.length <= 0"><td colspan="5" style="text-align:center;"><i class="fa fa-refresh"></i> Loading new data!!</td></tr>
                            <tr dir-paginate="item in alertSettingList| filter:q  | itemsPerPage: pageSize" current-page="currentPage">
                                <td>{{$index+1}}</td>

                                <td align="center" ng-if="item.AlertType=='Attendance'">
                                    Attendance
                                </td>
                                <td align="center" ng-if="item.AlertType=='Email'">
                                    Email
                                </td>
                                <td align="center" ng-if="item.AlertType=='User Activity'">
                                    User Activity
                                </td>

                                <td>{{item.FromAddress}}</td>
                                <td>{{item.ToAddress}}</td>
                                <td>{{item.CCAddress}}</td>
                                <td>{{item.BCCAddress}}</td>
                                <td>{{item.Subject}}</td>
                                <td>{{item.DestinationMobileNo}}</td>
                                <td>{{item.Body}}</td>

                                <td align="center">
                                    <a href="javascript:;" class="btn btn-icon-only green" ng-click="editAlertSetting(item)" data-target="#addmodal" data-toggle="modal">
                                        <i class="fa fa-edit"></i>
                                    </a>
                                    <a ng-click="deleteAlertSetting(item.Id)" href="javascript:;" class="btn btn-icon-only red">
                                        <i class="fa fa-trash"></i>
                                    </a>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <div class="row">
                        <dir-pagination-controls boundary-links="true" template-url="~/assets/angular/lib/dirPagination.tpl.html"></dir-pagination-controls>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- End: life time stats -->
    <!--Modal Area Start-->
    <div id="addmodal" class="modal fade" tabindex="-1" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog">
            <div class="modal-content">
                <form name="addBasic" ng-submit="save()" class="form-horizontal" id="form_sample_1" novalidate autocomplete="off">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true" ng-click="resetForm();submitted=false">X</button>
                        <h4 class="modal-title">{{modalTitle}}</h4>
                    </div>
                    <div class="modal-body">
                        <div class="form-body">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group" ng-class="{ 'has-error' : submitted && addBasic.AlertType.$invalid}">
                                        <label class="col-md-4 control-label">
                                            Alert Type :
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-8">
                                            <select class="form-control" ng-model="alertSettingInfo.AlertType" required name="AlertType" ng-options="alertSettingInfo.Value as alertSettingInfo.Text for alertSettingInfo in Dropdowns | filter:Type='AlertType'">
                                                <option value="" selected="selected">Choose Option</option>
                                            </select>
                                            <div class="form-control-focus"> </div>
                                            <span ng-show="submitted && addBasic.AlertType.$error.required" class="help-block">Alert Type Required</span>
                                        </div>
                                    </div>

                                    <div class="form-group" ng-class="{ 'has-error' : submitted && addBasic.FromAddress.$invalid}">
                                        <label class="col-md-4 control-label">
                                            From Address :
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-8">
                                            <input type="text" ng-model="alertSettingInfo.FromAddress" class="form-control" placeholder="From Address" name="FromAddress" required>
                                            <div class="form-control-focus"> </div>
                                            <span ng-show="submitted &&  addBasic.FromAddress.$error.required" class="help-block">From Address Required</span>
                                        </div>
                                    </div>

                                    <div class="form-group" ng-class="{ 'has-error' : submitted && addBasic.ToAddress.$invalid}">
                                        <label class="col-md-4 control-label">
                                            To Address :
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-8">
                                            <input type="text" ng-model="alertSettingInfo.ToAddress" class="form-control" placeholder="To Address" name="ToAddress" required>
                                            <div class="form-control-focus"> </div>
                                            <span ng-show="submitted &&  addBasic.ToAddress.$error.required" class="help-block">AlertSetting Short Name Required</span>
                                        </div>
                                    </div>

                                    <div class="form-group" ng-class="{ 'has-error' : submitted && addBasic.CCAddress.$invalid}">
                                        <label class="col-md-4 control-label">
                                            CC Address :
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-8">
                                            <input type="text" ng-model="alertSettingInfo.CCAddress" class="form-control" placeholder="CC Address" name="CCAddress" required>
                                            <div class="form-control-focus"> </div>
                                            <span ng-show="submitted &&  addBasic.CCAddress.$error.required" class="help-block">CC Address Required</span>
                                        </div>
                                    </div>

                                    <div class="form-group" ng-class="{ 'has-error' : submitted && addBasic.BCCAddress.$invalid}">
                                        <label class="col-md-4 control-label">
                                            BCC Address :
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-8">
                                            <input type="text" ng-model="alertSettingInfo.BCCAddress" class="form-control" placeholder="BCC Address" name="BCCAddress" required>
                                            <div class="form-control-focus"> </div>
                                            <span ng-show="submitted &&  addBasic.BCCAddress.$error.required" class="help-block">BCC Address Required</span>
                                        </div>
                                    </div>

                                    <div class="form-group" ng-class="{ 'has-error' : submitted && addBasic.Subject.$invalid}">
                                        <label class="col-md-4 control-label">
                                            Subject :
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-8">
                                            <input type="text" ng-model="alertSettingInfo.Subject" class="form-control" placeholder="Subject" name="Subject" required>
                                            <div class="form-control-focus"> </div>
                                            <span ng-show="submitted &&  addBasic.Subject.$error.required" class="help-block">Subject Required</span>
                                        </div>
                                    </div>

                                    <div class="form-group" ng-class="{ 'has-error' : submitted && addBasic.DestinationMobileNo.$invalid}">
                                        <label class="col-md-4 control-label">
                                            Dest. MobileNo :
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-8">
                                            <input type="text" ng-model="alertSettingInfo.DestinationMobileNo" class="form-control" placeholder="Destination Mobile No" name="DestinationMobileNo" required>
                                            <div class="form-control-focus"> </div>
                                            <span ng-show="submitted &&  addBasic.DestinationMobileNo.$error.required" class="help-block">Destination Mobile No Required</span>
                                        </div>
                                    </div>

                                    <div class="form-group" ng-class="{ 'has-error' : submitted && addBasic.Body.$invalid}">
                                        <label class="col-md-4 control-label">
                                            Body :
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-8">
                                            <textarea type="text" ng-model="alertSettingInfo.Body" class="form-control" placeholder="Body" name="Body" required></textarea>
                                            @*<input type="text" ng-model="alertSettingInfo.Body" class="form-control" placeholder="Body" name="Body" required>*@
                                            <div class="form-control-focus"> </div>
                                            <span ng-show="submitted &&  addBasic.Body.$error.required" class="help-block">Body Required</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" data-dismiss="modal" class="btn dark btn-outline" ng-click="resetForm();submitted=false">Cancel</button>
                        <button type="submit" ng-click="submitted=true" class="btn green-haze">{{modalbutton}}</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <!--Modal Area End-->
</div>
<!-- END FORM-->
@section Scripts{

    <script type="text/javascript">
        OEMSApp.controller("ctrlAlertSetting", ["$scope", "$http", "SweetAlert",
              function ($scope, $http, SweetAlert) {
                  init();
                  function init() {
                      initialize();
                      getAllAlertSetting();
                      getAllDropdowns();
                  }

                  function initialize() {
                      $scope.modalbutton = 'Save';
                      $scope.modalTitle = 'All Alert Setting';

                      $scope.Dropdowns = [];
                      $scope.getAllDropdowns = getAllDropdowns;
                      //new AlertSetting
                      $scope.alertSettingInfo = {};
                      $scope.alertSettingInfos = [];
                      $scope.alertSettingList = [];
                      $scope.resetForm = resetForm;

                      $scope.checkUpdateId = 0;
                      $scope.pagesize = 10;
                      $scope.pageSizeArray = [];
                      $scope.pageSizeArray.push({ value: 5, text: 5 });
                      $scope.pageSizeArray.push({ value: 10, text: 10 });
                      $scope.pageSizeArray.push({ value: 20, text: 20 });
                      $scope.pageSizeArray.push({ value: 50, text: 50 });
                      $scope.currentPage = 1;
                      $scope.pageSize = 10;
                  }

                  function resetForm() {
                      $scope.modalTitle = "Add New Alert Setting";
                      $scope.alertSettingInfo = {};
                      $scope.Id = '';
                      $scope.checkUpdateId = 0;
                      $scope.addBasic.$setUntouched();
                      $scope.addBasic.$setPristine();
                      //$scope.submitted = false;
                      $scope.modalbutton = 'Save';
                  }

                  function getAllDropdowns() {
                      $scope.Dropdowns = [];
                      $http({
                          method: 'GET',
                          url: baseUrl + 'Common/GetAllDropDown/'
                      }).then(function successCallback(response) {
                          $scope.Dropdowns = response.data.results;
                      }, function errorCallback(response) {
                      });
                  }

                  $scope.save = function save() {
                      if ($scope.addBasic.$invalid)
                          return;
                      else {

                          var result = validation();
                          if (result) {
                              if ($scope.checkUpdateId != 10002) {
                                  $http({
                                      method: 'POST',
                                      url: baseUrl + 'AlertSetting/AddAlertSetting/',
                                      data: $scope.alertSettingInfo
                                  }).then(function successCallback(response) {
                                      $('#addmodal').modal('toggle');
                                      toastr["info"](response.data.message);
                                      getAllAlertSetting();
                                      resetForm();
                                  }, function errorCallback(response) {
                                      toastr["warning"](response.data.Message);
                                  });
                              }
                              if ($scope.checkUpdateId == 10002) {
                                  $http({
                                      method: 'PUT',
                                      url: baseUrl + 'AlertSetting/UpdateAlertSetting/',
                                      data: $scope.alertSettingInfo
                                  }).then(function successCallback(response) {
                                      toastr["info"](response.data.message);
                                      if (response.data.httpStatusCCAddress != 305) {
                                          $('#addmodal').modal('toggle');
                                          getAllAlertSetting();
                                          resetForm();
                                      }

                                  }, function errorCallback(response) {
                                      toastr["warning"](response.data.Message);
                                  });
                              }
                          }
                      }
                  }

                  $scope.deleteAlertSetting = function deleteAlertSetting(id) {
                      SweetAlert.swal({
                          title: "Are you sure to delete it ?", type: "warning", showCancelButton: true, confirmButtonColor: "#DD6B55",
                          confirmButtonText: "Yes, delete it!",
                          closeOnConfirm: false
                      },
                        function (isConfirm) {
                            if (isConfirm) {
                                $http({
                                    method: 'DELETE',
                                    url: baseUrl + 'AlertSetting/DeleteAlertSetting/' + id,
                                }).then(function successCallback(response) {
                                    SweetAlert.swal("Deleted!", "Your data has been deleted.", "success");
                                    getAllAlertSetting();
                                }, function errorCallback(response) {
                                    toastr["error"](response.data.Message);
                                });
                            }
                        });
                  }

                  $scope.editAlertSetting = function editAlertSetting(item) {
                      $scope.modalTitle = "Update Alert Setting";
                      $scope.modalbutton = 'Update';
                      $scope.alertSettingInfo.Id = item.Id;
                      $scope.alertSettingInfo.AlertType = item.AlertType;
                      $scope.alertSettingInfo.FromAddress = item.FromAddress;
                      $scope.alertSettingInfo.ToAddress = item.ToAddress;
                      $scope.alertSettingInfo.CCAddress = item.CCAddress;
                      $scope.alertSettingInfo.BCCAddress = item.BCCAddress;
                      $scope.alertSettingInfo.Subject = item.Subject;
                      $scope.alertSettingInfo.DestinationMobileNo = item.DestinationMobileNo;
                      $scope.alertSettingInfo.Body = item.Body;

                      $scope.checkUpdateId = 10002;
                  }

                  function getAllAlertSetting() {
                      $scope.alertSettingList = [];
                      $http({
                          method: 'GET',
                          url: baseUrl + 'AlertSetting/GetAllAlertSetting/'
                      }).then(function successCallback(response) {
                          $scope.alertSettingList = response.data.results;
                      }, function errorCallback(response) {
                          toastr["info"](response.data.Message);
                      });
                  }


                  function validation() {

                      if ($scope.alertSettingInfo.Id == undefined) {
                          return true;
                      }
                      else {
                          if ($scope.alertSettingInfo.AlertType == null) {
                              toastr["info"]("Please Select any option..!");
                              return false;
                          }

                          else {
                              return true;
                          }
                      }
                  }
              }]);

    </script>
}