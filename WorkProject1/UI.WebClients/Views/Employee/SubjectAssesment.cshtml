@{
    ViewBag.Title = "Subject Assesment";
    Layout = "~/Views/Shared/_EmpLayout.cshtml";
    var SessionId = Request.QueryString["SessionId"];
    var BranchID = Request.QueryString["BranchID"];
    var ShiftID = Request.QueryString["ShiftID"];
    var ClassId = Request.QueryString["ClassId"];

    var SectionId = Request.QueryString["SectionId"];
    var SubjectID = Request.QueryString["SubjectID"];
    var MainExamId = Request.QueryString["MainExamId"];
    var TermId = Request.QueryString["TermId"];
    var SubExamId = Request.QueryString["SubExamId"];

    var SessionName = Request.QueryString["SessionName"];
    var BranchName = Request.QueryString["BranchName"];
    var ShiftName = Request.QueryString["ShiftName"];
    var ClassName = Request.QueryString["ClassName"];

    var SectionName = Request.QueryString["SectionName"];
    var SubjectName = Request.QueryString["SubjectName"];
    var MainExamName = Request.QueryString["MainExamName"];
    var TermName = Request.QueryString["TermName"];
}
<style type="text/css">
    body {
        height: 1000px;
    }

    .table thead tr th {
        font-size: 12px !important;
        color: white !important;
        font-weight: 600 !important;
    }

    #header-fixed {
        position: fixed;
        top: 75px;
        display: none;
        background-color: white;
        width: 74%;
    }
</style>
<div ng-controller="subjectSetup">
    <!-- Begin: life time stats -->
        <div class="card">
            <div class="emp-header">
                @ViewBag.Title
            </div>
            <div class="form-body">
                <form name="frmFilter" novalidate>
                    <table class="table table-bordered table-inverse fixed-table-toolbar">
                        <tr>
                            <td style="color:#ff6a00">Session</td>
                            <td>@SessionName</td>
                            <td style="color:#ff6a00">Branch</td>
                            <td>@BranchName</td>
                            <td style="color:#ff6a00">Shift</td>
                            <td>@ShiftName</td>
                        </tr>
                        <tr>
                            <td style="color:#ff6a00">Class</td>
                            <td>@ClassName</td>
                            <td style="color:#ff6a00">Term Name</td>
                            <td> @TermName</td>
                            <td style="color:#ff6a00">Subject Name</td>
                            <td> @SubjectName</td>
                        </tr>
                        <tr>
                            <td style="color:#ff6a00">Main Exam Name</td>
                            <td>@MainExamName</td>
                            <td style="color:#ff6a00">Section :</td>
                            <td>
                                <div ng-class="{ 'has-error' :isSubmitted && frmFilter.SectionId.$invalid }">
                                    <select class="form-control" name="SectionId" ng-model="StudentExamFilter.SectionId" ng-options="S.SectionId as S.SectionName for S in Sections" required>

                                        <option value="" selected="selected">Please Select</option>
                                    </select>
                                    <span ng-show="isSubmitted && frmFilter.SectionId.$error.required" class="help-block">Section Required</span>
                                </div>
                            </td>
                            <td colspan="2" style="text-align:right">
                                <button type="submit" ng-click="Search();isSubmitted=true" class="btn btn-info green">Search</button>
                                <a class="btn btn-warning purple" href="#" ng-click="StudentSubWiseReport();isSubmitted=true" >Report</a>
                                <button type="reset" class="btn btn-danger red">Reset</button>
                                </td>
                        </tr>
                    </table>
                    </form>
                    <div class="row" style="margin-right:0 !important">

                    </div>
</div>
            <div class="portlet-body">
                <div class="table-container">
                    <div id="sample_3_wrapper" class="dataTables_wrapper no-footer">
                        @*<div class="table-scrollable" style="height:500px; overflow: scroll;">*@
                        @*<table class="table table-bordered table-hover table-fixed" ng-table="tableParams" fixed-table-headers="scrollable-area">*@
                        <table class="table table-bordered table-hover" id="table-1">
                            <thead>
                                <tr class="bg-primary">
                                    <th width="10%">Name</th>
                                    <th width="8%">ID</th>
                                    <th width="5%">Grade</th>
                                    <th width="7%">Total Mark</th>
                                    <th ng-repeat="item in StudentList[0].AssesmentList" width="10%">{{item.AssesmentName}}</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr ng-show="SubjectSetups.results.length <= 0"><td colspan="12" style="text-align:center; color:orangered"><i class="fa fa-refresh"></i> Data not found!</td></tr>
                                <tr ng-repeat="item in StudentList | orderBy:'StudentName'" style="background-color:rgba(245, 204, 88, 0.32);color:#ff6a00">
                                    <td>{{item.StudentName}}</td>
                                    <td>{{item.StudentInsId}}</td>
                                    <td>{{item.SubjectGL}}</td>
                                    <td>{{item.TotalMark}}</td>
                                    <td ng-repeat="ass in item.AssesmentList ">
                                        <select class="form-control" ng-model="ass.Comment" ng-change="AddAssesmentComment(ass.Comment,ass.AssesmentId,item.StudentIID)"
                                                ng-options="item.Text as item.Text for item in DropdownsList |filter :{Value:ass.Code}:true">
                                            <option value="" selected="selected">Please Select</option>
                                        </select>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                        <table class="table table-bordered table-hover" id="header-fixed"></table>
                        @*</div>*@
                    </div>
                </div>
            </div>
        </div>
</div>

@section Scripts{
    <script type="text/javascript">
        OEMSApp.controller("subjectSetup", ["$scope", "$http", "SweetAlert", "blockUI", "$window", "$filter",
              function ($scope, $http, SweetAlert, blockUI, $window, $filter) {
                  init();
                  // Initial Methods
                  function init() {
                      initialize();
                      // getSubject();
                      getAllCommons();
                      getmainExams();
                      GetSection();
                  }
                  function initialize() {
                      $scope.DropdownsList = [];
                      $scope.SubjectsetupFilter = {};

                      $scope.currentPage = 1;
                      $scope.pageno = 1;
                      $scope.pagesize = 1000;
                      $scope.total_count = 2000;
                      $scope.search = '';

                      $scope.CommonFeilds = [];
                      $scope.getAllCommons = getAllCommons;
                      $scope.SubjectList = [];
                      $scope.btnDis = false;
                      $scope.StudentExamFilter = {};
                      $scope.StudentExamFilter.SessionId =@SessionId;
                      $scope.StudentExamFilter.TermId =@TermId;
                      $scope.StudentExamFilter.SubjectId =@SubjectID;
                      $scope.StudentExamFilter.ClassId =@ClassId;
                      $scope.StudentExamFilter.MainExamId =@MainExamId;
                      $scope.StudentExamFilter.ShiftID=@ShiftID;
                      $scope.StudentExamFilter.BranchID=@BranchID;
                     GetSection();
                      }

                  $scope.getSubject = function getSubject() {

                      blockUI.start(); // spinning Start
                      $scope.SubjectList = [];
                      $http({
                          method: 'GET',
                          url: baseUrl + 'SubjectSetup/GetAllSubject/' + $scope.StudentExamFilter.ClassId + '/' + $scope.StudentExamFilter.SessionId
                      }).then(function successCallback(response) {
                          $scope.SubjectList = response.data.results;
                          blockUI.stop();
                      }, function errorCallback(response) {
                          toastr["info"](response.data.message);
                          blockUI.stop();
                      });
                  }
                  $scope.AddAssesmentComment = function AddAssesmentComment(Comment, AssesmentId, StudentId)
                  {
                      var IsTaken = false;
                      if (Comment == null)
                      {
                          IsTaken = false;
                      }
                      else
                      {
                          IsTaken = true;
                      }
                      $http({
                          method: 'GET',
                          url: baseUrl + 'StudentInfo/AddAssesmentComment/' + Comment + '/' + AssesmentId + '/' + StudentId + '/' + IsTaken + '/' + $scope.StudentExamFilter.SubjectId + '/' + $scope.StudentExamFilter.MainExamId
                      }).then(function successCallback(response) {

                          toastr["info"](response.data.message);
                      }, function errorCallback(response) {
                          if (response.data.message != null)
                              console.log(response);
                          toastr["info"](response.data.message);
                      });

                  };
                  //Reset Form
                  function ResetSource() {
                      $scope.StudentExamFilter = {};
                      $scope.StudentList = [];
                  }

                  function getmainExams() {
                      $scope.mainExams = [];
                      $http({
                          method: 'GET',
                          url: baseUrl + 'ExamSetup/GetAllMainExam/'
                      }).then(function successCallback(response) {
                          $scope.mainExams = response.data.results;
                          //console.log($scope.mainExams);
                          // $scope.AspNetRoles = response.data;
                          $scope.total_count = response.data.totalcount;
                          //console.log(response.data);
                      }, function errorCallback(response) {
                          toastr["warning"](response.data.Message);
                      });
                      //$scope.AspNetRoles = $scope.data;
                      //console.log($scope.data.totalcount);
                      // $scope.totalcount = 3; //$scope.data.totalcount;
                  }

                 function GetSection() {
                      $scope.Sections = [];
                      $http({
                          method: 'GET',
                          url: baseUrl + 'Common/GetSection/' + $scope.StudentExamFilter.SessionId + "/" + $scope.StudentExamFilter.ShiftID + "/" + $scope.StudentExamFilter.ClassId
                      }).then(function successCallback(response) {
                          $scope.Sections = response.data.results;
                      }, function errorCallback(response) {
                          toastr["error"](response.data.Message);
                      });
                  }
                  $scope.Search =function Search()
                  {
                      if ($scope.frmFilter.$invalid == true)
                          return;

                      $scope.LoadStudentList();

                  }
                  $scope.LoadStudentList=function LoadStudentList() {
                      if ($scope.frmFilter.$invalid == true)
                          return;

                      $http.post(baseUrl + 'Student/SearchAssesmentStudentSubjectWise/'+$scope.StudentExamFilter.BranchID+'/'+$scope.StudentExamFilter.SessionId+'/'+$scope.StudentExamFilter.ShiftID+'/'+$scope.StudentExamFilter.ClassId+'/'+$scope.StudentExamFilter.SectionId+'/'+$scope.StudentExamFilter.TermId+'/'+$scope.StudentExamFilter.MainExamId+'/'+$scope.StudentExamFilter.SubjectId).
                       then(function (response) {
                           $scope.StudentList = response.data.results;
                       });
                  };
                  function getAllDropdowns() {
                      $scope.Dropdowns = [];

                      $http({
                          method: 'GET',
                          url: baseUrl + 'Common/GetAllDropDown/'
                      }).then(function successCallback(response) {
                          $scope.Dropdowns = response.data.results;
                          $scope.DropdownsList = $scope.Dropdowns.filter(function (v) {
                              return v.Type == 'AssesmentComment';
                          });
                      }, function errorCallback(response) {
                      });
                  };
                  function getAllCommons() { // Get VSC
                      //$scope.CommonFeilds = [];
                      $http({
                          method: 'GET',
                          url: baseUrl + 'Common/GetCommonItem/'
                      }).then(function successCallback(response) {
                          $scope.CommonFeilds = response.data.results;
                      }, function errorCallback(response) {
                      });
                      getAllDropdowns();
                  }
                  $scope.StudentSubWiseReport = function StudentSubWiseReport(){
                      if ($scope.frmFilter.$invalid == true)
                          return;

                      var uri = baseUrl + 'Report/AssesmentStudentSubjectWise/?BranchID=' + $scope.StudentExamFilter.BranchID + '&SessionId=' + $scope.StudentExamFilter.SessionId + '&ShiftID=' + $scope.StudentExamFilter.ShiftID + '&ClassId=' + $scope.StudentExamFilter.ClassId + '&SectionId=' + $scope.StudentExamFilter.SectionId + '&TermId=' + $scope.StudentExamFilter.TermId + '&MainExamId=' + $scope.StudentExamFilter.MainExamId + '&SubjectId=' + $scope.StudentExamFilter.SubjectId;
                      window.open(uri,'_blank');
                      //$location.url(uri);
                      console.log(uri);
                  }

                  $scope.LoadTerms = function LoadTerms(ClassId) {
                      $http({
                          method: 'GET',
                          url: baseUrl + 'SetupInstitution/GetTermByClassId' + '/' + ClassId
                      }).then(function successCallback(response) {
                          $scope.TermList = response.data.results;
                      }, function errorCallback(response) {
                          if (response.data.message != null)
                              toastr["info"](response.data.message);
                      });
                  }

              }]);
        $(document).ready(function () {
            $('[data-toggle="tooltip"]').tooltip();
        });
    </script>
    <script type="text/javascript">
     var tableOffset = $("#table-1").offset().top;
     var $header = $("#table-1 > thead").clone();
     var $fixedHeader = $("#header-fixed").append($header);

     $(window).bind("scroll", function () {
         var offset = $(this).scrollTop();

         if (offset >= tableOffset && $fixedHeader.is(":hidden")) {
             $fixedHeader.show();
         }
         else if (offset < tableOffset) {
             $fixedHeader.hide();
         }
     });
    </script>



}
  
