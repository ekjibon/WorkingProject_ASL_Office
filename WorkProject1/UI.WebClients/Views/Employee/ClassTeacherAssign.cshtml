
@{
    ViewBag.Title = "Class Teacher Assign";
}
<style type="text/css">
    /*Maruf*/
    input[type="number"]::-webkit-outer-spin-button,
    input[type="number"]::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    input[type="number"] {
        -moz-appearance: textfield;
    }
</style>

<div ng-controller="ClassTeacherSetup">
    <!-- Begin: life time stats -->
    <div class="portlet light bordered">
        <div class="portlet-title">
            <div class="caption">
                <i class="icon-settings font-green"></i>
                <span class="caption-subject font-green sbold uppercase">@ViewBag.Title</span>
            </div>
            <div class="actions">
                <div class="btn-group btn-group-solid">
                    <button ng-click="resetForm()" class="btn green" data-target="#addmodal" data-toggle="modal"> <i class="fa fa-plus"></i>Add Class Teacher</button>
                </div>

            </div>
        </div>

        <form class="form-horizontal" ng-submit="getClassTeacherSetup()" name="frmCommonFeilds" novalidate>
            <div class="form-body">

                <div class="row">
                    <div class="col-md-6">
                       
                        <div class="form-group" ng-class="{ 'has-error' : submitted && formCommonFeilds.Session.$invalid}">
                            <label class="col-md-5 control-label">
                                Session :
                                <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                <select class="form-control" ng-model="CommonFeild.SessionId" required name="Session" ng-options="CommonFeild.SessionId as CommonFeild.SessionName for CommonFeild in CommonFeilds.Session">
                                    <option value="" selected="selected">Choose Option</option>
                                </select>

                                <div class="form-control-focus"> </div>
                                <span ng-show="submitted && formCommonFeilds.Session.$error.required" class="help-block">Session Required</span>
                            </div>
                        </div>

                        <div class="form-group" ng-class="{ 'has-error' : submitted && formCommonFeilds.Branch.$invalid}">
                            <label class="col-md-5 control-label">
                                Branch :
                                <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                <select class="form-control" ng-model="CommonFeild.BranchId" required name="Branch" ng-options="CommonFeild.BranchId as CommonFeild.BranchName for CommonFeild in CommonFeilds.Branch">
                                    <option value="" selected="selected">Choose Option</option>
                                </select>
                                <div class="form-control-focus"> </div>
                                <span ng-show="submitted && formCommonFeilds.Branch.$error.required" class="help-block">Branch Name Required</span>
                            </div>
                        </div>

                        <div class="form-group" ng-class="{ 'has-error' : submitted && formCommonFeilds.Shift.$invalid}">
                            <label class="col-md-5 control-label">
                                Shift :
                                <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                <select class="form-control" ng-model="CommonFeild.ShiftId" required name="Shift" ng-options="CommonFeild.ShiftId as CommonFeild.ShiftName for CommonFeild in CommonFeilds.Shift | filter:{BranchId:CommonFeild.BranchId}:true">
                                    <option value="" selected="selected">Choose Option</option>
                                </select>
                                <div class="form-control-focus"> </div>
                                <span ng-show="submitted && formCommonFeilds.Shift.$error.required" class="help-block">Shift Name Required</span>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        

                        <div class="form-group" ng-class="{ 'has-error' : submitted && formCommonFeilds.Class.$invalid}">
                            <label class="col-md-5 control-label">
                                Class :
                                <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                <select class="form-control" ng-model="CommonFeild.ClassId" name="Class" ng-change="GetSectionByCommon()" required ng-options="CommonFeild.ClassId as CommonFeild.ClassName for CommonFeild in CommonFeilds.ClassInfo">
                                    <option value="" selected="selected">Choose Option</option>
                                </select>
                                <div class="form-control-focus"> </div>
                                <span ng-show="submitted && formCommonFeilds.Class.$error.required" class="help-block">Class Required</span>
                            </div>
                        </div>

                        
                        <div class="form-group" ng-class="{ 'has-error' : submitted && formCommonFeilds.Section.$invalid}">
                            <label class="col-md-5 control-label">
                                Section :
                                <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                <select class="form-control" ng-model="CommonFeild.SectionId" required name="Section" ng-options="S.SectionId as S.SectionName for S in Sections">
                                    <option value="" selected="selected">Choose Option</option>
                                </select>
                                <div class="form-control-focus"> </div>
                                <span ng-show="submitted && formCommonFeilds.Section.$error.required" class="help-block">Section Name Required</span>
                            </div>
                        </div>

                        <div class="btn-group btn-group-solid pull-right" style="margin-bottom:5px">
                            <button ng-click="submitted1=true" class="btn btn-info btn-large">&nbsp;&nbsp; <i class="fa fa-search"></i> Show &nbsp;&nbsp;&nbsp;&nbsp;</button>

                        </div>

                    </div>
                </div>
            </div>
        </form>

        <div class="portlet-body">
            <div class="table-container">
                <div id="sample_3_wrapper" class="dataTables_wrapper no-footer">

                    <div class="table-scrollable"> </div>
                    <table class="table table-bordered table-hover">
                        <thead style="background-color:#F4D03F">
                            <tr>
                                <th>Session</th>
                                <th>Branch</th>
                                <th>Class</th>
                                <th>Shift</th>
                                <th>Section</th>
                                <th>Teacher</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr ng-repeat="item in ClassTeacherSetups">
                              
                                <td> {{item.SessionName}} </td>
                                <td> {{item.BranchName}} </td>
                                <td> {{item.ClassName}} </td>
                                <td> {{item.ShiftName}}  </td>
                              
                                <td> {{item.SectionName}}  </td>
                                <td> {{item.FullName}}  </td>
                                <td>
                                    <a href="javascript:;" class="btn btn-icon-only green" ng-click="edit(item)" data-target="#addmodal" data-toggle="modal">
                                        <i class="fa fa-edit"></i>
                                    </a>
                                    <a ng-click="deleteClassTeacherSetup(item)" href="javascript:;" class="btn btn-icon-only red">
                                        <i class="fa fa-trash"></i>
                                    </a>


                                </td>
                            </tr>
                        </tbody>

                    </table>



                </div>
            </div>
        </div>


    </div>
    <!-- End: life time stats -->
    <!--Modal Area Start-->
    <div id="addmodal" class="modal fade" tabindex="-1" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog">
            <div class="modal-content modal-lg">
                <form name="frmClassTeacherSetup" ng-submit="save()" class="form-horizontal" novalidate enctype="multipart/form-data">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">X</button>
                        <h4 class="modal-title">{{modalTitle}}</h4>
                    </div>
                    <div class="modal-body">
                        <div class="form-body">
                            <div class="row">
                                <div class="col-md-6">
                                    <br />
                                    <br />
                                  
                                    <div class="form-group" ng-class="{ 'has-error' :submitted && frmClassTeacherSetup.SessionId.$invalid}">
                                        <label class="col-md-4 control-label">
                                            Session :
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-8">
                                            <select class="form-control" name="SessionId" ng-model="ClassTeacher.SessionId" required ng-options="ClassTeacherSetup.SessionId as ClassTeacherSetup.SessionName for ClassTeacherSetup in CommonFeilds.Session">
                                                <option value="" selected="selected">Please Select</option>
                                            </select>
                                            <span ng-show="submitted && frmClassTeacherSetup.SessionId.$error.required" class="help-block">Session Required</span>
                                        </div>
                                    </div>

                                    <div class="form-group" ng-class="{ 'has-error' :submitted && frmClassTeacherSetup.SessionId.$invalid}">
                                        <label class="col-md-4 control-label">
                                            Branch :
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-8">
                                            <select class="form-control" name="BranchId" ng-model="ClassTeacher.BranchId" required ng-options="ClassTeacherSetup.BranchId as ClassTeacherSetup.BranchName for ClassTeacherSetup in CommonFeilds.Branch">
                                                <option value="" selected="selected">Please Select</option>
                                            </select>
                                            <span ng-show="submitted && frmClassTeacherSetup.SessionId.$error.required" class="help-block">Branch Required</span>
                                        </div>
                                    </div>
                                    <div class="form-group" ng-class="{ 'has-error' :submitted && frmClassTeacherSetup.ShiftId.$invalid}">
                                        <label class="col-md-4 control-label">
                                            Shift :
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-8">
                                            <select class="form-control" name="ShiftId" ng-model="ClassTeacher.ShiftId" ng-options="ClassTeacherSetup.ShiftId as ClassTeacherSetup.ShiftName for ClassTeacherSetup in CommonFeilds.Shift| filter:{BranchId:ClassTeacher.BranchId}:true" required>
                                                <option value="" selected="selected">Please Select</option>
                                            </select>
                                            <span ng-show="submitted && frmClassTeacherSetup.ShiftId.$error.required " class="help-block">Shift Required</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">

                                    <br />
                                    <br />

                                    <div class="form-group" ng-class="{ 'has-error' :submitted && frmClassTeacherSetup.ClassId.$invalid}">
                                        <label class="col-md-4 control-label">
                                            Class :
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-8">
                                            <select class="form-control" name="ClassId" ng-model="ClassTeacher.ClassId" ng-change="GetSection()"  ng-options="ClassTeacherSetup.ClassId as ClassTeacherSetup.ClassName for ClassTeacherSetup in CommonFeilds.ClassInfo">
                                                <option value="" selected="selected">Please Select</option>
                                            </select>
                                            <span ng-show="submitted && frmClassTeacherSetup.ClassId.$error.required " class="help-block">Class Required</span>
                                        </div>
                                    </div>

                                  

                                    <div class="form-group" ng-class="{ 'has-error' :submitted && frmClassTeacherSetup.Section.$invalid}">
                                        <label class="col-md-4 control-label">
                                            Section :
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-8">
                                            <select class="form-control" ng-model="ClassTeacher.SectionId" required name="Section" ng-options="S.SectionId as S.SectionName for S in Sections">
                                                <option value="" selected="selected">Choose Option</option>
                                            </select>
                                            <span ng-show="submitted && frmClassTeacherSetup.Section.$error.required " class="help-block">Class Required</span>
                                        </div>
                                    </div>

                                    <div class="form-group" ng-class="{ 'has-error' :submitted && frmClassTeacherSetup.teacher.$invalid}">
                                        <label class="col-md-4 control-label">
                                            Select Teacher :
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-8">
                                            <input type="text" required name="teacher" ng-model="Emp" 
                                                   placeholder="Search Teacher By ID or Name or SMS Notification No." 
                                                   uib-typeahead="emp  as emp.Text for emp in SearchTeacher($viewValue)" 
                                                   typeahead-loading="loadingLocations" 
                                                   typeahead-no-results="noResults" class="form-control">
                                            <i ng-show="loadingLocations" class="glyphicon glyphicon-refresh"></i>
                                            <div ng-show="noResults"><i class="glyphicon glyphicon-remove"></i> No Results Found</div>
                                            <input type="hidden" name="EmpId" ng-value="Emp.id" />{{Emp.id}}
                                        </div>
                                    </div>

                                </div>



                            </div>

                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" ng-click="submitted=true" class="btn green-haze" ng-disabled="btnDis">Add <i ng-show="spin" class="fa fa-spinner fa-spin" style="font-size:20px"></i></button>
                        <button type="button" data-dismiss="modal" class="btn dark btn-outline" ng-click="resetForm();submitted=false">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <!--Modal Area End-->

</div>

@section Scripts{

    <script type="text/javascript">

        OEMSApp.controller("ClassTeacherSetup", ["$scope", "$http", "SweetAlert", "$window",
              function ($scope, $http, SweetAlert, $window) {

                  init();
                  function init() {
                      $scope.teachers = [];
                      initialize();
                      getAllDropdowns();
                      getAllCommons();
                      getAllClassTeacher();

                  }
                  function initialize() {
                      $scope.modalTitle = "Class Teacher";
                      $scope.ClassTeacherSetup = {};
                      $scope.ClassTeacherSetups = [];
                      $scope.CommonFeild = {};

                      $scope.res = {};
                      $scope.data = {};
                     
                      $scope.resetForm = resetForm;

                      $scope.btnDis = false;
                      $scope.spin = false;
                      $scope.getClassTeacherSetup = getClassTeacherSetup;
                      $scope.ClassTeacherSetup.ID = 0;
                      $scope.getAllClassTeacher = getAllClassTeacher;
                     
                  }


                  function setProgress(s) {
                      $scope.btnDis = s;
                      $scope.spin = s;
                  }


                  function resetForm() {
                      $scope.modalTitle = "Add Class Teacher";
                      $scope.ClassTeacher = {};
                      $scope.ClassTeacher.ID = 0;
                      $scope.submitted = false;
                      $scope.submitted1 = false;
                      $scope.Id = '';
                      setProgress(false);
                  }
                  function reset() {
                      $scope.modalTitle = "Add Class Teacher";
                      $scope.ClassTeacher = [];
                      $scope.submitted = false;
                      $scope.submitted1 = false;
                      setProgress(false);
                      getAllClassTeacher();
                  }

                  $scope.FromReload = function FromReload() {


                  }





                  $scope.GetGroup = function GetGroup(classid) {
                      $scope.Groups = [];

                      $http({
                          method: 'GET',
                          url: baseUrl + 'Common/GetGroup/' + classid
                      }).then(function successCallback(response) {
                          $scope.Groups = response.data.results;
                      }, function errorCallback(response) {
                          toastr["info"](response.data.message);
                      });

                  }

                  function getAllDropdowns() {
                      $scope.Dropdowns = [];

                      $http({
                          method: 'GET',
                          url: baseUrl + 'Common/GetAllDropDown/'
                      }).then(function successCallback(response) {
                          $scope.Dropdowns = response.data.results;
                      }, function errorCallback(response) {
                          toastr["info"](response.data.message);
                      });
                  }

                  function getAllCommons() {
                      $scope.CommonFeilds = [];

                      $http({
                          method: 'GET',
                          url: baseUrl + 'Common/GetCommonItem/'
                      }).then(function successCallback(response) {
                          $scope.CommonFeilds = response.data.results;
                      }, function errorCallback(response) {
                          toastr["info"](response.data.message);
                      });
                  }

                  function getClassTeacherSetup() {
                      $scope.ClassTeacherSetups = [];

                      $http({
                          method: 'POST',
                          url: baseUrl + 'Employee/SearchClassTeacherSetupInfo/',
                         data: $scope.CommonFeild
                      }).then(function successCallback(response) {
                          $scope.ClassTeacherSetups = response.data.results;
                          toastr["success"](response.data.message);
                      }, function errorCallback(response) {
                          toastr["info"](response.data.message);
                      });

                  };

                  function getAllClassTeacher() {
                      $scope.ClassTeacherSetups = [];

                      $http({
                          method: 'GET',
                          url: baseUrl + 'Employee/getClassTeacherSetupInfo/'
                      }).then(function successCallback(response) {
                          $scope.ClassTeacherSetups = response.data.results;
                          toastr["success"](response.data.message);
                      }, function errorCallback(response) {
                          toastr["info"](response.data.message);
                      });

                  };

                  $scope.searchData = function () {
                      getBranchs(1);
                  };

                  $scope.edit = function (n) {
                      $scope.modalTitle = "Update Class Teacher";
                      $scope.ClassTeacher = n;
                      $scope.getSignature();
                      $scope.Id = n.Id;
                  };


                  $scope.save = function save() {

                      if ($scope.frmClassTeacherSetup.$invalid)
                          return;
                      setProgress(true);
                      if ($scope.ClassTeacher != {}) {
                          $scope.ClassTeacher.TeacherId = $scope.Emp.Value;
                          if ($scope.ClassTeacher.TeacherId==0) {
                              toastr['warning']('Please Select Employee.');
                              return;
                          }
                          $http({
                              method: 'POST',
                              url: baseUrl + 'Employee/AddClassTeacherSetup/',
                              data: $scope.ClassTeacher

                          }).then(function successCallback(response) {
                                  $scope.ClassTeacherSetups = response.data.results;
                                  toastr["success"](response.data.message);
                                  $('#addmodal').modal('toggle');
                                  reset();

                              }, function errorCallback(response) {
                                  toastr["error"](response.data.Message);

                          });

                      }

                  };

                  $scope.deleteClassTeacherSetup = function deleteClassTeacherSetup(n) {

                      // SweetAlert.swal("Good job!", "You clicked the button!", "success");
                      SweetAlert.swal({
                          title: "Are you sure to delete it ?", type: "warning", showCancelButton: true, confirmButtonColor: "#DD6B55",
                          confirmButtonText: "Yes, delete it!",
                          closeOnConfirm: false
                      },
                      function (isConfirm) {


                          if (isConfirm) {
                              $http({
                                  method: 'DELETE',
                                  url: baseUrl + 'Employee/deleteClassTeacherSetup/' + n.ID
                              }).then(function successCallback(response) {
                                  SweetAlert.swal("Deleted!", "Your data has been deleted.", "success");
                                  $scope.ClassTeacherSetups = response.data.results;
                                  reset();
                              }, function errorCallback(response) {
                                  toastr["info"](response.data.message);

                              });

                          }
                      });


                  };

               


                  $scope.GetSection = function GetSection() {
                      $scope.Sections = [];

                      $http({
                          method: 'GET',
                          url: baseUrl + 'Common/GetSection/' + $scope.ClassTeacher.SessionId + "/" + $scope.ClassTeacher.ShiftId + "/" + $scope.ClassTeacher.ClassId 
                      }).then(function successCallback(response) {
                          $scope.Sections = response.data.results;


                      }, function errorCallback(response) {
                          toastr["error"](response.data.message);
                      });

                  }

                  $scope.GetSectionByCommon = function GetSectionByCommon() {
                      $scope.Sections = [];

                      $http({
                          method: 'GET',
                          url: baseUrl + 'Common/GetSection/' + $scope.CommonFeild.SessionId + "/" + $scope.CommonFeild.ShiftId + "/" + $scope.CommonFeild.ClassId 
                      }).then(function successCallback(response) {
                          $scope.Sections = response.data.results;


                      }, function errorCallback(response) {
                          toastr["error"](response.data.message);
                      });

                  }

                  $scope.SearchTeacher = function (val) {
                      $scope.Type = 6;
                      if (val.length >= 3)
                          return $http.get(baseUrl + 'Employee/SearchTeacher/' + val + '/' + $scope.Type, {
                              params: {

                              }
                          }).then(function (response) {
                              return response.data.results.map(function (item) {
                                  return item;
                              });
                          });
                  };

              }]);
    </script>

}
