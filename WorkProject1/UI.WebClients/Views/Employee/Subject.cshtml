
@{
    ViewBag.Title = "Subject";
}

@model OEMS.Models.Model.Employee.EmpSubject

<div class="kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid" ng-controller="CtrlSubject">
    <div class="row">
        <div class="kt-portlet kt-portlet--mobile">
            <div class="kt-portlet__head kt-portlet__head--lg">
                <div class="kt-portlet__head-label">
                    <h3 class="kt-portlet__head-title">
                        <!----Title Text-->
                        Subject
                        <!----Title Text -->
                    </h3>
                </div>
                <div class="kt-portlet__head-toolbar">
                    <div class="kt-portlet__head-wrapper">
                        <div class="dropdown dropdown-inline">
                            <button type="button" class="btn btn-brand btn-icon-sm" ng-click="resetForm()" data-toggle="modal" data-target="#addmodal" aria-haspopup="true" aria-expanded="false">
                                <!----Add Button -->
                                <i class="flaticon2-plus"></i> Add Subject
                                <!----Add Button -->
                            </button>

                        </div>
                    </div>
                </div>
            </div>

            <div class="kt-portlet__body">
                <div class="row">
                    <div class="col-md-4 col-sm-5 col-xs-6">
                        <div class="form-group">
                            <div class="col-lg-3 col-md-5 col-sm-4 col-xs-8" style="padding-left:0px">
                                <select class="form-control kt-font-brand" ng-model="pageSize" ng-options="P.value as P.text for P in pageSizeArray"></select>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 col-sm-3 col-xs-1">
                    </div>
                    <div class="col-md-4 col-sm-4 col-xs-5">
                        <div id="sample_3_filter" class="pull-right">
                            <input ng-model="q" id="search" class="form-control" placeholder="Filter text">
                        </div>
                    </div>
                </div>
                <table class="table table-bordered table-hover rounded">
                    <thead>
                        <tr class="btn-primary">

                            <th width="10%">Subject Name</th>
                            <th width="10%">Action</th>
                        </tr>
                    </thead>

                    <tbody>
                        <tr ng-show="designation.results.length <= 0"><td colspan="5" style="text-align:center;"><i class="fa fa-refresh"></i> Loading new data!!</td></tr>
                        <tr dir-paginate="item in subjects.results| filter:q  | itemsPerPage: pageSize " current-page="currentPage">

                            <td>{{item.SubjectName}}</td>
                            <td>
                                <a href="javascript:;" class="btn btn-outline-brand btn-elevate btn-icon" ng-click="edit(item)" data-target="#addmodal" data-toggle="modal">
                                    <i class="fa fa-edit"></i>
                                </a>
                                <a ng-click="deleteSubject(item)" href="javascript:;" class="btn btn-outline-danger btn-elevate btn-icon">
                                    <i class="fa fa-trash"></i>
                                </a>

                            </td>

                        </tr>
                    </tbody>
                </table>
                <div class="row">
                    <dir-pagination-controls boundary-links="true" template-url="~/assets/angular/lib/dirPagination.tpl.html"></dir-pagination-controls>
                </div>
            </div>
        </div>
    </div>
    <!--Modal Area Start-->
    <div id="addmodal" class="modal fade" tabindex="-1" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog">
            <div class="modal-content">
                <form name="addform" ng-submit="save()" class="form-horizontal" id="form_sample_1" novalidate>
                    <div class="modal-header">
                        <h5 class="modal-title">{{modalTitle}}</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>

                    </div>
                    <div class="modal-body">
                        <div class="form-body">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group row" ng-class="{ 'has-error' : submitted && addform.Subject.$invalid}">
                                        <label class="col-md-4 control-label" style="text-align:right">
                                            Subject :
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-8">
                                            <input type="text" ng-model="subject.SubjectName" class="form-control" placeholder="Subject Name" name="Subject" required>
                                            <div class="form-control-focus"> </div>
                                            <span ng-show="submitted &&  addform.Subject.$error.required" class="help-block">Subject Required</span>
                                        </div>
                                    </div>

                                </div>

                            </div>

                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" data-dismiss="modal" class="btn  btn-secondary" ng-click="resetForm();submitted=false">Cancel</button>
                        <button type="submit" ng-click="submitted=true" class="btn btn-success" ng-disabled="btnDis">Save <i ng-show="spin" class="fa fa-spinner fa-spin" style="font-size:20px"></i></button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
    <!--Modal Area End-->

@section Scripts{

    <script type="text/javascript">

            OEMSApp.controller("CtrlSubject", ["$scope", "$http", "SweetAlert",
              function ($scope, $http, SweetAlert) {

                  init();
                  function init() {
                      initialize();
                      getSubjects();
                      
                  }
                  function initialize() {
                      $scope.modalTitle = "Add Designation";
                      $scope.subject = {};
                      $scope.subject.SubjectID = 0;
                      $scope.currentPage = 1;
                      $scope.pageno = 1;
                      $scope.pagesize = 10;
                      $scope.total_count = 12;
                      $scope.search = '';
                     
                      $scope.subjects = [];

                      $scope.getSubjects = getSubjects;
                      $scope.res = {};
                      $scope.data = {};
                      $scope.resetForm = resetForm;

                      $scope.btnDis = false;
                      $scope.spin = false;
                      $scope.pageSizeArray = [];
                      $scope.pageSizeArray.push({ value: 5, text: 5 });
                      $scope.pageSizeArray.push({ value: 10, text: 10 });
                      $scope.pageSizeArray.push({ value: 20, text: 20 });
                      $scope.pageSizeArray.push({ value: 50, text: 50 });
                      $scope.currentPage = 1;
                      $scope.pageSize = 10;

                  }
                  function setProgress(s)
                  {
                      $scope.btnDis = s;
                      $scope.spin = s;
                  }
                  function resetForm() {
                      $scope.modalTitle = "Add Subject";
                      $scope.subject = {};
                      $scope.subject.SubjectID = 0;
                      $scope.addform.$setUntouched();
                      $scope.addform.$setPristine();
                      $scope.submitted = false;
                      $scope.Id = '';
                      setProgress(false);
                  }

                  function getSubjects(pageno) {
                      $scope.subjects = [];
                     
                      $http({
                          method: 'GET',
                          url: baseUrl + '/Employee/GetSubjects/' 
                      }).then(function successCallback(response) {
                          $scope.subjects = response.data;
                          $scope.total_count = response.data.totalcount;
                          if ($scope.pagesize == -1)
                              $scope.pagesize = 500;

                      }, function errorCallback(response) {
                          toastr["info"](response.data.message);
                      });
                  }
                 
                  $scope.edit = function (n) {
                      $scope.modalTitle = "Update Subject";
                      $scope.subject = n;
                      $scope.Id = n.SubjectID;
                  };

                  $scope.save = function save(e) {
                      if ($scope.addform.$invalid)
                          return;
                      setProgress(true);
                      if ($scope.subject.SubjectID != 0) /// For Update
                      {
                          if ($scope.subject != '') {
                              $http({
                                  method: 'PUT',
                                  url: baseUrl + '/Employee/UpdateSubject/',
                                  data: $scope.subject
                              }).then(function successCallback(response) {

                                  $('#addmodal').modal('toggle');
                                  getSubjects();
                                  toastr["info"](response.data.message);
                                  resetForm();
                              }, function errorCallback(response) {
                                  toastr["info"](response.data.message);
                              });
                          }
                      } else {  //  For Add
                          if ($scope.subject != {}) {
                              $http({
                                  method: 'POST',
                                  url: baseUrl + '/Employee/AddSubject/',
                                  data: $scope.subject
                              }).then(function successCallback(response) {

                                  $('#addmodal').modal('toggle');
                                  getSubjects();
                                  toastr["info"](response.data.message);
                                  resetForm();
                              }, function errorCallback(response) {
                                  toastr["info"](response.data.message);
                              });
                          }
                      }

                  };

                  $scope.deleteSubject = function deleteSubject(n) {

                      SweetAlert.swal({
                          title: "Are you sure to delete it ?", type: "warning", showCancelButton: true, confirmButtonColor: "#DD6B55",
                          confirmButtonText: "Yes, delete it!",
                          closeOnConfirm: false
                      },
                      function (isConfirm) {

                          if (isConfirm) {
                              $http({
                                  method: 'DELETE',
                                  url: baseUrl + '/Employee/DeleteSubject/' + n.SubjectID,

                              }).then(function successCallback(response) {
                                  SweetAlert.swal("Deleted!", "Your data has been deleted.", "success");
                                  getSubjects(1);
                              }, function errorCallback(response) {
                                  toastr["info"](response.data.message);
                              });
                          }
                      });
                  };
              }]);

    </script>
}




