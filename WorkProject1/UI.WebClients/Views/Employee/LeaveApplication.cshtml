@{
    ViewBag.Title = "LeaveApplication";
}
<div class="portlet box blue-hoki" style="width: 100%" ng-controller="ctrlLeaveApplication">
    <!-- Begin: life time stats -->
    <div class="portlet light bordered">
        <div class="portlet-title">
            <div class="caption">
                <i class="icon-settings font-green"></i>
                <span class="caption-subject font-green sbold uppercase">Leave Application</span>
            </div>
            <div class="actions">
                <div class="btn-group btn-group-solid">
                    <button ng-click="submitted=false" class="btn green" data-target="#addmodal" data-toggle="modal"> <i class="fa fa-plus"></i> Add Leave Application</button>
                </div>
            </div>
        </div>
        <div class="portlet-body">
            <div class="table-container">
                <div id="sample_3_wrapper" class="dataTables_wrapper no-footer">
                    <div class="row">
                        <div class="col-md-4 col-sm-5 col-xs-6">
                            <div class="form-group">
                                <div class="col-lg-3 col-md-5 col-sm-4 col-xs-8" style="padding-left:0px">
                                    <select class="form-control" ng-model="pageSize" ng-options="P.value as P.text for P in pageSizeArray"></select>
                                </div>
                                <div class="col-md-7  col-sm-8  col-xs-4">
                                    @*<label for="search" class="control-label" style="padding-top:5px">Items</label>*@
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 col-sm-3 col-xs-1">
                        </div>
                        <div class="col-md-4 col-sm-4 col-xs-5">
                            <div id="sample_3_filter" class="pull-right">
                                <input ng-model="q" id="search" class="form-control" placeholder="Filter text">
                            </div>
                        </div>
                    </div>
                    <div class="table-scrollable table.table-responsive"> </div>
                    <table class="table table-bordered table-hover">
                        <thead>
                            <tr class="btn-primary">
                                <th>SI</th>
                                <th>Employee Name</th>
                                <th>Leave Type</th>
                                <th>From Date</th>
                                <th>To Date</th>
                                <th>Total Days</th>
                                <th>Total Effect Days</th>
                                @*<th>Reason</th>*@
                                <th>Attachment</th>
                                 @*<th>Is ReApplied</th>*@
                                <th>Balance Leave</th>
                                <th>Status</th>
                                <th style="text-align:center">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr ng-show="Versions.results.length <= 0"><td colspan="5" style="text-align:center;"><i class="fa fa-refresh"></i> Loading new data!!</td></tr>
                            <tr dir-paginate="item in salaryLeaveApplicationlist| filter:q  | itemsPerPage: pageSize" current-page="currentPage">
                                <td>{{$index+1}}</td>
                                <td>{{item.FullName}}</td>
                                <td>{{item.TypeName}}</td>
                                <td>{{item.FromDate| date:'dd/MM/yyyy'}}</td>
                                <td>{{item.ToDate| date:'dd/MM/yyyy'}}</td>
                                <td>{{item.TotalDays}}</td>
                                <td>{{item.TotalEffectDays}}</td>
                                @*<td>{{item.Reason}}</td>*@
                                @*<td>{{item.Attachment}}</td>*@
                                <td><a ng-hide="item.Attachment==null" class="btn btn-xs grey" href="@Url.Action("DownloadLeaveApplicationImage","AttendanceV")?Id={{item.Id}}" target="_blank">Download</a><span class="btn btn-xs red" ng-show="item.Attachment==null">No Attached</span> </td>
                                 @*<td>{{item.IsReApplied}}</td>*@
                                <td ng-if="item.BalanceLeave>0">{{item.BalanceLeave}}</td>
                                <td ng-if="item.BalanceLeave<=0"><p style="color:red;">{{item.BalanceLeave}}</p></td>
                                <td ng-if="item.Status=='Pending'"><p style="color:red;">Pending</p></td>
                                <td ng-if="item.Status=='Approved'">
                                    <a ng-click="detailsAction(item)" href="javascript:;" class="btn btn-primary btn-sm" data-target="#reasonmodal" data-toggle="modal">
                                        <i class="">Approved</i>
                                    </a>
                                </td>
                                <td ng-if="item.Status=='Cancel'">
                                    <a ng-click="detailsAction(item)" href="javascript:;" class="btn btn-danger btn-sm" data-target="#reasonmodal" data-toggle="modal">
                                        <i class="">Rejected</i>
                                    </a>
                                </td>
                                <td align="center" ng-if="item.Status=='Pending'  || item.Status==null">
                                    <a href="javascript:;" class="btn btn-icon-only green" ng-click="editLeaveApplication(item)" data-target="#addmodal" data-toggle="modal">
                                        <i class="fa fa-edit"></i>
                                    </a>
                                    <a ng-click="deleteLeaveApplication(item.Id)" href="javascript:;" class="btn btn-icon-only red">
                                        <i class="fa fa-trash"></i>
                                    </a>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <div class="row">
                        <dir-pagination-controls boundary-links="true" template-url="~/assets/angular/lib/dirPagination.tpl.html"></dir-pagination-controls>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- End: life time stats -->
    <!--Modal Area Start-->
    <div id="addmodal" class="modal fade" tabindex="-1" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog">
            <div class="modal-content">
                <form name="addBasic" ng-submit="save()" class="form-horizontal" id="form_sample_1" novalidate>
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">XSS</button>
                        <h4 class="modal-title">{{modalTitle}}</h4>
                    </div>
                    <div class="modal-body">
                        <div class="form-body">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group" ng-class="{ 'has-error' : submitted && addBasic.EmpId.$invalid}">
                                        <label class="col-md-3 control-label">
                                            Employee :
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-9">
                                            <input type="text" name="EmpId" ng-model="Std" typeahead-on-select='onSelect($item, $model, $label)'
                                                   placeholder="Search name/ID SMS Notification"
                                                   uib-typeahead="i  as i.Text for i in Search($viewValue)"
                                                   typeahead-loading="loadingLocations" typeahead-no-results="noResults" class="form-control">
                                            <i ng-show="loadingLocations" class="glyphicon glyphicon-refresh"></i>
                                            <div ng-show="noResults"><i class="glyphicon glyphicon-remove"></i> No Results Found</div>
                                            <input type="hidden" name="StudentIID" ng-value="Std.Value" />
                                            <div class="form-control-focus"> </div>
                                            <span ng-show="submitted &&  addBasic.EmpId.$error.required" class="help-block">Employee Required</span>
                                        </div>
                                    </div>
                                    <div class="form-group" ng-class="{ 'has-error' : submitted && addBasic.LeaveTypeId.$invalid}">
                                        <label class="col-md-3 control-label">
                                            Leave Type :
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-9">
                                            <select class="form-control" ng-change="getLeaveBalance()" ng-model="employeeInfo.LeaveTypeId" name="LeaveTypeId" required ng-options="LeaveType.LeaveId as LeaveType.TypeName for LeaveType in leaveTypeList">
                                                <option value="" selected="selected">Select  Leave Type</option>
                                            </select>
                                            <span ng-show="submitted &&  addBasic.LeaveTypeId.$error.required" class="help-block">Leave Type Required</span>
                                        </div>
                                    </div>

                                    <div class="form-group"  ng-class="{ 'has-error' : submitted && addBasic.FromDate.$invalid}">
                                        <label class="col-md-3 control-label">
                                            From Date
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-9">
                                            <input class="form-control" ng-change="getTotalDays()" type="text" ng-click="p1=true" is-open="p1" readonly ng-model="employeeInfo.FromDate" placeholder="Start Date" uib-datepicker-popup="dd/MM/yyyy" name="FromDate" required />
                                            <span ng-show="submitted &&  addBasic.FromDate.$error.required" class="help-block">From Date Required</span>
                                        </div>
                                    </div>
                                    <div class="form-group" ng-class="{ 'has-error' : submitted && addBasic.ToDate.$invalid}">
                                        <label class="col-md-3 control-label">
                                            To Date
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-9">
                                            <input class="form-control" ng-change="getTotalDays()" type="text" ng-click="p2=true" is-open="p2" readonly ng-model="employeeInfo.ToDate" placeholder="To Date" uib-datepicker-popup="dd/MM/yyyy" name="ToDate" required />
                                            <span ng-show="submitted &&  addBasic.ToDate.$error.required" class="help-block">To Date Required</span>
                                        </div>
                                    </div>


                                    <div class="form-group">
                                        <label class="col-md-3 control-label">
                                            Total Days :
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-9" ng-class="{ 'has-error' : submitted && addBasic.TotalDays.$invalid}">
                                            <input type="number" ng-model="employeeInfo.TotalDays" class="form-control" placeholder="Total Days" name="TotalDays" required disabled>
                                            <div class="form-control-focus"> </div>
                                            <span ng-show="submitted &&  addBasic.TotalDays.$error.required" class="help-block">Total Days Required</span>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <label class="col-md-3 control-label">
                                            Total Effect Days :
                                        </label>
                                        <div class="col-md-9">
                                            <input type="number" ng-model="employeeInfo.TotalEffectDays" class="form-control" placeholder="Total Effect Days" name="TotalEffectDays" disabled>
                                            <div class="form-control-focus"> </div>

                                        </div>
                                    </div>

                                    <div class="form-group" ng-class="{ 'has-error' : submitted && addBasic.Reason.$invalid}">
                                        <label class="col-md-3 control-label">
                                            Reasons :
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-9">
                                            @*<textarea ng-model="employeeInfo.Reason" rows="3" placeholder="Leave Reason" name="Reason" required></textarea>*@
                                            <textarea class="form-control" ng-model="employeeInfo.Reason" rows="3" placeholder="Leave Reason" name="Reason" required></textarea>
                                            @*<input type="text" ng-model="employeeInfo.Reason" class="form-control" placeholder="Reason" name="Reason" required>*@
                                            <div class="form-control-focus"> </div>
                                            <span ng-show="submitted &&  addBasic.Reason.$error.required" class="help-block">Reason Required</span>
                                        </div>
                                    </div>

                                    <div class="form-group" ng-class="{ 'has-error' : submitted && addBasic.Attachment.$invalid}">
                                        <label class="col-md-3 control-label">
                                            Attachment :
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-9">
                                            @*<input ng-model="file" onchange="angular.element(this).scope().upload(this)" id="getfile" type="file">*@
                                            <input ng-model="employeeInfo.Attachment" name="fileInput" id="fileInput" type="file" accept="image/x-png,image/gif,image/jpeg" />

                                        </div>
                                    </div>


                                    <div class="form-group" ng-class="{ 'has-error' : submitted && addBasic.BalanceLeave.$invalid}">
                                        <label class="col-md-3 control-label">
                                            Balance Leave :
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-9">
                                            <input type="number" ng-model="employeeInfo.BalanceLeave" class="form-control" placeholder="Balance Leave" name="BalanceLeave" required disabled value="0">
                                            <div class="form-control-focus"> </div>
                                            <span ng-show="submitted &&  addBasic.BalanceLeave.$error.required" class="help-block">Balance Leave Required</span>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <label class="col-md-3 control-label">
                                            Is ReApplied:
                                        </label>
                                        <div class="col-md-9">
                                            <div class="form-check form-check-inline">
                                                <input class="form-check-input" ng-model="employeeInfo.IsReApplied" type="checkbox" id="inlineCheckbox2" ng-true-value="true" ng-false-value="false" />
                                            </div>
                                        </div>
                                    </div>


                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" data-dismiss="modal" class="btn dark btn-outline" ng-click="resetForm();submitted=false">Cancel</button>
                        <button type="submit" ng-click="submitted=true" class="btn green-haze">{{modalbutton}}</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div id="reasonmodal" class="modal fade" tabindex="-1" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog">
            <div class="modal-content">
               
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                        <h4 class="modal-title">{{modalTitle}}</h4>
                    </div>
                    <div class="modal-body">
                        <div class="form-body">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <label class="col-md-3 control-label">
                                            Reasons:
                                        </label>
                                        <div class="col-md-9">
                                            <textarea class="form-control" ng-model="ReasonDetails" rows="3" placeholder="Leave Reason" name="Reason" required></textarea>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" data-dismiss="modal" class="btn dark btn-outline" ng-click="resetForm();submitted=false">Cancel</button>
                        
                    </div>
               
            </div>
        </div>
    </div>
    <!--Modal Area End-->
</div>
<!-- END FORM-->
@section Scripts{
    <script src="~/assets/global/plugins/bootstrap-fileinput/bootstrap-fileinput.js" type="text/javascript"></script>
    <script src="~/assets/pages/scripts/form-repeater.min.js"></script>
    <script type="text/javascript">
        for (i = new Date().getFullYear() ; i > 1900; i--) {
            $('#yearpicker').append($('<option />').val(i).html(i));
        }
    </script>
    <script type="text/javascript">
        OEMSApp.controller("ctrlLeaveApplication", ["$scope", "$http", "SweetAlert",
              function ($scope, $http, SweetAlert) {
                  init();
                  function init() {
                      initialize();
                      getAllLeaveApplication();
                      getAllLedger();
                      getAllEmployeeList();
                      getAllGradeList();
                      getAllTaxYearList();
                      getAllSalaryPeriod();
                      getAllLeaveType();

                  }

                  function initialize() {
                      $scope.modalbutton = 'Save';
                      $scope.modalTitle = 'Leave Application';
                      $scope.brnlist = [];
                      $scope.getAllLedger = [];
                      $scope.taxYearlist = [];
                      $scope.employeeInfo = {};
                      $scope.employeeInfos = [];
                      $scope.salaryLeaveApplicationlist = [];
                      $scope.resetForm = resetForm;
                      $scope.getAllLedger = getAllLedger;
                      $scope.checkUpdateId = 0;
                      $scope.pagesize = 10;
                      $scope.pageSizeArray = [];
                      $scope.pageSizeArray.push({ value: 5, text: 5 });
                      $scope.pageSizeArray.push({ value: 10, text: 10 });
                      $scope.pageSizeArray.push({ value: 20, text: 20 });
                      $scope.pageSizeArray.push({ value: 50, text: 50 });
                      $scope.currentPage = 1;
                      $scope.pageSize = 10;
                      $scope.employeelist = [];
                      $scope.gradelist = [];
                      $scope.salaryPeriodList = [];
                      $scope.leaveTypeList = [];
                      $scope.empNamelist = [];
                  }

                  function resetForm() {
                      $scope.modalbutton = 'Save';
                      $scope.modalTitle = "Add Leave Application";
                      $scope.employeeInfo = {};
                      $scope.Id = '';
                      $scope.checkUpdateId = 0;
                      $scope.addBasic.$setUntouched();
                      $scope.addBasic.$setPristine();
                      //$scope.submitted = false;
                  }

                  function getAllSalaryPeriod() {
                      $http({
                          method: 'GET',
                          url: baseUrl + 'Employee/GetAllSalaryPeriod/'
                      }).then(function successCallback(response) {
                          $scope.salaryPeriodList = response.data.results;
                      }, function errorCallback(response) {
                          toastr["info"](response.data.Message);
                      });
                  }

                  function getAllLedger() {
                      $scope.ledgerlist = [];
                      $http({
                          method: 'GET',
                          url: baseUrl + 'Accounts/GetAllLedgers/',
                      }).then(function successCallback(response) {
                          $scope.ledgerlist = response.data.results;
                      }, function errorCallback(response) {
                      });
                  }

                  function getAllEmployeeList() {
                      $http({
                          method: 'GET',
                          url: baseUrl + 'Employee/GetAllEmployeeList/'
                      }).then(function successCallback(response) {
                          $scope.employeelist = response.data.results;
                       
                      }, function errorCallback(response) {
                          toastr["info"](response.data.Message);
                      });
                  }

                  function getAllGradeList() {
                      $http({
                          method: 'GET',
                          url: baseUrl + 'Employee/GetSalaryGrade/'
                      }).then(function successCallback(response) {
                          $scope.gradelist = response.data.results;
                      }, function errorCallback(response) {
                          toastr["info"](response.data.Message);
                      });
                  }

                  function getAllTaxYearList() {

                      $http({
                          method: 'GET',
                          url: baseUrl + 'Employee/GetAllSalaryTaxYear/',
                      }).then(function successCallback(response) {
                          $scope.taxYearlist = response.data.results;
                      }, function errorCallback(response) {
                      });
                  }

                  $scope.save = function save() {
                      if ($scope.addBasic.$invalid)
                          return;


                      else {
                          var result = validation();
                          if (result) {

                              if ($scope.checkUpdateId != 10002) {
                                  addFile();
                                  $scope.employeeInfo.Status = 'Pending';
                                  $http({
                                      method: 'POST',
                                      url: baseUrl + 'Employee/AddLeaveApplication/',
                                      data: $scope.employeeInfo
                                  }).then(function successCallback(response) {
                                      $('#addmodal').modal('toggle');
                                      toastr["info"](response.data.message);
                                      sendFile = null;
                                      selectedFile = null;
                                      getAllLeaveApplication();
                                      resetForm();
                                  }, function errorCallback(response) {
                                      toastr["warning"](response.data.Message);
                                  });
                              }
                              if ($scope.checkUpdateId == 10002) {
                                  if ($scope.addBasic.$invalid)
                                      return;
                                  else {
                                      addFile();
                                      $http({
                                          method: 'PUT',
                                          url: baseUrl + 'Employee/UpdateLeaveApplication/',
                                          data: $scope.employeeInfo
                                      }).then(function successCallback(response) {
                                          toastr["info"](response.data.message);
                                          if (response.data.httpStatusCode != 305) {
                                              $('#addmodal').modal('toggle');
                                              resetForm();
                                          }
                                          sendFile = null;
                                          selectedFile = null;
                                          getAllLeaveApplication();
                                      }, function errorCallback(response) {
                                          toastr["warning"](response.data.Message);
                                      });
                                  }
                              }
                          }
                      }
                  }

                  function validation() {
                      var check = 0;
                      if ($scope.employeeInfo.EmpId ==undefined) {
                          toastr["info"]("Please select a Employee..!");
                          check = 1;
                          return false;
                      }

                      if ($scope.employeeInfo.FromDate > $scope.employeeInfo.ToDate) {
                          toastr["info"]("form date can not be greater than To date..!");
                          $scope.employeeInfo.FromDate = null;
                          check = 1;
                          return false;
                      }

                      if ($scope.employeeInfo.FromDate < $scope.employeeInfo.ToDate) {
                          DifferenceInDays($scope.employeeInfo.FromDate, $scope.employeeInfo.ToDate);
                      }

                      if ($scope.employeeInfo.BalanceLeave < $scope.employeeInfo.TotalEffectDays) {
                          toastr["info"]("Total Effect Days can not be greater than Total Leave Balance..!");
                          check = 1;
                          return false;

                      }
                      if (fileSize>2000000) {
                          toastr["info"]("Image Size is grater than 2MB..!");
                          check = 1;
                         $scope.employeeInfo.Attachment = null;
                          return false;

                      }

                      if (check == 0) {
                        return true;
                      }
                  }

                  function DifferenceInDays(firstDate, secondDate) {
                      var days = Math.round((secondDate - firstDate) / (1000 * 60 * 60 * 24));
                      $scope.employeeInfo.TotalEffectDays = days;
                  }

                  function addFile() {
                      if (sendFile == null) {
                          $scope.employeeInfo.Attachment = preveiousFile;
                      }
                      else
                          $scope.employeeInfo.Attachment = sendFile;

                  }

                  function processFile(theFile) {
                      return function (e) {
                          var theBytes = e.target.result; //.split('base64,')[1]; // use with uploadFile2
                          fileByteArray.push(theBytes);
                          document.getElementById('file').innerText = '';
                          for (var i = 0; i < fileByteArray.length; i++) {
                              document.getElementById('file').innerText += fileByteArray[i];
                          }
                      }
                  }


                  function getAllLeaveApplication() {
                      $http({
                          method: 'GET',
                          url: baseUrl + 'Employee/GetAllLeaveApplication/'
                      }).then(function successCallback(response) {
                          $scope.salaryLeaveApplicationlist = response.data.results;
                      }, function errorCallback(response) {
                          toastr["info"](response.data.Message);
                      });
                  }

                  function getAllLeaveType() {
                      $http({
                          method: 'GET',
                          url: baseUrl + 'Attendance/GetAllLeaveType'
                      }).then(function successCallback(response) {
                          $scope.leaveTypeList = response.data.results;
                      }, function errorCallback(response) {
                          toastr["warning"](response.data.message);
                      });
                  };

                  $scope.deleteLeaveApplication = function deleteLeaveApplication(leaveId) {
                      SweetAlert.swal({
                          title: "Are you sure to delete it ?", type: "warning", showCancelButton: true, confirmButtonColor: "#DD6B55",
                          confirmButtonText: "Yes, delete it!",
                          closeOnConfirm: false
                      },
                        function (isConfirm) {
                            if (isConfirm) {
                                $http({
                                    method: 'DELETE',
                                    url: baseUrl + 'Employee/DeleteLeaveApplication/' + leaveId,
                                }).then(function successCallback(response) {
                                    SweetAlert.swal("Deleted!", "Your data has been deleted.", "success");
                                    getAllLeaveApplication();
                                }, function errorCallback(response) {
                                    toastr["info"](response.data.message);
                                });
                            }
                        });
                  }
                  var realFileBtn;

                  $scope.editLeaveApplication = function editLeaveApplication(item) {
                      $scope.modalbutton = 'Update';
                      $scope.fileValue = item.Attachment;
                      preveiousFile = item.Attachment;
                      $scope.employeeInfo.Id = item.Id;
                      $scope.employeeInfo.LeaveTypeId = item.LeaveTypeId;
                      $scope.employeeInfo.FromDate = new Date(item.FromDate);
                      $scope.employeeInfo.EmpId = item.EmpId;
                      $scope.employeeInfo.ToDate = new Date(item.ToDate);
                      $scope.employeeInfo.TotalDays = item.TotalDays;
                      $scope.employeeInfo.TotalEffectDays = item.TotalEffectDays;
                      $scope.employeeInfo.Reason = item.Reason;
                      $scope.employeeInfo.Attachment = item.Attachment;
                      $scope.employeeInfo.BalanceLeave = item.BalanceLeave
                      $scope.employeeInfo.IsReApplied = item.IsReApplied
                      $scope.checkUpdateId = 10002;
                  }
                 
                  var sendFile;
                  var imagesize;
                  var preveiousFile = null;
                  var fileSize;
                  document.querySelector('#fileInput').addEventListener('change', function () {
                       fileSize = document.getElementById('fileInput').files[0].size;
                      var reader = new FileReader();
                      var selectedFile = this.files[0];
                     
                          reader.onload = function () {
                              var comma = this.result.indexOf(',');
                              sendFile = this.result.substr(comma + 1);
                              imagesize = sendFile.length;
                              console.log(sendFile);
                          }
                          reader.readAsDataURL(selectedFile);
                      
                     
                  }, false);


                  $scope.detailsAction=function detailsAction(item)
                  {
                      if (item.Status == 'Cancel')
                      {
                          $scope.ReasonDetails = item.RejectedComments;
                      }
                      else {
                          $scope.ReasonDetails = item.ApproveComments;
                      }
                      
                  }

                  $scope.getLeaveBalance = function getLeaveBalance() {
                      var empId = $scope.employeeInfo.EmpId;
                      var typeId = $scope.employeeInfo.LeaveTypeId;
                      $scope.employeeInfo.BalanceLeave = 0;
                      if ($scope.employeeInfo.EmpId != undefined && $scope.employeeInfo.LeaveTypeId != undefined) {
                          $http({
                              method: 'GET',
                              url: baseUrl + 'Employee/GetLeaveBalanceByEmpid/' + empId+'/'+typeId,
                          }).then(function successCallback(response) {
                              $scope.leaveBalance = response.data.results;
                              if ($scope.leaveBalance.Table.length != 0 || $scope.leaveBalance.Table.length != undefined) {
                                  $scope.employeeInfo.BalanceLeave = ($scope.leaveBalance.Table[1].TotalEffectDays) - ($scope.leaveBalance.Table[0].TotalEffectDays);
                              }
    
                                  
                          }, function errorCallback(response) {
                              toastr["warning"](response.data.message);
                          });
                      }
                  }

                  $scope.getTotalDays = function getTotalDays() {
                      if ($scope.employeeInfo.FromDate != undefined && $scope.employeeInfo.ToDate != undefined) {
                          var days = Math.round(($scope.employeeInfo.ToDate - $scope.employeeInfo.FromDate) / (1000 * 60 * 60 * 24));
                          $scope.employeeInfo.TotalEffectDays = days;
                          $scope.employeeInfo.TotalDays = days;
                      }    
                  }

                  $scope.Search = function (val) {
                      return $http.get(baseUrl + 'Employee/SearchEmployee/' + val, {
                          params: {

                          }
                      }).then(function (response) {
                          return response.data.results.map(function (item) {
                              return item;
                          });
                      });
                  };

                  $scope.onSelect = function onSelect($item, $model, $label) {
                      $scope.employeeInfo.EmpId = $item.Value;
                      SearchEmployeeId($item.Value);
                  };

                  function SearchEmployeeId(EmpID) {
                      $scope.employeeInfos = [];
                      $http({
                          method: 'GET',
                          url: baseUrl + 'Employee/GetEmployeeID/' + EmpID
                      }).then(function successCallback(response) {
                          $scope.employeeInfos = response.data.results;
                          $scope.tblshow = true;
                      }, function errorCallback(response) {
                          toastr["error"](response.data.Message);
                      });
                  }


              }]);
    </script>
}

