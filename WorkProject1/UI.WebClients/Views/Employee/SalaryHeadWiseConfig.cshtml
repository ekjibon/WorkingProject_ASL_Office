
@{
    ViewBag.Title = "Head Wise Config";
}

<div class="kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid"  ng-controller="ctrlSalarWiseConfig">
    <div class="row">
        <div class="kt-portlet kt-portlet--mobile">
            <div class="kt-portlet__head kt-portlet__head--lg">
                <div class="kt-portlet__head-label">
                    <h3 class="kt-portlet__head-title">
                        Head Wise Config
                    </h3>
                </div>
                <div class="kt-portlet__head-toolbar">
                    <div class="kt-portlet__head-wrapper">
                        <div class="dropdown dropdown-inline">
                            <button type="button" class="btn btn-brand btn-icon-sm" data-toggle="modal" data-target="#addmodal" aria-haspopup="true" aria-expanded="false">
                                <i class="flaticon2-plus"></i> Add Config
                            </button>
                            
                            <a class="btn btn-primary" href="@Url.Action("EmployeewiseConfig","Employee")" target="_blank" style="margin-right: 80px;">
                                Employeewise Config
                            </a>

                        </div>
                    </div>
                </div>
            </div>

            <div class="kt-portlet__body">

                <div class="row">
                    <div class="col-md-4 col-sm-5 col-xs-6">
                        <div class="form-group">
                            <div class="col-lg-3 col-md-5 col-sm-4 col-xs-8" style="padding-left:0px">

                                <select class="form-control kt-font-brand" ng-model="pageSize" ng-options="P.value as P.text for P in pageSizeArray"></select>
                            </div>
                        </div>

                    </div>
                    <div class="col-md-4 col-sm-3 col-xs-1">
                    </div>
                    <div class="col-md-4 col-sm-4 col-xs-5">
                        <div id="sample_3_filter" class="pull-right">
                            <input ng-model="q" id="search" class="form-control" placeholder="Filter text">
                        </div>
                    </div>
                </div>
                <table class="table table-bordered table-hover rounded">
                    <thead>
                        <tr class="btn-primary">
                            <th>SI</th>
                            <th>Employee Category</th>
                            <th>Salary Head</th>
                            <th>Percentage</th>
                            <th style="text-align:center">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr ng-show="Versions.results.length <= 0"><td colspan="5" style="text-align:center;"><i class="fa fa-refresh"></i> Loading new data!!</td></tr>
                        <tr dir-paginate="item in salaryHeadWiseConfigList| filter:q  | itemsPerPage: pageSize" current-page="currentPage">
                            <td>{{$index+1}}</td>
                            <td>{{item.CategoryName}}</td>
                            <td>{{item.HeadName}}</td>
                            <td>{{item.Amount}}</td>

                            <td align="center">
                                <a href="javascript:;" class="btn btn-outline-brand btn-elevate btn-icon" ng-click="editSalaryPeriod(item)" data-target="#addmodal" data-toggle="modal">
                                    <i class="fa fa-edit"></i>
                                </a>
                                <a ng-click="deleteSalaryHeadWiseConfig(item.Id)" href="javascript:;" class="btn btn-outline-danger btn-elevate btn-icon">
                                    <i class="fa fa-trash"></i>
                                </a>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <div class="row">
                    <dir-pagination-controls boundary-links="true" template-url="~/assets/angular/lib/dirPagination.tpl.html"></dir-pagination-controls>
                </div>
            </div>
        </div>
    </div>


    <!--Modal Area Start-->
    <div id="addmodal" class="modal fade" tabindex="-1" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog">
            <div class="modal-content">
                <form name="addBasic" ng-submit="save()" class="form-horizontal" id="form_sample_1" novalidate>
                    <div class="modal-header">
                        <h5 class="modal-title">{{modalTitle}}</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                        
                    </div>
                    <div class="modal-body">
                        <div class="form-body">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group row" ng-class="{ 'has-error' : submitted && addBasic.CategoryID.$invalid}">
                                        <label class="col-md-4 control-label text-right">
                                            Employee Category
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-8">
                                            <select class="form-control" ng-model="employeeInfo.CategoryID" name="CategoryID" ng-options="m.CategoryID as m.CategoryName for m in CommonFeilds.Category" required>
                                                <option value="" selected="selected">Select</option>
                                            </select>
                                            <span ng-show="submitted &&  addBasic.CategoryID.$error.required" class="help-block">Category Required</span>
                                        </div>
                                    </div>
                                    <div class="form-group row" ng-class="{ 'has-error' : submitted && addBasic.HeadId.$invalid}">
                                        <label class="col-md-4 control-label text-right">
                                             Salary Head :
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-8">
                                            <select class="form-control" ng-model="employeeInfo.HeadId" name="HeadId" required ng-options="head.Id as head.HeadName  for head in headSalarylist">
                                                <option value="" selected="selected">Choose Options</option>
                                            </select>
                                            <span ng-show="submitted &&  addBasic.HeadId.$error.required" class="help-block">Head Account Required</span>
                                        </div>
                                    </div>

                                    <div class="form-group row" ng-class="{ 'has-error' : submitted && addBasic.Amount.$invalid}">
                                        <label class="col-md-4 control-label text-right">
                                            <span >Percentage</span>                                           
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-8">
                                            <input type="number" ng-model="employeeInfo.Amount" class="form-control" placeholder="Percentage" name="Amount" required>
                                            <div class="form-control-focus"> </div>
                                            <span ng-show="submitted &&  addBasic.Amount.$error.required" class="help-block">Percentage Required</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" data-dismiss="modal" class="btn btn-secondary" ng-click="resetForm();submitted=false">Cancel</button>
                        <button type="submit" ng-click="submitted=true" class="btn btn-success">{{modalbutton}}</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <!--Modal Area End-->
</div>
<!-- END FORM-->
@section Scripts{
    <script src="~/assets/global/plugins/bootstrap-fileinput/bootstrap-fileinput.js" type="text/javascript"></script>
    <script src="~/assets/pages/scripts/form-repeater.min.js"></script>
    <script type="text/javascript">
        for (i = new Date().getFullYear() ; i > 1900; i--) {
            $('#yearpicker').append($('<option />').val(i).html(i));
        }
    </script>
    <script type="text/javascript">
        OEMSApp.controller("ctrlSalarWiseConfig", ["$scope", "$http", "SweetAlert",
              function ($scope, $http, SweetAlert) {
                  init();
                  function init() {
                      initialize();
                      getAllSalaryHeadWiseConfig();
                      getAllSalaryHead();
                      getAllCommons();
                  }

                  function initialize() {
                      $scope.modalbutton = 'Save';
                      $scope.modalTitle = 'Add Salary Head Wise Config';
                      $scope.brnlist = [];
                      $scope.ledgerlist = [];
                      $scope.taxYearlist = [];
                      $scope.employeeInfo = {};
                      $scope.employeeInfos = [];
                      $scope.salaryHeadWiseConfigList = [];
                      $scope.resetForm = resetForm;
                      $scope.checkUpdateId = 0;
                      $scope.pagesize = 10;
                      $scope.pageSizeArray = [];
                      $scope.pageSizeArray.push({ value: 5, text: 5 });
                      $scope.pageSizeArray.push({ value: 10, text: 10 });
                      $scope.pageSizeArray.push({ value: 20, text: 20 });
                      $scope.pageSizeArray.push({ value: 50, text: 50 });
                      $scope.currentPage = 1;
                      $scope.pageSize = 10;
                      $scope.employeelist = [];
                      $scope.gradelist = [];
                      $scope.CommonFeilds = [];
                  }

                  function resetForm() {
                      $scope.modalbutton = 'Save';
                      $scope.modalTitle = "Add Salary Head Wise Config";
                      $scope.employeeInfo = {};
                      $scope.Id = '';
                      $scope.checkUpdateId = 0;
                      $scope.addBasic.$setUntouched();
                      $scope.addBasic.$setPristine();
                      //$scope.submitted = false;
                  }

                  function getAllSalaryHead() {
                      $scope.headSalarylist = [];
                      $http({
                          method: 'GET',
                          url: baseUrl + 'Employee/GetAllSalaryHeadWiseConfig/',
                      }).then(function successCallback(response) {
                          $scope.headSalarylist = response.data.results;
                      }, function errorCallback(response) {
                      });
                  }

                  function getAllCommons() {
                      $scope.CommonFeilds = [];

                      $http({
                          method: 'GET',
                          url: baseUrl + 'Common/GetCommonItemEmp/'
                      }).then(function successCallback(response) {
                          $scope.CommonFeilds = response.data.results;
                      }, function errorCallback(response) {
                      });
                  }

                  $scope.save = function save()
                  {
                      if ($scope.employeeInfo.Amount>100)
                      {
                          toastr["warning"]('Percentage must be below 100.')
                          return;
                      }
                      if ($scope.employeeInfo.HeadId == 1027) {
                          if ($scope.employeeInfo.Amount > 0) {
                              toastr["warning"]('You can not set the Arrear Percentage, Please set 0')
                              return;
                          }
                      }
                      if ($scope.employeeInfo.HeadId == 2032) {
                          if ($scope.employeeInfo.Amount > 0) {
                              toastr["warning"]('You can not set the Salary Hold Refund Percentage, Please set 0')
                              return;
                          }
                      }
                      if ($scope.addBasic.$invalid)
                          return;

                      else {
                          var result = validation();
                          if (result) {
                              if ($scope.checkUpdateId != 10002) {
                                  $http({
                                      method: 'POST',
                                      url: baseUrl + 'Employee/AddSalarySalaryHeadWiseConfig/',
                                      data: $scope.employeeInfo
                                  }).then(function successCallback(response) {
                                      $('#addmodal').modal('toggle');
                                      toastr["info"](response.data.message);
                                      getAllSalaryHeadWiseConfig();
                                      resetForm();
                                  }, function errorCallback(response) {
                                      toastr["warning"](response.data.Message);
                                  });
                              }
                              if ($scope.checkUpdateId == 10002) {
                                  if ($scope.addBasic.$invalid)
                                      return;
                                  else {
                                      $http({
                                          method: 'PUT',
                                          url: baseUrl + 'Employee/UpdateSalaryHeadWiseConfig/',
                                          data: $scope.employeeInfo
                                      }).then(function successCallback(response) {
                                          toastr["info"](response.data.message);
                                          if (response.data.httpStatusCode != 305) {
                                              $('#addmodal').modal('toggle');
                                              resetForm();
                                          }
                                          getAllSalaryHeadWiseConfig();
                                      }, function errorCallback(response) {
                                          toastr["warning"](response.data.Message);
                                      });
                                  }
                              }
                          }
                      }
                     
                  }

                  function validation() {
                      var check = 0;
                      if ($scope.employeeInfo.MinAmount > $scope.employeeInfo.MaxAmount) {
                          toastr["info"]("Min Amount can not be greater than Max Amount..!");
                          $scope.employeeInfo.MinAmount = null;
                          check = 1;
                          return false;

                      }

                      if (check == 0) {
                          return true;
                      }
                  }

                  function getAllSalaryHeadWiseConfig()
                  {
                      $scope.salaryHeadWiseConfigList = [];
                      $http({
                          method: 'GET',
                          url: baseUrl + 'Employee/GetAllSalaryHeadWiseConfigWithPercentage/'
                      }).then(function successCallback(response) {
                          $scope.salaryHeadWiseConfigList = response.data.results;
                      }, function errorCallback(response) {
                          toastr["info"](response.data.Message);
                      });
                  }

                  $scope.deleteSalaryHeadWiseConfig = function deleteSalaryHeadWiseConfig(conifgId)
                  {
                      SweetAlert.swal({
                          title: "Are you sure to delete it ?", type: "warning", showCancelButton: true, confirmButtonColor: "#DD6B55",
                          confirmButtonText: "Yes, delete it!",
                          closeOnConfirm: false
                      },
                        function (isConfirm) {
                            if (isConfirm) {
                                $http({
                                    method: 'DELETE',
                                    url: baseUrl + 'Employee/DeleteSalaryHeadWiseConfig/' + conifgId,
                                }).then(function successCallback(response) {
                                    SweetAlert.swal("Deleted!", "Your data has been deleted.", "success");
                                    getAllSalaryHeadWiseConfig();
                                }, function errorCallback(response) {
                                    toastr["info"](response.data.message);
                                });
                            }
                        });
                  }

                  $scope.editSalaryPeriod = function editSalaryPeriod(item)
                  {
                      $scope.modalTitle = 'Update Salary Head Wise Config';
                      $scope.modalbutton = 'Update';
                      $scope.employeeInfo = item;
                      $scope.employeeInfo.Id = item.Id;
                  
                   

                      $scope.checkUpdateId = 10002;
                  }

                  $scope.TotalAmount = function TotalAmount() {

                      $scope.employeeInfo.Totalpercentage = 0;
                      var totalamount = 0;
                      $scope.employeeInfo.totalpercentage = 0;
                      angular.forEach($scope.salaryHeadWiseConfigList, function (item) {
                          if (item.CategoryID == $scope.employeeInfo.CategoryID) {
                                     totalamount += item.Amount;
                                      $scope.employeeInfo.totalpercentage = totalamount;
                          }
                   
                      });

                      $scope.employeeInfo.TotalPercentage = $scope.employeeInfo.totalpercentage + $scope.employeeInfo.Amount;

                      if ($scope.employeeInfo.totalpercentage > 100) {
                          toastr["warning"]('Percentage must be below 100');
                          return;
                      }
                      else
                      {
                          if ($scope.employeeInfo.TotalPercentage > 100) {
                              toastr["warning"]('Percentage must be below 100');
                              return;
                          }

                      }

                  }
              }]);
    </script>
}


