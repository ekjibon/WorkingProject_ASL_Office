@{
    ViewBag.Title = "ClassAssesment";
    Layout = "~/Views/Shared/_EmpLayout.cshtml";
    var SessionId = Request.QueryString["SessionId"];
    var BranchID = Request.QueryString["BranchID"];
    var ShiftID = Request.QueryString["ShiftID"];
    var ClassId = Request.QueryString["ClassId"];

    var SectionId = Request.QueryString["SectionId"];
    var SubjectID = Request.QueryString["SubjectID"];
    var MainExamId = Request.QueryString["MainExamId"];
    var TermId = Request.QueryString["TermId"];
    var SubExamId = Request.QueryString["SubExamId"];

    var SessionName = Request.QueryString["SessionName"];
    var BranchName = Request.QueryString["BranchName"];
    var ShiftName = Request.QueryString["ShiftName"];
    var ClassName = Request.QueryString["ClassName"];

    var SectionName = Request.QueryString["SectionName"];
    var SubjectName = Request.QueryString["SubjectName"];
    var MainExamName = Request.QueryString["MainExamName"];
    var TermName = Request.QueryString["TermName"];
}
<style type="text/css">
    body {
        height: 1000px;
    }
    .table thead tr th {
        font-size: 12px !important;
        /*color: white !important;*/
        font-weight: 600 !important;
    }
    #header-fixed {
        position: fixed;
        top: 75px;
        display: none;
        /*background-color: white;*/
        width: 74%;
    }
    .view {
	margin: auto;
    width: 99%;
}

.wrapper {
	position: relative;
	overflow: auto;
   	border: 1px solid black;
  	white-space: nowrap;
}

.sticky-col {
    position: sticky;
    position: -webkit-sticky;    
    background-color: white;
}my-custom-scrollbar
  
.first-col {
	width: 100px;
    min-width: 100px;
    max-width: 100px;
	left: 0px;    
}

.second-col {
	width: 150px;
    min-width: 150px;
    max-width: 150px;
	left: 100px;    
}

.my-custom-scrollbar {
position: relative;
height: 540px;
overflow: auto;
}
.table-wrapper-scroll-y {
display: block;
}
</style>
<div ng-controller="subjectSetup">
    <!-- Begin: life time stats -->
    <div class="card">
        <div class="emp-header">
            @ViewBag.Title
        </div>
        <div class="form-body">
            <form name="frmFilter" novalidate>
                <table class="table table-bordered table-inverse fixed-table-toolbar">
                    <tr>
                        <td style="color:#ff6a00">Session</td>
                        <td>@SessionName</td>
                        <td style="color:#ff6a00">Branch</td>
                        <td>@BranchName</td>
                        <td style="color:#ff6a00">Shift</td>
                        <td>@ShiftName</td>
                    </tr>
                    <tr>
                        <td style="color:#ff6a00">Class</td>
                        <td>@ClassName</td>
                        <td style="color:#ff6a00">Term Name</td>
                        <td> @TermName</td>
                    </tr>
                    <tr>
                        <td style="color:#ff6a00">Main Exam Name</td>
                        <td>@MainExamName</td>
                        <td style="color:#ff6a00">Section :</td>
                        <td>
                            <div ng-class="{ 'has-error' :isSubmitted && frmFilter.SectionId.$invalid}">
                                <select class="form-control" name="SectionId" ng-change="GetGradeList()" ng-model="StudentExamFilter.SectionId" ng-options="S.SectionId as S.SectionName for S in Sections" required>
                                    <option value="" selected="selected">Please Select</option>
                                </select>
                                <span ng-show="isSubmitted && frmFilter.SectionId.$error.required" class="help-block">Section Required</span>
                            </div>
                        </td>
                        <td colspan="2" style="text-align:right">
                            <button type="submit" ng-click="Search();isSubmitted=true" class="btn btn-info green">Search</button>
                        </td>
                    </tr>
                </table>
            <div class="row" style="margin-right:0!important">
            </div>
        </div>
        <div class="portlet-body">
            <div class="view" ng-show="StudentList.length > 0">
                <div class="wrapper">
                    <table class="table table-wrapper-scroll-y my-custom-scrollbar table-bordered">
                        <thead class="btn-primary">
                            <tr>
                                <th>Name</th>
                                <th>ID</th>
                                <th width="5%">Grade</th>
                                <th width="7%">Total Mark</th>
                                <th style="width:250px;text-align: center;" ng-repeat="item in StudentList[0].Assesments | orderBy : 'AssOrder'">{{item.AssesmentName}}</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr ng-repeat="item in StudentList | orderBy:'StudentName'" style="background-color:rgba(245, 204, 88, 0.32);color:#ff6a00">
                                <td>{{item.StudentName}}</td>
                                <td>{{item.StudentInsId}}</td>
                                <td>{{item.GradeLetter}}</td>
                                <td>{{item.TotalMark}}</td>
                                <td style="width:250px;" ng-repeat="ass in item.Assesments | orderBy : 'AssOrder'">
                                    <table style="width:250px;">
                                        <tr>
                                            <td style="padding-right:4px;">
                                                <select class="form-control" ng-model="ass.TeacherComments" ng-change="AddAssesmentComment(item.StudentIID,ass.AssesmentClassId,ass.TeacherComments)" ng-options="dropdownitem.DropdownName as dropdownitem.DropdownName for dropdownitem in AssesmentDropdownList | filter:{AssesmentId:ass.AssesmentClassId}">
                                                    <option value="" selected="selected">Please Select</option>
                                                </select>
                                            </td>
                                            <td>
                                                <select class="form-control" ng-model="ass.Grade" ng-change="AddGrade(item.StudentIID,ass.AssesmentClassId,ass.Grade)" ng-options="grade.GL as grade.GL for grade in GradeList">
                                                    <option value="" selected="selected">Grade Select</option>
                                                </select>
                                            </td>
                                        </tr>
                                    </table>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script type="text/javascript">
        OEMSApp.controller("subjectSetup", ["$scope", "$http", "SweetAlert", "blockUI", "$window", "$filter",
              function ($scope, $http, SweetAlert, blockUI, $window, $filter) {
                  init();
                  // Initial Methods
                  function init() {
                      initialize();
                      // getSubject();
                      getAllCommons();
                      getmainExams();
                      //LoadAllDropdownList();
                      
                  }
                  function initialize() {
                      $scope.DropdownsList = [];
                      $scope.SubjectsetupFilter = {};
                      $scope.RowColor = 1;
                      $scope.currentPage = 1;
                      $scope.pageno = 1;
                      $scope.pagesize = 1000;
                      $scope.total_count = 2000;
                      $scope.search = '';
                      $scope.GradeList = [];
                      $scope.CommonFeilds = [];
                      $scope.getAllCommons = getAllCommons;
                      $scope.btnDis = false;
                      $scope.StudentExamFilter = {};
                      $scope.StudentExamFilter.SessionId =@SessionId;
                      $scope.StudentExamFilter.TermId =@TermId;
                      $scope.StudentExamFilter.ClassId =@ClassId;
                      $scope.StudentExamFilter.MainExamId =@MainExamId;
                      $scope.StudentExamFilter.ShiftID=@ShiftID;
                      $scope.StudentExamFilter.BranchID=@BranchID;
                      GetSection();
                      
                  }

                  $scope.AddGrade = function AddGrade(StudentId, AssesmentId,Grade)
                  {
                      $scope.AssGradeAdd = {};
                      $scope.AssGradeAdd.StudentId=StudentId;
                      $scope.AssGradeAdd.Grade=Grade;
                      $scope.AssGradeAdd.MainExamId = $scope.StudentExamFilter.MainExamId;
                     // $scope.AssGradeAdd.Id = AssesmentId;
                      $scope.AssGradeAdd.AssesmentClassId = AssesmentId;
                      $http({
                          method: 'POST',
                          url: baseUrl + 'StudentInfo/AddGradeAssesmentClassWise',
                          data: $scope.AssGradeAdd
                      }).then(function successCallback(response) {

                          toastr["info"](response.data.message);
                      }, function errorCallback(response) {
                          if (response.data.message != null)
                              console.log(response);
                          toastr["info"](response.data.message);
                      });
                  }

                  $scope.AddAssesmentComment = function AddAssesmentComment(StudentId, AssesmentId, Comment)
                  {
                      $scope.NewAssesmentClassWise = {};
                      $scope.NewAssesmentClassWise.StudentId = StudentId;
                      $scope.NewAssesmentClassWise.AssesmentClassId = AssesmentId;
                      $scope.NewAssesmentClassWise.Comments = Comment;
                      $scope.NewAssesmentClassWise.MainExamId = $scope.StudentExamFilter.MainExamId;
                      //var dt = new FormData();
                      //dt.append("AssesmentSB", $scope.NewAssesmentClassWise);

                      //$.ajax({
                      //    type: "POST",
                      //    url: "StudentInfo/AddAssesmentClassWise",
                      //    data: dt,
                      //    processData: false,
                      //    success: function () {
                      //        alert("OK");
                      //    },
                      //    error: function () {
                      //        alert("Error");
                      //    }
                      //});
                      $scope.AssesmentObj={};
                      $scope.AssesmentObj.StudentId = StudentId;
                      $scope.AssesmentObj.AssessmentId = AssesmentId;
                      $scope.AssesmentObj.Comments = Comment;
                      $scope.AssesmentObj.MainExamId = $scope.StudentExamFilter.MainExamId;
                      $http({
                          method: 'POST',
                          url: baseUrl + 'StudentInfo/AddAssesmentClassWise',
                          data:$scope.AssesmentObj
                      }).then(function successCallback(response) {

                          toastr["info"](response.data.message);
                      }, function errorCallback(response) {
                          if (response.data.message != null)
                              console.log(response);
                              toastr["info"](response.data.message);
                      });

                  };
                  $scope.GetGradeList=function GetGradeList() {
                      
                      $http({
                          method: 'GET',
                          url: baseUrl + 'StudentInfo/GetGradeList/' + $scope.StudentExamFilter.SessionId + '/' +  $scope.StudentExamFilter.ClassId
                          //data: $scope.StudentExamFilter
                      }).then(function successCallback(response) {
                          $scope.GradeList = response.data.results;
                      }, function errorCallback(response) {
                          if (response.data.message != null)
                              console.log(response);
                      });

                  };
                  //Reset Form
                  function ResetSource() {
                      $scope.StudentExamFilter = {};
                      $scope.StudentList = [];
                  }
                  function LoadAllDropdownList() {
                      $http.post(baseUrl + 'Student/GetAssesmentListForDropdownSetup/' + $scope.StudentExamFilter.BranchID + '/' + $scope.StudentExamFilter.SessionId + '/' + $scope.StudentExamFilter.ShiftID + '/' + $scope.StudentExamFilter.ClassId + '/' + $scope.StudentExamFilter.SectionId + '/' + $scope.StudentExamFilter.TermId + '/' + $scope.StudentExamFilter.MainExamId + '').
                       then(function (response) {
                           $scope.AssesmentDropdownList = response.data.results;
                           $scope.AssesmentDropdownList = $filter('filter')($scope.AssesmentDropdownList, function (i) {
                               return (i.DropdownName != null);
                           });
                       });
                  }
                  function getmainExams() {
                      $scope.mainExams = [];
                      $http({
                          method: 'GET',
                          url: baseUrl + 'ExamSetup/GetAllMainExam/'
                      }).then(function successCallback(response) {
                          $scope.mainExams = response.data.results;
                          //console.log($scope.mainExams);
                          // $scope.AspNetRoles = response.data;
                          $scope.total_count = response.data.totalcount;
                          //console.log(response.data);
                      }, function errorCallback(response) {
                          toastr["warning"](response.data.Message);
                      });
                      //$scope.AspNetRoles = $scope.data;
                      //console.log($scope.data.totalcount);
                      // $scope.totalcount = 3; //$scope.data.totalcount;
                  }

                 function GetSection() {
                      $scope.Sections = [];
                      $http({
                          method: 'GET',
                          url: baseUrl + 'Common/GetSection/' + $scope.StudentExamFilter.SessionId + "/" + $scope.StudentExamFilter.ShiftID + "/" + $scope.StudentExamFilter.ClassId
                      }).then(function successCallback(response) {
                          $scope.Sections = response.data.results;
                      }, function errorCallback(response) {
                          toastr["error"](response.data.Message);
                      });
                  }
                  $scope.Search =function Search()
                  {
                      if ($scope.StudentExamFilter.$invalid == true)
                          return;

                      $scope.LoadStudentList();
                  }
                  $scope.LoadStudentList=function LoadStudentList() {
                      if ($scope.frmFilter.$invalid == true)
                          return;
                      $http.post(baseUrl + 'Student/SearchAssesmentStudentClassWise/' + $scope.StudentExamFilter.BranchID + '/' + $scope.StudentExamFilter.SessionId + '/' + $scope.StudentExamFilter.ShiftID + '/' + $scope.StudentExamFilter.ClassId + '/' + $scope.StudentExamFilter.SectionId + '/' + $scope.StudentExamFilter.TermId + '/' + $scope.StudentExamFilter.MainExamId).
                       then(function (response) {
                           $scope.StudentList = response.data.results;
                           LoadAllDropdownList();

                       });
                  };
                  function getAllDropdowns() {
                      $scope.Dropdowns = [];

                      $http({
                          method: 'GET',
                          url: baseUrl + 'Common/GetAllDropDown/'
                      }).then(function successCallback(response) {
                          $scope.Dropdowns = response.data.results;
                          $scope.DropdownsList = $scope.Dropdowns.filter(function (v) {
                              return v.Type == 'AssesmentComment';
                          });
                      }, function errorCallback(response) {
                      });
                  };
                  function getAllCommons() { // Get VSC
                      //$scope.CommonFeilds = [];
                      $http({
                          method: 'GET',
                          url: baseUrl + 'Common/GetCommonItem/'
                      }).then(function successCallback(response) {
                          $scope.CommonFeilds = response.data.results;
                      }, function errorCallback(response) {
                      });
                      getAllDropdowns();
                  }

                  $scope.LoadTerms = function LoadTerms(ClassId) {
                      $http({
                          method: 'GET',
                          url: baseUrl + 'SetupInstitution/GetTermByClassId' + '/' + ClassId
                      }).then(function successCallback(response) {
                          $scope.TermList = response.data.results;
                      }, function errorCallback(response) {
                          if (response.data.message != null)
                              toastr["info"](response.data.message);
                      });
                  }

              }]);
        $(document).ready(function () {
            $('[data-toggle="tooltip"]').tooltip();
        });
    </script>
    <script type="text/javascript">
     $(window).bind("scroll", function () {
         var offset = $(this).scrollTop();
     });
     (function () {
         var demo, fixedTable;
         fixedTable = function (el) {
             var $body, $header, $sidebar;
             $body = $(el).find('.fixedTable-body');
             $sidebar = $(el).find('.fixedTable-sidebar table');
             $header = $(el).find('.fixedTable-header table');
             return $($body).scroll(function () {
                 $($sidebar).css('margin-top', -$($body).scrollTop());
                 return $($header).css('margin-left', -$($body).scrollLeft());
             });
         };
         demo = new fixedTable($('#demo'));
     }).call(this);
    </script>
}

 

