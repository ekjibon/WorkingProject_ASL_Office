
@{
    ViewBag.Title = "Deduction Report";
}

<div class="kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid" ng-controller="ctrlSalaryReport">
    <div class="row">
        <div class="kt-portlet kt-portlet--mobile">
            <div class="kt-portlet__head kt-portlet__head--lg">
                <div class="kt-portlet__head-label">
                    <h3 class="kt-portlet__head-title">
                        Salary Deduction Report
                    </h3>
                </div>
            </div>
            <div class="kt-portlet__body">
                <!-- BEGIN FORM-->
                <form name="addBasic" ng-submit="Process()" class="form-horizontal" id="form_sample_1" novalidate>
                    <div class="row">
                        <div class="col-md-2">


                        </div>
                        <div class="col-md-5">
                            <div class="form-group row" ng-class="{ 'has-error' : submitted && addBasic.Branch.$invalid}">
                                <label class="col-md-5 control-label" style="text-align:right">
                                    Branch
                                    @*<span class="required">*</span>*@
                                </label>
                                <div class="col-md-7">
                                    <select class="form-control" ng-model="SalaryDeduction.BranchID" name="Branch" ng-options="b.BranchId as b.BranchName for b in CommonFeilds.Branch">
                                        <option value="" selected="selected">Choose Option</option>
                                    </select>
                                    <div class="form-control-focus"> </div>
                                </div>
                            </div>
                            <div class="form-group row" ng-class="{ 'has-error' : submitted && addBasic.Class.$invalid}">
                                <label class="col-md-5 control-label" style="text-align:right">
                                    Category
                                    @*<span class="required">*</span>*@
                                </label>
                                <div class="col-md-7">
                                    <select class="form-control" ng-model="SalaryDeduction.CategoryID" name="Class" ng-change="" ng-options="c.CategoryID as c.CategoryName for c in CommonFeilds.Category">
                                        <option value="" selected="selected">Choose Option</option>
                                    </select>
                                    <div class="form-control-focus"> </div>
                                </div>
                            </div>
                            <div class="form-group row" ng-class="{ 'has-error' : submitted && addBasic.SalaryYearId.$invalid}">
                                <label class="col-md-5 control-label" style="text-align:right">
                                    Salary Year :
                                    <span class="required">*</span>
                                </label>
                                <div class="col-md-7">
                                    <select class="form-control" ng-change="GetSalaryPeriod()" ng-model="SalaryDeduction.SalaryYearId" name="SalaryYearId" required ng-options="sp.Id as sp.YearName  for sp in SalaryYearList">
                                        <option value="" selected="selected">Choose Options</option>
                                    </select>
                                    <span ng-show="submitted &&  addBasic.SalaryYearId.$error.required" class="help-block">Salary Year Required</span>
                                </div>
                            </div>
                            <div class="form-group row" ng-class="{ 'has-error' : submitted && addBasic.PeriodId.$invalid}">
                                <label class="col-md-5 control-label" style="text-align:right">
                                    Salary Period :
                                    <span class="required">*</span>
                                </label>
                                <div class="col-md-7">
                                    <select class="form-control" ng-model="SalaryDeduction.PeriodId" name="PeriodId" required ng-options="sp.Id as sp.PeriodName  for sp in salaryPeriodList">
                                        <option value="" selected="selected">Choose Options</option>
                                    </select>
                                    <span ng-show="submitted &&  addBasic.PeriodId.$error.required" class="help-block">Salary Period Required</span>
                                </div>
                            </div>
                            <div class="form-group row" ng-class="{ 'has-error' : submitted && addBasic.reportType.$invalid}">
                                <label class="col-md-5 control-label" style="text-align:right">
                                    Report Type:
                                    <span class="required">*</span>
                                </label>
                                <div class="col-md-7">
                                    <select ng-model="SalaryDeduction.ReportType" class="form-control" name="reportType" required>
                                        <option value="">Select One</option>
                                        <option value="1">General</option>
                                        <option value="2">Tax</option>

                                    </select>
                                    <div class="form-control-focus"> </div>
                                    <span ng-show="submitted &&  addBasic.reportType.$error.required" class="help-block">Report Type Required</span>
                                </div>
                            </div>

                            <div class="form-group row" ng-class="{ 'has-error' : submitted && addBasic.PeriodId.$invalid}">
                                <div class="col-md-8">

                                </div>
                                <div class="col-md-4 text-right">
                                    <button ng-show="SalaryDeduction.BranchID==null && SalaryDeduction.CategoryID==null" ng-hide="SalaryDeduction.BranchID!=null && SalaryDeduction.CategoryID!=null " type="button" ng-click="submitted=true;Report(addBasic.$valid)" class="btn btn-success">Generate Report</button>
                                    <button ng-show="SalaryDeduction.BranchID!=null && SalaryDeduction.CategoryID!=null " type="button" ng-click="submitted=true;ReportwithBranch(addBasic.$valid)" class="btn btn-success">Generate Report</button>
                                    @*<a ng-show="SalarySheet.BranchID==null && SalarySheet.CategoryID==null" ng-hide="SalarySheet.BranchID!=null && SalarySheet.CategoryID!=null " target="_blank" href="/Report/EmployeeSalarySheet?PeriodId={{SalarySheet.PeriodId}}&BranchID= 0 &CategoryID= 0" class="btn green">Generate Report</a>
                            <a ng-show="SalarySheet.BranchID!=null && SalarySheet.CategoryID!=null " target="_blank" href="/Report/EmployeeSalarySheet?PeriodId={{SalarySheet.PeriodId}}&BranchID={{SalarySheet.BranchID}}&CategoryID={{SalarySheet.CategoryID}}"  class="btn green">Generate Report</a>*@
                                </div>
                            </div>

                        </div>
                        <div class="col-md-5">


                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>

</div>

@section Scripts{
    <script type="text/javascript">
        OEMSApp.controller("ctrlSalaryReport", ["$scope", "$http", "SweetAlert","$window",
              function ($scope, $http, SweetAlert, $window) {
                  init();
                  function init() {
                      initialize();
                      getAllCommons();
                      getAllSalaryYear();
                      //getAllSalaryPeriod();

                  }
                  function initialize() {

                      $scope.SalaryDeduction = {};

                      $scope.employeeInfos = [];
                      //$scope.SalaryReport.longholiday = false;
                      //$scope.SalaryReport.DeductTax = false;
                      $scope.resetForm = resetForm;

                      $scope.MonthList = [{ MonthId: 1, Name: 'January' },
                          { MonthId: 2, Name: 'February' },
                          { MonthId: 3, Name: 'March' },
                          { MonthId: 4, Name: 'April' },
                          { MonthId: 5, Name: 'May' },
                          { MonthId: 6, Name: 'June' },
                          { MonthId: 7, Name: 'July' },
                          { MonthId: 8, Name: 'August' },
                          { MonthId: 9, Name: 'September' },
                          { MonthId: 10, Name: 'October' },
                          { MonthId: 11, Name: 'November' },
                          { MonthId: 12, Name: 'December' },
                      ];
                      $scope.pagesize = 10;
                      $scope.pageSizeArray = [];
                      $scope.pageSizeArray.push({ value: 5, text: 5 });
                      $scope.pageSizeArray.push({ value: 10, text: 10 });
                      $scope.pageSizeArray.push({ value: 20, text: 20 });
                      $scope.pageSizeArray.push({ value: 50, text: 50 });
                      $scope.currentPage = 1;
                      $scope.pageSize = 10;
                  }
                  function resetForm() {

                      $scope.SalaryDeduction = {};


                      $scope.addBasic.$setUntouched();
                      $scope.addBasic.$setPristine();
                      //$scope.submitted = false;

                  }
                  function getAllCommons() {
                      $scope.CommonFeilds = [];
                      $http({
                          method: 'GET',
                          url: baseUrl + 'Common/GetCommonItemEmp/'
                      }).then(function successCallback(response) {
                          $scope.CommonFeilds = response.data.results;
                          console.log($scope.CommonFeilds);
                      }, function errorCallback(response) {
                      });
                  }

                function getAllSalaryYear() {
                      $scope.SalaryYearList = [];
                      $http({
                          method: 'GET',
                          url: baseUrl + 'Employee/GetAllSalaryYear/'
                      }).then(function successCallback(response) {
                          $scope.SalaryYearList = response.data.results;
                      }, function errorCallback(response) {
                          toastr["info"](response.data.Message);
                      });
                  }
                $scope.GetSalaryPeriod = function GetSalaryPeriod() {
                    $scope.salaryPeriodList = [];
                    //if ($scope.SalarySheet.CategoryID ==0) {
                    //    $scope.SalarySheet.CategoryID =0
                    //}
                    $http({
                        method: 'POST',
                        url: baseUrl + 'Employee/GetSalaryPeriodByCategoryIDSalaryYearId/',
                        data: $scope.SalaryDeduction  // + $scope.SalarySheet.CategoryID + "/" + $scope.SalarySheet.SalaryYearId
                    }).then(function successCallback(response) {
                        $scope.salaryPeriodList = response.data.results;
                        //toastr["warning"](response.data.message);

                    }, function errorCallback(response) {
                        toastr["error"](response.data.Message);
                    });

                }

                  function getAllSalaryPeriod() {
                      $scope.salaryHeadList = [];
                      $http({
                          method: 'GET',
                          url: baseUrl + 'Employee/GetAllSalaryPeriod/'
                      }).then(function successCallback(response) {
                          $scope.salaryPeriodList = response.data.results;

                      }, function errorCallback(response) {
                          toastr["info"](response.data.Message);
                      });
                  }

                  $scope.Report = function Report(valid) {
                      if (!valid) {
                          return;
                      }
                      else {
                          if ($scope.SalaryDeduction.ReportType == 1) {
                              $scope.uri = "@Url.Action("EmployeeSalaryDeduction", "Report")?PeriodId=" + $scope.SalaryDeduction.PeriodId + "&BranchId=0";
                              $window.open($scope.uri, '_blank');
                          }
                          else {
                              $scope.uri = "@Url.Action("EmployeeSalaryTaxDeduction", "Report")?PeriodId=" + $scope.SalaryDeduction.PeriodId + "&BranchId=0";
                              $window.open($scope.uri, '_blank');
                          }

                      }
                  };

                  $scope.ReportwithBranch = function ReportwithBranch(valid) {
                      if (!valid) {
                          return;
                      }
                      else {
                          if ($scope.SalaryDeduction.ReportType == 1) {
                              $scope.uri = "@Url.Action("EmployeeSalaryDeduction", "Report")?PeriodId=" + $scope.SalaryDeduction.PeriodId + "&BranchId=" + $scope.SalaryDeduction.BranchID + "&RptType=" + $scope.SalaryDeduction.ReportType;
                              $window.open($scope.uri, '_blank');
                          }
                          else {
                              $scope.uri = "@Url.Action("EmployeeSalaryTaxDeduction", "Report")?PeriodId=" + $scope.SalaryDeduction.PeriodId + "&BranchId=" + $scope.SalaryDeduction.BranchID + "&RptType=" + $scope.SalaryDeduction.ReportType;
                              $window.open($scope.uri, '_blank');
                          }
                      }
                  };


              }]);
    </script>
}

