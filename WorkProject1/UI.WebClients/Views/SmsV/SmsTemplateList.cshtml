@{
    ViewBag.Title = "SMS Template List";
}
@section Styles{
}
<div ng-controller="template">
    <!-- Begin: life time stats -->
    <div class="portlet light bordered">
        <div class="portlet-title">
            <div class="caption">
                <i class="icon-settings font-green"></i>
                <span class="caption-subject font-green sbold uppercase">@ViewBag.Title</span>
            </div>
        </div>
        <div class="portlet-body">
            <div class="table-container">
                <div id="sample_3_wrapper" class="dataTables_wrapper no-footer">
                    <div class="row">
                        <div class="col-md-4 col-sm-5 col-xs-6">
                            <div class="form-group">
                                <div class="col-lg-3 col-md-5 col-sm-4 col-xs-8" style="padding-left:0px">
                                    <select class="form-control" ng-model="pageSize" ng-options="P.value as P.text for P in pageSizeArray"></select>
                                </div>
                                <div class="col-md-7  col-sm-8  col-xs-4">
                                    @*<label for="search" class="control-label" style="padding-top:5px">Items</label>*@
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 col-sm-3 col-xs-1">
                        </div>
                        <div class="col-md-4 col-sm-4 col-xs-5">
                            <div id="sample_3_filter" class="pull-right">
                                <input ng-model="q" id="search" class="form-control" placeholder="Filter text">
                            </div>
                        </div>
                    </div>
                    <div class="table-scrollable"> </div>
                    <table class="table table-bordered table-hover">
                        <thead>
                            <tr class="btn-primary">
                                <th>Name</th>
                                <th>Template Type</th>

                                <th>Unicode Supported</th>
                                <th style="text-align:center">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr ng-show="TemplateList.results.length <= 0"><td colspan="5" style="text-align:center;"><i class="fa fa-refresh"></i> Loading new data!!</td></tr>
                            <tr dir-paginate="item in TemplateList.results| filter:q  | itemsPerPage: pageSize " current-page="currentPage">
                                <td>{{item.Title}}</td>
                                <td>{{item.TempType>1? 'Employee': 'Student'}}</td>
                                <td>{{item.isUnicode? 'YES': 'NO'}}</td>
                                <td align="center">
                                    <a class="btn btn-icon-only green" ng-click="edit(item)" data-target="#addmodal" data-toggle="modal">
                                        <i class="fa fa-edit"></i>
                                    </a>
                                    <a ng-click="deleteTemplate(item)" href="javascript:;" class="btn btn-icon-only red">
                                        <i class="fa fa-trash"></i>
                                    </a>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <div class="row">
                        <dir-pagination-controls boundary-links="true" template-url="~/assets/angular/lib/dirPagination.tpl.html"></dir-pagination-controls>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- End: life time stats -->
    <!--Modal Area Start-->
    <div id="addmodal" class="modal fade" tabindex="-1" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <form name="addform" ng-submit="save()" class="form-horizontal" id="form_sample_1" novalidate>
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                        <h4 class="modal-title">{{modalTitle}}</h4>
                    </div>
                    <div class="modal-body">
                        <div class="form-body">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group" ng-class="{ 'has-error' : submitted && addform.name.$invalid}">
                                        <label class="col-md-4 control-label">
                                            Name :
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-8">
                                            <input type="text" ng-model="template.Title" class="form-control" placeholder="Template Name" name="name" required>
                                            <div class="form-control-focus"> </div>
                                            <span ng-show="submitted && addform.name.$error.required" class="help-block">Template Name Required</span>
                                        </div>
                                    </div>
                                    <div class="form-group" ng-class="{ 'has-error' : submitted && addform.TempType.$invalid}">
                                        <label class="col-md-4 control-label">
                                            Template Type :
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-8">

                                            <select class="form-control" required ng-model="template.TempType" name="TempType">
                                                <option value="" selected="selected">Choose Option</option>
                                                <option value="1">Student</option>
                                                <option value="2">Employee</option>
                                            </select>
                                            <div class="form-control-focus"> </div>
                                            <span ng-show="submitted && addform.TempType.$error.required" class="help-block">Template Type Required</span>
                                        </div>

                                    </div>
                                    <div class="form-group" ng-show="template.BodyType==2">
                                        <label class="col-md-12 control-label" style="text-align:left;padding-bottom:2%;">
                                            Dynamic Fields :
                                        </label>
                                        <br />
                                        <div class="col-md-2"></div>
                                        <label class="col-md-10" style="background-color: #f47920;">Student Info</label>
                                        <div class="col-md-2"></div>
                                        <div class="col-md-10">
                                            <div>
                                                <span class="btn btn-xs tag" style="margin-right:5px;margin-bottom:5px;" data-name="{{item.TagName}}" ng-repeat="item in TempTag | filter:TagType='Student'">{{item.TagName}}</span>
                                            </div>
                                        </div>
                                        <br />
                                        <div class="col-md-2"></div>
                                        <label class="col-md-10" style="background-color: #f47920;">Fees Info</label>
                                        <div class="col-md-2"></div>
                                        <div class="col-md-10">
                                            <div>
                                                <span class="btn btn-xs tag" style="margin-right:5px;margin-bottom:5px;" data-name="{{item.TagName}}" ng-repeat="item in TempTag | filter:TagType='Fees'">{{item.TagName}}</span>
                                            </div>
                                        </div>
                                        <br />
                                        <div class="col-md-2"></div>
                                        <label class="col-md-10" style="background-color: #f47920;">Main Exam Result Info</label>
                                        <div class="col-md-2"></div>
                                        <div class="col-md-10">
                                            <div>
                                                <span class="btn btn-xs tag" style="margin-right:5px;margin-bottom:5px;" data-name="{{item.TagName}}" ng-repeat="item in TempTag | filter:TagType='Result'">{{item.TagName}}</span>
                                            </div>
                                        </div>
                                        <br />
                                        <div class="col-md-2"></div>
                                        <label class="col-md-10" style="background-color: #f47920;">Grand Exam Result Info</label>
                                        <div class="col-md-2"></div>
                                        <div class="col-md-10">
                                            <div>
                                                <span class="btn btn-xs tag" style="margin-right:5px;margin-bottom:5px;" data-name="{{item.TagName}}" ng-repeat="item in TempTag | filter:TagType='GResult'">{{item.TagName}}</span>
                                            </div>
                                        </div>
                                        <br />
                                        <div class="col-md-2"></div>
                                        <label class="col-md-10" style="background-color: #f47920;">Employee Info</label>
                                        <div class="col-md-2"></div>
                                        <div class="col-md-10">
                                            <div>
                                                <span class="btn btn-xs tag" style="margin-right:5px;margin-bottom:5px;" data-name="{{item.TagName}}" ng-repeat="item in TempTag | filter:TagType='Employee'">{{item.TagName}}</span>
                                            </div>
                                        </div>
                                        <br />
                                        <div class="col-md-2"></div>
                                        <label class="col-md-10" style="background-color: #f47920;">Attendance Info</label>
                                        <div class="col-md-2"></div>
                                        <div class="col-md-10">
                                            <div>
                                                <span class="btn btn-xs tag" style="margin-right:5px;margin-bottom:5px;" data-name="{{item.TagName}}" ng-repeat="item in TempTag | filter:TagType='Attendance'">{{item.TagName}}</span>
                                            </div>
                                        </div>
                                        <br />
                                    </div>

                                </div>
                                <div class="col-md-6">
                                    <div class="form-group" ng-class="{ 'has-error' : submitted && addform.BodyType.$invalid}">
                                        <label class="col-md-5 control-label">
                                            SMS Type :
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-7">

                                            <select class="form-control" required ng-model="template.BodyType" name="BodyType" ng-init="template.BodyType = BodyType[0].Value" ng-options="x.Value as x.Type for x in BodyType"></select>
                                            <div class="form-control-focus"> </div>
                                            <span ng-show="submitted && addform.BodyType.$error.required" class="help-block">SMS Type Required</span>
                                        </div>
                                    </div>
                                    <div class="form-group" ng-class="{ 'has-error' : submitted && addform.CategoryId.$invalid}">
                                        <label class="col-md-5 control-label">
                                            Category :
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-7">
                                            <select class="form-control" ng-model="template.CategoryId" required name="CategoryId" ng-options="sms.Key as sms.Value for sms in SMSCategorySeed ">
                                                <option value="" selected="selected">Choose Option</option>
                                            </select>
                                            <div class="form-control-focus"> </div>
                                            <span ng-show="submitted && addform.CategoryId.$error.required" class="help-block">Category Required</span>
                                        </div>
                                    </div>
                                    <div class="form-group" ng-class="{ 'has-error' : submitted && addform.SMSBody.$invalid}">
                                        <label class="col-md-12 control-label" style="text-align:left;">
                                            Template Body :
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-8">
                                            <textarea type="text" id="txtBody" ng-model="template.SMSBody" ng-change="containsNonLatinCodepoints(template.SMSBody)" ng-trim="false" maxlength="{{Settings[0].NoSMSPart*maximumLength}}" class="form-control" style="height:300px;width:100%;" name="SMSBody" required></textarea>
                                            <div class="form-control-focus"> </div>
                                            <span ng-show="submitted && addform.SMSBody.$error.required" class="help-block">SMS Body Required</span>
                                        </div>
                                        <div class="col-md-4" ng-show="template.BodyType==1">
                                            <label class="col-md-12">
                                                SMS Part:
                                            </label>
                                            <label class="col-md-12">
                                                {{total()}}
                                            </label>
                                            <label class="col-md-12">
                                                Total Char :
                                            </label>
                                            <label class="col-md-12">
                                                {{template.SMSBody.length}}
                                            </label>
                                            <label class="col-md-12">
                                                Max SMS Part:
                                            </label>
                                            <label class="col-md-12">
                                                {{Settings[0].NoSMSPart}}
                                            </label>
                                        </div>
                                        <div class="form-group col-md-12" style="padding-top:2%;" ng-hide="Settings[0].AllowUnicode==false">
                                            <input type="radio" ng-model="template.isUnicode" ng-value="false" /> English
                                            <input type="radio" ng-model="template.isUnicode" ng-value="true" /> Unicode
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">

                        <button type="submit" ng-click="submitted=true" class="btn green-haze" ng-disabled="btnDis">Save <i ng-show="spin" class="fa fa-spinner fa-spin" style="font-size:20px"></i></button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <!--Modal Area End-->
</div>

@section Scripts{
    <script type="text/javascript">
        $(document).ready(function () {

            $(document).on("click", ".tag", function () {

                var tag = $(this).text();
                console.log(tag);
                var el = $("#txtBody").get(0);
                console.log(el.selectionStart);

                if (el.setSelectionRange) {
                    el.value = el.value.substring(0, el.selectionStart) + tag + el.value.substring(el.selectionStart, el.selectionEnd) + el.value.substring(el.selectionEnd, el.value.length);
                }
                console.log(el.selectionStart);

            });
        });
    </script>

    <script type="text/javascript">

        OEMSApp.controller("template", ["$scope", "$http", "SweetAlert",
              function ($scope, $http, SweetAlert) {

                  init();
                  function init() {
                      initialize();
                      getTemplateLists(1);
                      getAllDropdowns();
                      getAllCommons();
                      getAllTempTag();
                      getAllSettings();
                      GetSMSCategorySeed();
                  }
                  function initialize() {

                      $scope.template = {};
                      $scope.res = {};
                      $scope.data = {};
                      $scope.template.SMSPart = 0;
                      $scope.template.SMSLen = 0;
                      $scope.BodyType = [{ Type: "Static", Value: 1 }, { Type: "Dynamic", Value: 2 }, { Type: "Scheduler", Value: 3 }, { Type: "Auto Scheduler", Value: 4 }];
                      $scope.Dropdowns = [];
                      $scope.Settings = [];
                      $scope.TempTag = [];
                      $scope.CommonFeilds = [];
                      $scope.template.SMSBody = [];
                      $scope.template.TemplateId = 0;
                      $scope.currentPage = 1;
                      $scope.pageno = 1;
                      $scope.pageSize = 10;
                      $scope.total_count = 12;
                      $scope.search = '';
                      $scope.Template = {};
                      $scope.TemplateList = [];

                      $scope.getTemplateLists = getTemplateLists;
                      $scope.getAllDropdowns = getAllDropdowns;
                      $scope.getAllTempTag = getAllTempTag;
                      $scope.getAllSettings = getAllSettings;
                      $scope.btnDis = false;
                      $scope.spin = false;
                      $scope.pageSizeArray = [];
                      $scope.pageSizeArray.push({ value: 5, text: 5 });
                      $scope.pageSizeArray.push({ value: 10, text: 10 });
                      $scope.pageSizeArray.push({ value: 20, text: 20 });
                      $scope.pageSizeArray.push({ value: 50, text: 50 });
                      $scope.currentPage = 1;
                      $scope.pageSize = 10;

                  }
                  function setProgress(s) {
                      $scope.btnDis = s;
                      $scope.spin = s;
                  }
                  $scope.total = function total() {
                      if ($scope.template.isUnicode) {

                          if ($scope.template.SMSBody.length > 70) {
                              $scope.template.SMSPart = Math.ceil($scope.template.SMSBody.length / 67);
                              $scope.maximumLength = 67;
                          }
                          else {
                              $scope.template.SMSPart = 1;
                              $scope.maximumLength = 70;
                          }
                      }
                      else {
                          if ($scope.template.SMSBody.length > 160) {
                              $scope.template.SMSPart = Math.ceil($scope.template.SMSBody.length / 153);
                              $scope.maximumLength = 153;
                          }
                          else {
                              $scope.template.SMSPart = 1;
                              $scope.maximumLength = 160;
                          }
                      }

                      return $scope.template.SMSPart;
                  }
                  function getAllCommons() {
                      $scope.CommonFeilds = [];
                      $http({
                          method: 'GET',
                          url: baseUrl + 'Common/GetCommonItem/'
                      }).then(function successCallback(response) {
                          $scope.CommonFeilds = response.data.results;
                      }, function errorCallback(response) {
                          toastr["info"](response.data.message);
                      });
                  }
                  function GetSMSCategorySeed() {
                      $scope.TempTag = [];
                      $http({
                          method: 'GET',
                          url: baseUrl + 'SMS/GetSMSCategorySeed/'
                      }).then(function successCallback(response) {
                          $scope.SMSCategorySeed = response.data.results;
                      }, function errorCallback(response) {
                          toastr["info"](response.data.message);
                      });
                  }
                  function getAllTempTag() {
                      $scope.TempTag = [];
                      $http({
                          method: 'GET',
                          url: baseUrl + 'SMS/GetAllTempTag/'
                      }).then(function successCallback(response) {
                          $scope.TempTag = response.data.results;
                      }, function errorCallback(response) {
                          toastr["info"](response.data.message);
                      });
                  }
                  $scope.containsNonLatinCodepoints = function containsNonLatinCodepoints(s) {
                      $scope.template.isUnicode = /[^\u0000-\u00ff]/.test(s);
                  }
                  function getAllDropdowns() {
                      $scope.Dropdowns = [];
                      $http({
                          method: 'GET',
                          url: baseUrl + 'Common/GetAllDropDown/'
                      }).then(function successCallback(response) {
                          $scope.Dropdowns = response.data.results;
                      }, function errorCallback(response) {
                          toastr["info"](response.data.message);
                      });
                  }
                  function getAllSettings() {
                      $scope.Settings = [];
                      $http({
                          method: 'GET',
                          url: baseUrl + 'SMS/GetAllSettings/'
                      }).then(function successCallback(response) {
                          $scope.Settings = response.data.results;
                          $scope.template.isUnicode = $scope.Settings[0].AllowUnicode;
                      }, function errorCallback(response) {
                          toastr["info"](response.data.message);
                      });
                  }
                  function getTemplateLists(pageno) {
                      $scope.TemplateList = [];
                      $http({
                          method: 'GET',
                          url: baseUrl + 'SMS/GetAllSMSTemplates/'
                      }).then(function successCallback(response) {
                          $scope.TemplateList = response.data;
                      }, function errorCallback(response) {
                          toastr["warning"](response.data.Message);
                      });
                  }

                  $scope.searchData = function () {
                      getTemplateLists(1);
                  };

                  $scope.edit = function (n) {
                      $scope.modalTitle = "Update Template";
                      $scope.template = n;
                      $scope.Id = n.Id;
                  };
                  $scope.save = function save(e) {
                      if ($scope.addform.$invalid)
                          return;
                      if ($scope.template.TemplateId != 0) /// For Update
                      {
                          if ($scope.template != '') {
                              $http({
                                  method: 'PUT',
                                  url: baseUrl + 'SMS/UpdateTemplate/',
                                  data: $scope.template
                              }).then(function successCallback(response) {
                                  $('#addmodal').modal('toggle');
                                  getTemplateLists(1);
                                  toastr["info"](response.data.message);

                              }, function errorCallback(response) {
                                  toastr["warning"](response.data.Message);
                              });
                          }
                      }
                  };

                  $scope.deleteTemplate = function deleteTemplate(n) {
                      // SweetAlert.swal("Good job!", "You clicked the button!", "success");
                      SweetAlert.swal({
                          title: "Are you sure to delete it ?", type: "warning", showCancelButton: true, confirmButtonColor: "#DD6B55",
                          confirmButtonText: "Yes, delete it!",
                          closeOnConfirm: false
                      },
                      function (isConfirm) {
                          if (isConfirm) {
                              $http({
                                  method: 'POST',
                                  url: baseUrl + 'SMS/DeleteTemplate/',
                                  data: n
                              }).then(function successCallback(response) {
                                  SweetAlert.swal("Deleted!", "Your data has been deleted.", "success");
                                  getTemplateLists(1);
                              }, function errorCallback(response) {
                                  toastr["warning"](response.data.Message);
                              });
                          }
                      });
                  };
              }]);
    </script>

}