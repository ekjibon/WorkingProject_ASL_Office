
@{
    ViewBag.Title = "Add Requisition";
}

<div class="kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid" ng-controller="requisitionEntryCrlt">
    <div class="row">
        <div class="kt-portlet kt-portlet--mobile">
            <div class="kt-portlet__head kt-portlet__head--lg">
                <div class="kt-portlet__head-label">
                    <h3 class="kt-portlet__head-title">
                        <!----Titel Text-->
                        Add Requisition
                        <!----Titel Text -->
                    </h3>
                </div>
            </div>

            <div class="kt-portlet__body">
                <form name="addform" novalidate class="form-horizontal">
                    <div class="form-body">
                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group row" ng-class="{ 'has-error' : submitted && addform.Date.$invalid}">
                                    <label class="col-md-4 control-label text-right">
                                        Due Date:
                                        <span class="required">*</span>
                                    </label>
                                    <div class="col-md-8">
                                        <input class="form-control" type="text" ng-click="p1=true" is-open="p1" readonly ng-model="Req.Date" placeholder="Due Date" uib-datepicker-popup="dd/MM/yyyy" name="Date" datepicker-options="options" required />
                                        <div class="form-control-focus"> </div>
                                        <span ng-show="submitted && addform.Date.$error.required" class="help-block">Date Required</span>
                                    </div>
                                </div>
                                <div class="form-group row" ng-class="{ 'has-error' : submitted && addform.Description.$invalid}">
                                    <label class="col-md-4 control-label text-right">
                                        Description:
                                        @*<span class="required">*</span>*@
                                    </label>
                                    <div class="col-md-8">
                                        <textarea type="text" ng-model="Req.Description" class="form-control" placeholder="Description" name="Description"></textarea>
                                        <div class="form-control-focus"> </div>
                                        <span ng-show="submitted && addform.Description.$error.required" class="help-block">Description Required</span>
                                    </div>
                                </div>
                                <div class="form-group row  pull-right">
                                    <div class="col-md-12">
                                        <button class="btn btn-success" ng-click="save();submitted=true">Save</button>
                                        <button class="btn btn-danger" ng-click="Reset()">Cancel</button>
                                    </div>
                                </div>
                            </div>
                            @*<div class="col-md-4">

                    </div>*@
                            <div class="col-md-8">
                                <div class="row">
                                    <div class="col-md-5">
                                        <div class="form-group row">
                                            <label class="col-lg-4 control-label text-right">Product:</label>
                                            <div class="col-lg-8">
                                                <input type="text" ng-model="Product" typeahead-on-select='onSelect($item, $model, $label)' placeholder="Search Product By Name Or Code"
                                                       uib-typeahead="i  as i.Text for i in Search($viewValue)" typeahead-loading="loadingLocations" typeahead-no-results="noResults" class="form-control">
                                                <i ng-show="loadingLocations" class="glyphicon glyphicon-refresh"></i>
                                                <div ng-show="noResults"><i class="glyphicon glyphicon-remove"></i> No Results Found</div>
                                                <input type="hidden" name="ProductId" ng-model="ProductId" ng-value="Product.Value" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-5">
                                        <div class="form-group row" ng-class="{ 'has-error' : submitted && addform.OpeningBalance.$invalid}">
                                            <label class="col-md-4 control-label text-right">
                                                Quantity:
                                                @*<span class="required">*</span>*@
                                            </label>
                                            <div class="col-md-8">
                                                <input type="text" ng-model="Requisition.Quantity" ng-disabled="Product==null" onkeypress='return event.charCode >= 48 && event.charCode <= 57' class="form-control" placeholder="Quantity" name="OpeningBalance">
                                                <div class="form-control-focus"> </div>
                                                <span ng-show="submitted && addform.OpeningBalance.$error.required" class="help-block">Quantity Required</span>
                                                <span ng-show="submitted && addform.OpeningBalance.$error.pattern" class="help-block">Quantity should not be negative!</span>

                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-2">
                                        <div class="col-md-9">

                                        </div>
                                        <div class="col-md-4">
                                            <button class="btn btn-success" ng-disabled="Requisition.Quantity==null" ng-click="addProduct()">Add</button>
                                        </div>
                                    </div>
                                </div>
                                <table class="table table-bordered table-hover rounded">
                                    <thead class="btn-primary">
                                        <tr>
                                            <th> Name</th>
                                            <th>Quantity</th>
                                            <th>Unit</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr><td colspan="6" style="text-align:center" ng-hide="ProductList.length > 0">No Data Found</td></tr>
                                        <tr ng-show="ProductList.length > 0" ng-repeat="item in ProductList">
                                            <td>{{item.ProductName}}</td>
                                            <td>{{item.Quantity}}</td>
                                            <td>{{item.UnitCode}}</td>
                                            <td><a class="btn btn-danger" ng-click="deleteProduct($index)"><i class="fa fa-times" aria-hidden="true"></i> </a></td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script type="text/javascript">
        OEMSApp.controller("requisitionEntryCrlt", ["$scope", "$http", "SweetAlert", "filterFilter", "$filter",
          function ($scope, $http, SweetAlert, filterFilter, $filter) {
              init();
              function init() {
                  initialize();
              }
              function initialize() {
                  $scope.Requisition = {};
                  $scope.Req = {};
                  $scope.ProductId = 0;
                  $scope.ProductList = [];
                  $scope.Requisition.Product = '';
                  $scope.minDate =  new Date() + 1;
                  $scope.Date = $scope.Req.Date;

                  $scope.Reset = Reset;
         
                  $scope.pageSizeArray = [];
                  $scope.pageSizeArray.push({ value: 5, text: 5 });
                  $scope.pageSizeArray.push({ value: 10, text: 10 });
                  $scope.pageSizeArray.push({ value: 20, text: 20 });
                  $scope.pageSizeArray.push({ value: 50, text: 50 });
                  $scope.currentPage = 1;
                  $scope.pageSize = 10;
                  $scope.pageno = 1;
                  $scope.pagesize = 10;
                  $scope.total_count = 12;
              
              };

              $scope.options = {                  
                  minDate: new Date(new Date().getTime()+(1*24*60*60*1000)),
                  showWeeks: true
              };
      

             function Reset() {
                  $scope.Requisition = {};
                  $scope.Req = {};
                  $scope.ProductId = 0;
                  $scope.ProductList = [];
                  $scope.submitted = false;
         
              };
              $scope.addProduct = function () {
                  if ($scope.ProductList.length > 0) {

                      if (IsExists($scope.Requisition.ProductId)) {
                          $scope.ProductList.push({
                              'ProductName': $scope.Product,
                              'UnitCode': $scope.Unit,
                              'Quantity': $scope.Requisition.Quantity,
                              'ProductId': $scope.Requisition.ProductId, 'done': false
                          });
                      } else {
                          toastr["warning"]('Product Already Exist.');
                          return;
                      }
               
                     
                  } else {
                      $scope.ProductList.push({
                          'ProductName': $scope.Product,
                          'UnitCode': $scope.Unit,
                          'Quantity': $scope.Requisition.Quantity,
                          'ProductId': $scope.Requisition.ProductId, 'done': false
                      })
                  }
                  $scope.Product = null;
                  $scope.Requisition.Quantity = null;
                  $scope.Requisition.ProductId = 0;
                  $scope.Unit = '';
              }

              $scope.deleteProduct = function (index) {
                  $scope.ProductList.splice(index, 1);
              }
              $scope.save = function () {
                  if (Validation()) {
                      if ($scope.ProductList.length == 0) {
                          toastr["warning"]('Please Choose Product.');
                          return false;
                      }
                      $scope.Req.ReqDetailsList = $scope.ProductList;
                      if ($scope.Req!='') {
                          $http({
                              method: 'POST',
                              url: baseUrl + '/Inventory/RequisitionAdd/',
                              data: $scope.Req
                          }).then(function successCallback(response) {
                              toastr["info"](response.data.message);
                              Reset();
                              window.location = '/InventoryV/RequisitionList';
                          }, function errorCallback(response) {
                              toastr["warning"](response.data.Message);
                          });
                      }
                  } else {
                      toastr["warning"]('Form Invalid');
                  }
              }
              $scope.Search = function (val) {
                  if (val.length >= 3)
                      return $http.get(baseUrl + 'Inventory/SearchProduct/' + val, {
                          params: {}
                      }).then(function (response) {
                          return response.data.results.map(function (item) {
                              return item;
                          });
                      });
              };

              function IsExists(pro) {
                  var res = true;
                  angular.forEach($scope.ProductList, function (value, key) {
                      if (value.ProductId == pro)
                          res = false;
                  });
                  return res;
              }
              // for droupdown select list event....
              $scope.onSelect = function onSelect($item, $model, $label) {
                  $scope.Requisition.ProductId = Number($item.Value);
                  $scope.Product = $item.Text;
                  $http({
                      method: 'GET',
                      url: baseUrl + '/Inventory/GetProductListById/' + $scope.Requisition.ProductId
                      
                  }).then(function successCallback(response) {
                      $scope.Unit = response.data.results[0].UnitCode;
                  }, function errorCallback(response) {
                      toastr["warning"](response.data.Message);
                  });
                 
              };

              $scope.reset = function reset() {
                  $scope.Request = {};
                  $scope.Request.Id = 0;
                  $scope.modalTitle = 'Add ';
                  $scope.btnTitle = 'Save';

                  $scope.Leave = {};
                  $("#custom_text").html("No file chosen, yet.");
                  $(".demoInputBox").css("color", "#aaa");
              }



              function Validation() {
                  if ($scope.addform.$invalid) {
                      return false;
                  }
                  if ($scope.addform.$valid) {
                      return true;
                  }
                 
              }
              //This method is calling from dropDown
              $scope.changePageSize = function () {
                  $scope.studentSearch.pageIndex = 1;
                  Search();
              };
       
          }]);
    </script>
}


