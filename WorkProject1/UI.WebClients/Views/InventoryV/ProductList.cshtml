
@{
    ViewBag.Title = "Product Setup";
}

<div class="kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid" ng-controller="ProductClt">
    <div class="row">
        <div class="kt-portlet kt-portlet--mobile">
            <div class="kt-portlet__head kt-portlet__head--lg">
                <div class="kt-portlet__head-label">
                    <h3 class="kt-portlet__head-title">
                        All Product
                    </h3>
                </div>
                <div class="kt-portlet__head-toolbar">
                    <div class="kt-portlet__head-wrapper">
                        <div class="dropdown dropdown-inline">
                            <button type="button" class="btn btn-brand btn-icon-sm" data-toggle="modal" data-target="#addmodal" aria-haspopup="true" aria-expanded="false">
                                <i class="flaticon2-plus"></i> Add New Product
                            </button>

                        </div>
                    </div>
                </div>
            </div>

            <div class="kt-portlet__body">
                
                <form class="form-horizontal" name="filterform" id="form_sample_1" novalidate>
                    <div class="row">
                        
                            <div class="col-md-6">
                                <div class="form-group row row" ng-class="{ 'has-error' : submitted1 && filterform.ProductType.$invalid}">
                                    <label class="col-md-5 control-label text-right text-right">
                                        Product Type :
                                        <span class="required">*</span>
                                    </label>
                                    <div class="col-md-7">
                                        <select class="form-control" required name="ProductType" ng-model="ProductType">
                                            <option selected value="">Choose Options</option>
                                            <option value="1">For Sell</option>
                                            <option value="2">For Distribute</option>
                                            <option value="3">For Fixed Asset</option>
                                        </select>
                                        <div class="form-control-focus"> </div>
                                        <span ng-show="submitted1 && filterform.ProductType.$error.required" class="help-block">Product Type Required</span>
                                    </div>
                                </div>

                            </div>
                            <div class="col-md-6">
                                <div class="pull-left">
                                    <button class="btn btn-success" type="button" ng-click="FilterProduct();submitted1 = true">Search</button>
                                    <button class="btn btn-danger" ng-click="resetForm()">Reset</button>
                                </div>
                            </div>
                    </div>
                </form>


                <div class="row">
                    <div class="col-md-4 col-sm-5 col-xs-6">
                        <div class="form-group row">
                            <div class="col-lg-3 col-md-5 col-sm-4 col-xs-8" style="padding-left:0px">

                                <select class="form-control kt-font-brand" ng-model="pageSize" ng-options="P.value as P.text for P in pageSizeArray"></select>
                            </div>
                        </div>

                    </div>
                    <div class="col-md-4 col-sm-3 col-xs-1">
                    </div>
                    <div class="col-md-4 col-sm-4 col-xs-5">
                        <div id="sample_3_filter" class="pull-right">
                            <input ng-model="q" id="search" class="form-control" placeholder="Filter text">
                        </div>
                    </div>
                </div>

                <table class="table table-bordered table-hover rounded">
                    <thead>
                        <tr class="btn-primary">
                            <th>Product Type</th>
                            <th>Product Name</th>
                            <th>Code</th>
                            <th>Stock Quantity</th>
                            <th>Selling Price</th>
                            <th>Account Code</th>
                            <th style="text-align:center">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr ng-show="Products.length <= 0"><td colspan="5" style="text-align:center;"><i class="fa fa-refresh"></i> Loading new data!!</td></tr>
                        <tr dir-paginate="item in Products| filter: (q || ProductType)  | itemsPerPage: pageSize " current-page="currentPage">
                            <td>{{item.ProductType}}</td>
                            <td>{{item.ProductName}}</td>
                            <td>{{item.ProductCode}}</td>
                            <td>{{item.StockQuantity}} {{item.UnitCode}}</td>
                            <td>{{item.SellingPrice}}</td>
                            <td>{{item.AccCode}}</td>
                            <td align="center">
                                <a class="btn btn-outline-brand btn-elevate btn-icon" ng-click="edit(item)" data-target="#addmodal" data-toggle="modal">
                                    <i class="fa fa-edit"></i>
                                </a>
                                <a ng-click="deleteProductCate(item)" href="javascript:;" class="btn btn-outline-danger btn-elevate btn-icon">
                                    <i class="fa fa-trash"></i>
                                </a>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <div class="row">
                    <dir-pagination-controls boundary-links="true" template-url="~/assets/angular/lib/dirPagination.tpl.html"></dir-pagination-controls>
                </div>
            </div>
        </div>
    </div>
    
    <!--Modal Area Start-->
    <div id="addmodal" class="modal fade bd-example-modal-lg" tabindex="-1" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <form name="addform" ng-submit="save()" class="form-horizontal" id="form_sample_1" novalidate>
                    <div class="modal-header">
                        <h4 class="modal-title">{{modalTitle}}</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true" ng-click="resetForm();submitted=false"></button>
                    </div>
                    <div class="modal-body">
                        <div class="form-body">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group row" ng-class="{ 'has-error' : submitted && addform.ProductTypeId.$invalid}">
                                                <label class="col-md-5 control-label text-right">
                                                    Product Type:
                                                </label>
                                                <div class="col-md-7">
                                                    <select class="form-control" required name="ProductTypeId" ng-model="Product.ProductTypeId">
                                                        <option selected value="">Choose Options</option>
                                                        <option value="1">For Sell</option>
                                                        <option value="2">For Distribute</option>
                                                        <option value="3">Fixed Asset</option>
                                                    </select>
                                                    <div class="form-control-focus"> </div>
                                                    <span ng-show="submitted && addform.ProductTypeId.$error.required" class="help-block">Product Type Required</span>
                                                </div>
                                            </div>
                                            <div class="form-group row" ng-class="{ 'has-error' : submitted && addform.Category.$invalid}">
                                                <label class="col-md-5 control-label text-right">
                                                    Category:
                                                    <span class="required">*</span>
                                                </label>
                                                <div class="col-md-7">
                                                    <select class="form-control" required name="Category" ng-model="Product.CategoryId" ng-options="p.ProductCateId  as p.CategoryName for p in ProductCategorys">
                                                        <option selected value="">Choose Options</option>
                                                    </select>
                                                    <div class="form-control-focus"> </div>
                                                    <span ng-show="submitted && addform.Category.$error.required" class="help-block">Category Required</span>
                                                </div>
                                            </div>
                                            <div class="form-group row" ng-class="{ 'has-error' : submitted && addform.SubCategory.$invalid}">
                                                <label class="col-md-5 control-label text-right">
                                                    Sub Category:
                                                    <span class="required">*</span>
                                                </label>
                                                <div class="col-md-7">
                                                    <select class="form-control" ng-disabled="Product.CategoryId==null" required name="SubCategory" ng-model="Product.ProductSubCateId" ng-options="p.ProductSubCatId  as p.SubCategoryName for p in ProductSubCategorys | filter:{CategoryId:Product.CategoryId}:true">
                                                        <option selected value="">Choose Options</option>
                                                    </select>
                                                    <div class="form-control-focus"> </div>
                                                    <span ng-show="submitted && addform.SubCategory.$error.required" class="help-block">Category Required</span>
                                                </div>
                                            </div>
                                            <div class="form-group row" ng-class="{ 'has-error' : submitted && addform.ProductName.$invalid}">
                                                <label class="col-md-5 control-label text-right">
                                                    Product Name :
                                                    <span class="required">*</span>
                                                </label>
                                                <div class="col-md-7">
                                                    <input type="text" ng-model="Product.ProductName" class="form-control" placeholder="Product Name" name="ProductName" required>
                                                    <div class="form-control-focus"> </div>
                                                    <span ng-show="submitted && addform.ProductName.$error.required" class="help-block">Product Name Required</span>
                                                </div>
                                            </div>
                                            <div class="form-group row" ng-class="{ 'has-error' : submitted && addform.ProductCode.$invalid}">
                                                <label class="col-md-5 control-label text-right">
                                                    Product Code:
                                                    <span class="required">*</span>
                                                </label>
                                                <div class="col-md-7">
                                                    <input type="text" ng-model="Product.ProductCode" class="form-control" placeholder="Product Code" name="ProductCode" required>
                                                    <div class="form-control-focus"> </div>
                                                    <span ng-show="submitted && addform.ProductCode.$error.required" class="help-block">Product Code Required</span>
                                                </div>
                                            </div>
                                            <div class="form-group row" @*ng-class="{ 'has-error' : submitted && addform.Description.$invalid}"*@>
                                                <label class="col-md-5 control-label text-right">
                                                    Description:
                                                    @*<span class="required">*</span>*@
                                                </label>
                                                <div class="col-md-7">
                                                    <textarea type="text" ng-model="Product.Description" class="form-control" placeholder="Description" name="Description" ></textarea>
                                                    <div class="form-control-focus"> </div>
                                                    @*<span ng-show="submitted && addform.Description.$error.required" class="help-block">Description Required</span>*@
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                         
                                            <div class="form-group row" ng-hide="FiledHide" ng-class="{ 'has-error' : submitted && addform.OpeningBalance.$invalid}">
                                                <label class="col-md-5 control-label text-right">
                                                    Opening Balance:
                                                    <span class="required">*</span>
                                                </label>
                                                <div class="col-md-7">
                                                    <input type="text" ng-model="Product.OpeningBalance" ng-pattern="/^[0-9]\d{0,3}$/" onkeypress='return event.charCode >= 48 && event.charCode <= 57' class="form-control" placeholder="Opening Balance" name="OpeningBalance" required>
                                                    <div class="form-control-focus"> </div>
                                                    <span ng-show="submitted && addform.OpeningBalance.$error.required" class="help-block">Opening Balance Required</span>
                                                    <span ng-show="submitted && addform.OpeningBalance.$error.pattern" class="help-block">Opening Balance should not be negative.!</span>
                                                </div>
                                            </div>
                                            <div class="form-group row" ng-show="Product.ProductTypeId==2 || Product.ProductTypeId==3"  ng-hide="FiledHide || Product.ProductTypeId==1 " ng-class="{ 'has-error' : submitted && addform.Amount.$invalid}">
                                                <label class="col-md-5 control-label text-right">
                                                    Opening Amount:
                                                    <span class="required">*</span>
                                                </label>
                                                <div class="col-md-7">
                                                    <input type="text" ng-model="Product.Amount" ng-required="Product.ProductTypeId==2 || Product.ProductTypeId==3" ng-pattern="/^[0-9]\d{0,3}$/" onkeypress='return event.charCode >= 48 && event.charCode <= 57' class="form-control" placeholder="Opening Amount" name="Amount">
                                                    <div class="form-control-focus"> </div>
                                                    <span ng-show="submitted && addform.Amount.$error.required" class="help-block">Opening Balance Required</span>
                                                    @*<span ng-show="submitted && addform.Amount.$error.pattern" class="help-block">Opening Balance should not be negative.!</span>*@
                                                </div>
                                            </div>
                                            <div class="form-group row" ng-show="Product.ProductTypeId==1" ng-class="{ 'has-error' : submitted && addform.SellingPrice.$invalid}">
                                                <label class="col-md-5 control-label text-right">
                                                    Selling Price:
                                                    <span class="required">*</span>
                                                </label>
                                                <div class="col-md-7">
                                                    <input type="text" ng-model="Product.SellingPrice" ng-required="Product.ProductTypeId==1" onkeypress='return event.charCode >= 48 && event.charCode <= 57' class="form-control" placeholder="Selling Price" name="SellingPrice">
                                                    <div class="form-control-focus"> </div>
                                                    <span ng-show="submitted && addform.SellingPrice.$error.required" class="help-block">Selling Price Required</span>
                                                </div>
                                            </div>
                                            <div class="form-group row" ng-class="{ 'has-error' : submitted && addform.Unit.$invalid}">
                                                <label class="col-md-5 control-label text-right">
                                                    Unit: <span class="required">*</span>
                                                </label>
                                                <div class="col-md-7">
                                                    <select class="form-control" required name="Unit" ng-model="Product.UnitId" ng-options="u.UnitSetupId  as u.UnitName for u in UnitSetups">
                                                        <option selected value="">Choose Options</option>
                                                    </select>
                                                    <div class="form-control-focus"> </div>
                                                    <span ng-show="submitted && addform.Unit.$error.required" class="help-block">Unit Required</span>
                                                </div>
                                            </div>
                                            <div class="form-group row" @*ng-class="{ 'has-error' : submitted && addform.ReOrderLevel.$invalid}"*@>
                                                <label class="col-md-5 control-label text-right">
                                                    ReOrder Level:
                                                    @*<span class="required">*</span>*@
                                                </label>
                                                <div class="col-md-7">
                                                    <input type="text" ng-model="Product.ReOrderLevel" onkeypress='return event.charCode >= 48 && event.charCode <= 57' class="form-control" placeholder="ReOrder Level" name="ReOrderLevel" >
                                                    <div class="form-control-focus"> </div>
                                                    @*<span ng-show="submitted && addform.ReOrderLevel.$error.required" class="help-block">ReOrder Level Required</span>*@
                                                </div>
                                            </div>
                                            <div class="form-group row"  ng-hide="show || Product.ProductTypeId==1 || Product.ProductTypeId==2" ng-class="{'has-error' : submitted && addform.AccountCode.$invalid}">
                                                <label class="col-md-5 control-label text-right">
                                                    Account Code:
                                                    <span class="required">*</span>
                                                </label>
                                                <div class="col-md-6">
                                                    <input type="text" ng-model="drRow.SearchLedger" name="AccountCode"
                                                            ng-required="Product.ProductTypeId==3"
                                                            typeahead-on-select='onSelect($item, $model, $label,drRow)' 
                                                           placeholder="Search Ledger by Name"
                                                           uib-typeahead="i  as i.Text for i in Search($viewValue)" 
                                                           typeahead-loading="loadingLocations" typeahead-no-results="noResults" class="form-control">
                                                    <i ng-show="loadingLocations" class="glyphicon glyphicon-refresh"></i>
                                                    <div ng-show="noResults"><i class="glyphicon glyphicon-remove"></i> No Results Found</div>
                                                    @*<input type="text" ng-model="Supplier.AccountCode" class="form-control" placeholder="Account Code" name="AccountCode" required>*@
                                                    <div class="form-control-focus"> </div>
                                                    <span ng-show="submitted && addform.AccountCode.$error.required" class="help-block">Account Code Required</span>
                                                </div>
                                                <div class="col-md-1">
                                                    <i class="glyphicon" ng-class="(shw==1) ? 'Ok glyphicon-ok' : 'cross glyphicon-remove-sign'"></i>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" data-dismiss="modal" class="btn btn-secondary" ng-click="resetForm();">Cancel</button>
                        <button type="submit" ng-click="submitted=true;" class="btn btn-success">Save </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <!--Modal Area End-->
</div>

@section Scripts{

    <script type="text/javascript">

        OEMSApp.controller("ProductClt", ["$scope", "$http", "SweetAlert",
              function ($scope, $http, SweetAlert) {

                  init();
                  function init() {
                      initialize();
                  }
                  function initialize() {
                      $scope.modalTitle = "Add Product";
                      $scope.Product = {};
                      $scope.drRow = {};
                      $scope.Product.ProductId = 0;
                      $scope.Product.SellingPrice = 0;
                      $scope.shw = 0;
                      $scope.ProductType = null;
                      $scope.req = true;

                      $scope.ProductCategorys = [];
                      $scope.ProductSubCategorys = [];
                      $scope.UnitSetups = [];
                      $scope.getProductCategorys = getProductCategorys;
                      $scope.getProductSubCategorys = getProductSubCategorys;
                      $scope.getUnitSetups = getUnitSetups;
                      $scope.getProducts = getProducts;
                      $scope.resetForm = resetForm;

                      $scope.pageSizeArray = [];
                      $scope.pageSizeArray.push({ value: 5, text: 5 });
                      $scope.pageSizeArray.push({ value: 10, text: 10 });
                      $scope.pageSizeArray.push({ value: 20, text: 20 });
                      $scope.pageSizeArray.push({ value: 50, text: 50 });
                      $scope.currentPage = 1;
                      $scope.pageno = 1;
                      $scope.pageSize = 10;
                      $scope.total_count = 12;

                      getProductCategorys(1);
                      getProductSubCategorys(1);
                      getUnitSetups(1);
                      getProducts(1);
                  }

                  function resetForm() {
                      $scope.modalTitle = "Add Product";
                      $scope.Product = {};
                      $scope.drRow = {};
                      $scope.Product.ProductId = 0;
                      $scope.show = false;
                      $scope.ProductType = null;
                      $scope.req = true;
                      $scope.shw = 0;

                      $scope.FiledHide = false;
                      $scope.addform.$setUntouched();
                      $scope.addform.$setPristine();
                      $scope.submitted = false;
                      $scope.submitted1 = false;
                      getProductCategorys(1);
                      getProductSubCategorys(1);
                      getUnitSetups(1);
                  //    getProducts(1);

                  }

                  function getUnitSetups(pageno) {
                      $scope.UnitSetups = [];
                      $http({
                          method: 'GET',
                          url: baseUrl + 'Inventory/GetUnitSetups/'
                      }).then(function successCallback(response) {
                          $scope.UnitSetups = response.data.results;
                      }, function errorCallback(response) {
                          toastr["warning"](response.data.Message);
                      });
                  }

                  function getProductCategorys(pageno) {
                      $scope.ProductCategorys = [];
                      $http({
                          method: 'GET',
                          url: baseUrl + 'Inventory/GetProductCategorys/'
                      }).then(function successCallback(response) {
                          $scope.ProductCategorys = response.data.results;
                      }, function errorCallback(response) {
                          toastr["warning"](response.data.Message);
                      });
                  }

                  function getProductSubCategorys(pageno) {
                      $scope.ProductSubCategorys = [];
                      $http({
                          method: 'GET',
                          url: baseUrl + 'Inventory/GetProductSubCategorys/'
                      }).then(function successCallback(response) {
                          $scope.ProductSubCategorys = response.data.results;
                      }, function errorCallback(response) {
                          toastr["warning"](response.data.Message);
                      });
                  }
                  function getProducts(pageno) {
                      $scope.Products = [];
                      $http({
                          method: 'GET',
                          url: baseUrl + 'Inventory/GetProducts/'
                      }).then(function successCallback(response) {
                          $scope.Products = response.data.results;
                          toastr["info"](response.data.message);
                      }, function errorCallback(response) {
                          toastr["warning"](response.data.Message);
                      });
                  }

                  $scope.edit = function (n) {
                      $scope.modalTitle = "Update Product";
                      $scope.Product = n;
                      $scope.Product.ProductId = n.ProductId;
                      $scope.Product.CategoryId = n.CategoryId;

                      //$scope.Product.ProductSubCateId = n.ProductSubCateId.toString();
                      $scope.Product.ProductTypeId = n.ProductTypeId.toString();
                      $scope.FiledHide = true;
                      $scope.show = true;
                      $scope.req = false;

                  };
                  $scope.save = function save() {
                      if (Validation()) {
                          if ($scope.Product.ProductId != 0) /// For Update
                          {
                              if ($scope.Product != '') {
                                  $http({
                                      method: 'PUT',
                                      url: baseUrl + 'Inventory/UpdateProduct/',
                                      data: $scope.Product
                                  }).then(function successCallback(response) {
                                      $('#addmodal').modal('toggle');
                                      toastr["info"](response.data.message);
                                      resetForm();
                                  }, function errorCallback(response) {
                                      toastr["warning"](response.data.Message);
                                  });
                              }
                          } else {  //  For Add
                              if ($scope.Product != {}) {
                                  $http({
                                      method: 'POST',
                                      url: baseUrl + '/Inventory/AddProduct/',
                                      data: $scope.Product
                                  }).then(function successCallback(response) {
                                      $('#addmodal').modal('toggle');
                                      toastr["info"](response.data.message);
                                      resetForm();
                                  }, function errorCallback(response) {
                                      toastr["warning"](response.data.Message);
                                  });
                              }
                          }

                      } else {
                          toastr["warning"]('Form Invalid');
                      }
                  };
                   
                  $scope.FilterProduct = function () {
                      //getProducts(1);
                      if ($scope.filterform.$invalid) {
                          return;
                      }
                      $scope.ProductList = [];
                      angular.forEach($scope.Products, function (item) {
                          if (item.ProductTypeId == $scope.ProductType) {
                              $scope.ProductList.push(item);
                          }
                      });
                      $scope.Products = $scope.ProductList;
                  }

                  $scope.deleteProductCate = function deleteProductCate(n) {
                      // SweetAlert.swal("Good job!", "You clicked the button!", "success");
                      SweetAlert.swal({
                          title: "Are you sure to delete it ?", type: "warning", showCancelButton: true, confirmButtonColor: "#DD6B55",
                          confirmButtonText: "Yes, delete it!",
                          closeOnConfirm: false
                      },
                      function (isConfirm) {
                          if (isConfirm) {
                              $http({
                                  method: 'POST',
                                  url: baseUrl + 'Inventory/DeleteProduct/',
                                  data: n
                              }).then(function successCallback(response) {
                                  SweetAlert.swal("Deleted!", "Your data has been deleted.", "success");
                                  getProducts(1);
                              }, function errorCallback(response) {
                                  toastr["warning"](response.data.Message);
                              });
                          }
                      });
                  };
                  $scope.Search = function (val) {
                      if (val.length >= 2)
                          return $http.get(baseUrl + 'Inventory/SearchLedger/' + val,
                          {
                              params: {}
                          }).then(function (response) {
                              return response.data.results.map(function (item) {
                                  return item;
                              });
                          });
                  };

                  // for dropdown select list event....
                  $scope.onSelect = function onSelect($item, $model, $label, itemRow) {
                      $scope.Product.AccCode = $item.Text;
                      $scope.shw = 1;
                  }
                  function Validation() {
                      if ($scope.addform.$invalid) {
                          return false;
                      }
                      if ($scope.addform.$valid) {
                          return true;
                      }
                  }
              }]);
    </script>

}

