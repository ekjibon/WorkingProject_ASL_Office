
@{
    ViewBag.Title = "Purchase Order Receive";
}
<div class="kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid" ng-controller="purchaseOrderEntryCrlt">
    <div class="row">
        <div class="kt-portlet kt-portlet--mobile">
            <div class="kt-portlet__head kt-portlet__head--lg">
                <div class="kt-portlet__head-label">
                    <h3 class="kt-portlet__head-title">
                        <!----Titel Text-->
                        @ViewBag.Title
                        <!----Titel Text -->
                    </h3>
                </div>
            </div>

            <div class="kt-portlet__body">
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group row">
                            <label class="col-lg-4 control-label text-right">Purchase:</label>
                            <div class="col-lg-7">
                                <input type="text" ng-model="Product" typeahead-on-select='onSelect($item, $model, $label)' placeholder="Search PurchaseOrder By Code"
                                       uib-typeahead="i  as i.Text for i in Search($viewValue)" typeahead-loading="loadingLocations" typeahead-no-results="noResults" class="form-control">
                                <i ng-show="loadingLocations" class="glyphicon glyphicon-refresh"></i>
                                <div ng-show="noResults"><i class="glyphicon glyphicon-remove"></i> No Results Found</div>
                                <input type="hidden" name="ProductId" ng-model="ProductId" ng-value="Product.Value" />
                            </div>
                        </div>
                        <div class="form-group row" ng-class="{ 'has-error' : submitted && addform.Supplier.$invalid}">
                            <label class="col-md-4 control-label text-right">
                                Supplier :
                                <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                <input class="form-control" type="text" readonly ng-model="Purchase.SupplierName" placeholder="Supplier" name="Date" />
                            </div>
                        </div>
                        <div class="form-group row" ng-class="{ 'has-error' : submitted && addform.Date.$invalid}">
                            <label class="col-md-4 control-label text-right">
                                Due Date:
                                <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                <input class="form-control" type="text" readonly ng-value="Purchase.DueDate | date: 'dd/MM/yyyy'" placeholder="Due Date" name="Date" />
                                <div class="form-control-focus"> </div>

                            </div>
                        </div>
                        <div class="form-group row" ng-class="{ 'has-error' : submitted && addform.Description.$invalid}">
                            <label class="col-md-4 control-label text-right">
                                Description:
                                <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                <textarea type="text" disabled ng-model="Purchase.Description" class="form-control" placeholder="Description" name="Description"></textarea>
                                <div class="form-control-focus"> </div>

                            </div>
                        </div>

                    </div>
                    @*<div class="col-md-4">

            </div>*@
                    <div class="col-md-8">
                        <table class="table table-bordered table-hover rounded">
                            <thead class="btn-primary">
                                <tr>
                                    <th> Name</th>
                                    <th> Quantity</th>
                                    <th> Unit</th>
                                    <th> Unit Price</th>
                                    <th> Discount Price</th>
                                    <th> Total Price</th>
                                    <th> Receive Quantity</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr><td colspan="7" style="text-align:center" ng-hide="PurchaseList.length > 0">No Data Found</td></tr>
                                <tr ng-show="PurchaseList.length > 0" ng-repeat="item in PurchaseList">
                                    <td>{{item.ProductName}}</td>
                                    <td>{{item.PurchaseOrderQuantity}}</td>
                                    <td>{{item.UnitCode}}</td>
                                    <td>{{item.UnitPrice}}</td>
                                    <td>{{item.Discount}}</td>
                                    <td>{{item.TotalPrice}}</td>
                                    <td><input type="number" min="0" oninput="validity.valid||(value='');" ng-model="item.ReceiveQuantity" ng-keyup="Check(item.ReceiveQuantity,item.PurchaseOrderQuantity)" placeholder="Receive Quantity" class="form-control" /></td>
                                </tr>
                            </tbody>
                        </table>
                        <div class="form-group row pull-right">
                            <div class="col-md-12">
                                <button class="btn btn-success" data-target="#addmodal" data-toggle="modal">Receive</button>
                                <button class="btn btn-danger" ng-click="Reset();">Reset</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="addmodal" class="modal fade" tabindex="-1" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog">
            <div class="modal-content">
                <form name="addform"  class="form-horizontal" id="form_sample_1" novalidate >
                    <div class="modal-header">
                        <h5 class="modal-title">Purchase Order Receive</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                    </div>
                    <div class="modal-body">
                        <div class="form-body">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group row" ng-class="{ 'has-error' : submitted && addform.ReceiverComments.$invalid}">
                                        <label class="col-md-4 control-label text-right">
                                            Comments:
                                            @*<span class="required">*</span>*@
                                        </label>
                                        <div class="col-md-8">
                                            <textarea type="text" ng-model="PurchaseOrder.ReceiverComments" class="form-control" name="ReceiverComments"></textarea>
                                            <div class="form-control-focus"> </div>
                                            @*<span ng-show="submitted &&  addform.ReceiverComments.$error.required" class="help-block">Approved Comments Required</span>*@
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" ng-click="save();submitted=true" class="btn btn-success">Save</button>
                        <button type="button" data-dismiss="modal" class="btn  btn-secondary" ng-click="submitted=false">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
    
@section Scripts{
    <script type="text/javascript">
        OEMSApp.controller("purchaseOrderEntryCrlt", ["$scope", "$http", "SweetAlert", "filterFilter", "$filter",
          function ($scope, $http, SweetAlert, filterFilter, $filter) {
              init();
              function init() {
                  initialize();
                  
              }
              function initialize() {
                  $scope.PurchaseOrder = {};
                  $scope.Suppliers = [];
                  $scope.ProductId = 0;
                  $scope.PurchaseList = [];
                  $scope.PurchaseOrder.Product = '';
                  
                  $scope.Reset = Reset;

                  /////
                  $scope.pageSizeArray = [];
                  $scope.pageSizeArray.push({ value: 5, text: 5 });
                  $scope.pageSizeArray.push({ value: 10, text: 10 });
                  $scope.pageSizeArray.push({ value: 20, text: 20 });
                  $scope.pageSizeArray.push({ value: 50, text: 50 });
                  $scope.currentPage = 1;
                  $scope.pageno = 1;
                  $scope.pagesize = 10;
                  $scope.total_count = 12;
              };
               function Reset() {
                  $scope.Purchase = {};
                  $scope.PurchaseOrder = {};
                  $scope.PurchaseList = [];
                  $scope.Product = null;
              };
            
              $scope.save = function () {
                  if (Validation()) {
                      if ($scope.PurchaseList.length == 0) {
                          toastr["warning"]('Please Choose Product.');
                          return;
                      } else {
                          $scope.PurchaseOrder.OrderDetails = $scope.PurchaseList;
                          angular.forEach($scope.PurchaseList, function (item) {
                              if (item.ReceiveQuantity > item.PurchaseOrderQuantity) {
                                  toastr["warning"]('Receive Quantity Invalid.');
                                  return;
                              } else {
                                  $http({
                                      method: 'POST',
                                      url: baseUrl + 'Inventory/ReceivePurchaseOrder',
                                      data: $scope.PurchaseOrder
                                  }).then(function successCallback(response) {
                                      Reset();
                                      toastr["info"](response.data.message);
                                      $('#addmodal').modal('toggle');
                                  }, function errorCallback(response) {
                                      toastr["warning"](response.data.Message);
                                  });
                              }
                          });
                      }
                  }
              }
              $scope.Search = function (val) {
                  if (val.length >= 3)
                      return $http.get(baseUrl + 'Inventory/SearchPurchaseOrder/' + val, {
                          params: {}
                      }).then(function (response) {
                          return response.data.results.map(function (item) {
                              return item;
                          });
                      });
              };
              $scope.Check = function (ReceiveQuantity, PurchaseOrderQuantity) {
                  if (ReceiveQuantity > PurchaseOrderQuantity) {
                      toastr["warning"]('Receive Quantity Invalid.');
                      return;
                  }
              }
              // for droupdown select list event....
              $scope.onSelect = function onSelect($item, $model, $label) {
                  $scope.PurchaseOrder.PoId = Number($item.Value);
                  $scope.Product = $item.Text;
                  $http({
                      method: 'GET',
                      url: baseUrl + '/Inventory/GetPurchaseOrderListById/' + $scope.PurchaseOrder.PoId

                  }).then(function successCallback(response) {
                      $scope.Purchase = response.data.results[0];
                      $scope.PurchaseList = response.data.results;
          
                  }, function errorCallback(response) {
                      toastr["warning"](response.data.Message);
                  });

              };
              function Validation() {
                  if ($scope.addform.$invalid) {
                      return false;
                  }
                  if ($scope.addform.$valid) {
                      return true;
                  }
              }
              //This method is calling from dropDown
              $scope.changePageSize = function () {
                  $scope.studentSearch.pageIndex = 1;
                  Search();
              };

          }]);
    </script>
}

