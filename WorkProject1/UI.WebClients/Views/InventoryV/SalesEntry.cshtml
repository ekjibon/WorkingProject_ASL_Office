
@{
    ViewBag.Title = "Sales Entry";
}
<div class="kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid" ng-controller="sellsEntryCrlt">
    <div class="row">
        <div class="kt-portlet kt-portlet--mobile">
            <div class="kt-portlet__head kt-portlet__head--lg">
                <div class="kt-portlet__head-label">
                    <h3 class="kt-portlet__head-title">
                        <!----Titel Text-->
                        @ViewBag.Title
                        <!----Titel Text -->
                    </h3>
                </div>
            </div>

            <div class="kt-portlet__body">
                <form name="addform" novalidate class="form-horizontal">
                    <div class="form-body">
                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group row" ng-class="{ 'has-error' : submitted && addform.CustomerName.$invalid}">
                                    <label class="col-md-4 control-label">
                                        Customer :
                                        <span class="required">*</span>
                                    </label>
                                    <div class="col-md-8">
                                        <input class="form-control" type="text" ng-model="Sales.CustomerName" placeholder="Customer Name" name="CustomerName" required />
                                        <div class="form-control-focus"> </div>
                                        <span ng-show="submitted && addform.CustomerName.$error.required" class="help-block">Customer Name  Required</span>
                                    </div>
                                </div>
                                <div class="form-group row" ng-class="{ 'has-error' : submitted && addform.MobileNo.$invalid}">
                                    <label class="col-md-4 control-label">
                                        Mobile No:
                                        @*<span class="required">*</span>*@
                                    </label>
                                    <div class="col-md-8">
                                        <input class="form-control" type="text" ng-model="Sales.MobileNo" placeholder="Mobile No" ng-pattern="mobile_no" maxlength="14" onkeypress='return event.charCode >= 48 && event.charCode <= 57' name="MobileNo" />
                                        <div class="form-control-focus"> </div>
                                        <span ng-show="submitted && addform.MobileNo.$error.required" class="help-block">Mobile No Required</span>
                                    </div>
                                </div>

                            </div>
                            @*<div class="col-md-4">

                    </div>*@
                            <div class="col-md-8">
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group row">
                                            <label class="col-lg-4 control-label ">Product:</label>
                                            <div class="col-lg-8">
                                                <input type="text" ng-model="Product" typeahead-on-select='onSelect($item, $model, $label)' placeholder="Search Product By Name Or Code"
                                                       uib-typeahead="i  as i.Text for i in Search($viewValue)" typeahead-loading="loadingLocations" typeahead-no-results="noResults" class="form-control">
                                                <i ng-show="loadingLocations" class="glyphicon glyphicon-refresh"></i>
                                                <div ng-show="noResults"><i class="glyphicon glyphicon-remove"></i> No Results Found</div>
                                                <input type="hidden" name="ProductId" ng-model="ProductId" ng-value="Product.Value" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group row" ng-class="{ 'has-error' : submitted && addform.UnitPrice.$invalid}">
                                            <label class="col-md-7 control-label">
                                                Available Stock:
                                                @*<span class="required">*</span>*@
                                            </label>
                                            <div class="col-md-5">
                                                <label ng-show="StockQuantity<0" class="form-control label-danger">{{StockQuantity}} {{Unit}}</label>
                                                <label ng-show="StockQuantity>0" class="form-control label-success">{{StockQuantity}} {{Unit}}</label>
                                                <div class="form-control-focus"> </div>
                                                <span ng-show="submitted && addform.UnitPrice.$error.required" class="help-block">Quantity Required</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group row" ng-class="{ 'has-error' : submitted && addform.UnitPrice.$invalid}">
                                            <label class="col-md-4 control-label">
                                                Quantity:
                                                @*<span class="required">*</span>*@
                                            </label>
                                            <div class="col-md-8">
                                                <input type="text" ng-disabled="Product==null||StockQuantity<0 || StockQuantity==0" onkeypress='return event.charCode >= 48 && event.charCode <= 57' ng-model="Sale.Quantity" class="form-control" placeholder="Quantity" name="Quantity">
                                                <div class="form-control-focus"> </div>
                                                <span ng-show="submitted && addform.UnitPrice.$error.required" class="help-block">Quantity Required</span>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="col-md-1">
                                        <div class="form-group row">
                                            <div class="col-md-8">
                                                <button class="btn btn-success" ng-disabled="Sale.Quantity==null || StockQuantity<0 || StockQuantity==0" ng-click="addProduct()">Add</button>
                                            </div>
                                            <div class="col-md-4"></div>
                                        </div>
                                    </div>
                                </div>
                                <table class="table table-bordered table-hover rounded">
                                    <thead class="btn-primary">
                                        <tr>
                                            <th>Product Name</th>
                                            <th>Quantity</th>
                                            <th>Unit</th>
                                            <th>Sell price</th>
                                            <th>Total Price</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr><td colspan="6" style="text-align:center" ng-hide="SalesList.length > 0">No Data Found</td></tr>
                                        <tr ng-show="SalesList.length > 0" ng-repeat="item in SalesList">
                                            <td>{{item.ProductName}}</td>
                                            <td>{{item.Quantity}}</td>
                                            <td>{{item.UnitCode}}</td>
                                            <td>{{item.SellingPrice}}</td>
                                            <td>{{item.SubTotal}}</td>
                                            <td><a class="btn btn-danger" ng-click="deleteProduct($index)"> <i class="fa fa-times" aria-hidden="true"></i> </a></td>
                                        </tr>
                                        <tr ng-show="SalesList.length > 0">
                                            <td colspan="4"> <b>Total</b></td>
                                            <td>
                                                {{TotalAmount}}
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                                <div class="row">
                                    <div class="col-md-5">

                                    </div>
                                    <div class="col-md-7">
                                        <div class="form-group row">
                                            <label class="col-md-4 control-label">
                                                <input type="checkbox" ng-model="IsCheckedVat" ng-click="CalculateVatAmount()"> Vat (7.5%)
                                                <span class="required">*</span>
                                            </label>
                                            <div class="col-md-8">
                                                <label class="form-control">{{VatAmount}}</label>
                                                <div class="form-control-focus"> </div>
                                            </div>
                                        </div>
                                        <div class="form-group row" ng-class="{ 'has-error' : submitted && addform.NetPayable.$invalid}">
                                            <label class="col-md-4 control-label">
                                                Grand Total
                                                <span class="required">*</span>
                                            </label>
                                            <div class="col-md-8">
                                                <label class="form-control">{{Sales.NetPayable}}</label>
                                                <div class="form-control-focus"> </div>
                                            </div>
                                        </div>
                                        <div class="form-group row pull-right">
                                            <div class="col-md-12">
                                                <button class="btn btn-success" ng-click="save();submitted=true">Save</button>
                                                <button class="btn btn-danger" ng-click="Reset();submitted=false">Reset</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script type="text/javascript">
        OEMSApp.controller("sellsEntryCrlt", ["$scope", "$http", "SweetAlert", "filterFilter", "$filter",
          function ($scope, $http, SweetAlert, filterFilter, $filter) {
              init();
              function init() {
                  initialize();
                 
              }
              function initialize() {
                  $scope.Sale = {};
                  $scope.Sales = {};
                  $scope.Suppliers = [];
                  $scope.currentPage = 1;
                  $scope.pageno = 1;
                  $scope.pagesize = 10;
                  $scope.total_count = 12;
                  $scope.txtsearch = '';
                  $scope.ProductId = 0;
                  $scope.SalesList = [];
                  $scope.Sale.Product = '';
                  $scope.TotalAmount = 0;
                  $scope.StockQuantity = 0;
                  $scope.Reset = Reset;
                  $scope.IsCheckedVat = false;
                  $scope.CalculateVatAmount = CalculateVatAmount;
                  /////
                  $scope.pageSizeArray = [];
                  $scope.pageSizeArray.push({ value: 5, text: 5 });
                  $scope.pageSizeArray.push({ value: 10, text: 10 });
                  $scope.pageSizeArray.push({ value: 20, text: 20 });
                  $scope.pageSizeArray.push({ value: 50, text: 50 });
                  $scope.currentPage = 1;
                  $scope.pageSize = 10;
              };

              function Reset() {
                  $scope.Sale = {};
                  $scope.Sales = {};
                  $scope.SalesList = [];
                  $scope.TotalAmount = 0;
                  $scope.StockQuantity = 0;
                  $scope.VatAmount = 0;
              };
              //Active Inactive student

              $scope.addProduct = function () {
                  if ($scope.Sale.Quantity > $scope.StockQuantity) {
                      toastr["warning"]('Stock Quantty does not Available.');
                      return;
                  }
                  if ($scope.SalesList.length>0) {
                      angular.forEach($scope.SalesList, function (item) {
                          if (item.ProductId == $scope.Sale.ProductId) {
                              toastr["warning"]('Product Already Exist.');
                              return;
                          } else {
                              $scope.SalesList.push({
                                  'ProductName': $scope.Product,
                                  'UnitCode': $scope.Unit,
                                  'Quantity': $scope.Sale.Quantity,
                                  'ProductId': $scope.Sale.ProductId,
                                  'UnitPrice': $scope.SellingPrice,
                                  'Discount': $scope.Sale.Discount,
                                  'SellingPrice': $scope.SellingPrice,
                                  'SubTotal': $scope.SellingPrice * $scope.Sale.Quantity,
                                  'done': false
                              });

                              console.log($scope.SalesList);
                          }

                      });
                  } else {
                      $scope.SalesList.push({
                          'ProductName': $scope.Product,
                          'UnitCode': $scope.Unit,
                          'Quantity': $scope.Sale.Quantity,
                          'ProductId': $scope.Sale.ProductId,
                          'UnitPrice': $scope.SellingPrice,
                          'Discount': $scope.Sale.Discount,
                          'SellingPrice': $scope.SellingPrice,
                          'SubTotal': $scope.SellingPrice * $scope.Sale.Quantity,
                          'done': false
                      });
                      console.log($scope.SalesList);

                  }
           
                  $scope.Product = null;
                  $scope.Sale.Quantity = null;
                  //$scope.Sale.UnitPrice = '';
                  $scope.Sale.Discount = '';
                  $scope.Sale.ProductId = 0;
                  $scope.StockQuantity = 0;
                  CalculateTotalAmount();
              }

              $scope.deleteProduct = function (index) {
                  $scope.SalesList.splice(index, 1);
                  CalculateTotalAmount();
              }
              $scope.Search = function (val) {
                  if (val.length >= 3)
                      return $http.get(baseUrl + 'Inventory/SearchSellingProduct/' + val, {
                          params: {}
                      }).then(function (response) {
                          return response.data.results.map(function (item) {
                              return item;
                          });
                      });
              };
              $scope.onSelect = function onSelect($item, $model, $label) {
                  $scope.Sale.ProductId = Number($item.Value);
                  $scope.Product = $item.Text;
                  $http({
                      method: 'GET',
                      url: baseUrl + '/Inventory/GetProductListById/' + $scope.Sale.ProductId

                  }).then(function successCallback(response) {
                      $scope.Unit = response.data.results[0].UnitCode;
                      $scope.SellingPrice = response.data.results[0].SellingPrice;
                      $scope.StockQuantity = response.data.results[0].StockQuantity;
                      //console.log(response.data.results);
                  }, function errorCallback(response) {
                      toastr["warning"](response.data.Message);
                  });

              };
              $scope.save = function () {
                  if ($scope.addform.$invalid) {
                      return;
                  }
                  if ($scope.SalesList.length == 0) {
                      toastr["warning"]('Please Choose Product.');
                      return;
                  }
                  if ($scope.addform.$invalid) {
                      return;
                  }
                  console.log($scope.SalesList);
                  $scope.Sales.SalesDetails = $scope.SalesList;
                  $http({
                      method: 'POST',
                      url: baseUrl + '/Inventory/SalesAdd/',
                      data: $scope.Sales
                  }).then(function successcallback(response) {
                      $scope.submitted = false;
                      toastr["info"](response.data.message);
                      Reset();
                  }, function errorcallback(response) {
                      toastr["warning"](response.data.message);
                  });
                  
              }


              function CalculateTotalAmount() {
                  $scope.TotalAmount = 0;
                  angular.forEach($scope.SalesList, function (item) {
                      if (item.SubTotal > 0) {
                          $scope.TotalAmount = $scope.TotalAmount + item.SubTotal;
                      }
                  });
                  CalculateVatAmount();
              }

              function CalculateVatAmount() {
                  $scope.VatAmount = 0;
                  if ($scope.IsCheckedVat) {
                      $scope.Sales.Vat = 7.5;
                      $scope.Sales.NetPayable = 0;
                      $scope.Sales.SubTotal = $scope.TotalAmount;
                      $scope.VatAmount = Math.ceil(($scope.TotalAmount * $scope.Sales.Vat) / 100);
                      $scope.Sales.NetPayable = Math.ceil($scope.TotalAmount + $scope.VatAmount);
                  } else {
                      $scope.Sales.Vat = 0;
                      $scope.Sales.NetPayable = 0;
                      $scope.Sales.SubTotal = $scope.TotalAmount;
                      $scope.Sales.NetPayable = Math.ceil($scope.TotalAmount);
                  }
                  
              }
              // for droupdown select list event....
      
              //This method is calling from dropDown
              $scope.changePageSize = function () {
                  $scope.studentSearch.pageIndex = 1;
                  Search();
              };

          }]);
    </script>
}


