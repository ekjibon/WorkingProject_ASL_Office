
@{
    ViewBag.Title = "PhoneCallMaintain";
}


<div class="kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid" ng-controller="ctrlSalaryHead">
    <div class="row">
        <div class="kt-portlet kt-portlet--mobile">
            <div class="kt-portlet__head kt-portlet__head--lg">
                <div class="kt-portlet__head-label">
                    <h3 class="kt-portlet__head-title">
                        Phone Call Maintain
                    </h3>
                </div>
                <div class="kt-portlet__head-toolbar">
                    <div class="kt-portlet__head-wrapper">
                        <div class="dropdown dropdown-inline">
                            <button type="button" class="btn btn-brand btn-icon-sm" data-toggle="modal" data-target="#addmodal" aria-haspopup="true" aria-expanded="false">
                                <i class="flaticon2-plus"></i> Add New Phone Call
                            </button>

                        </div>
                    </div>
                </div>
            </div>

            <div class="kt-portlet__body">


                <div class="row">
                    <div class="col-md-4 col-sm-5 col-xs-6">
                        <div class="form-group">
                            <div class="col-lg-3 col-md-5 col-sm-4 col-xs-8" style="padding-left:0px">

                                <select class="form-control kt-font-brand" ng-model="pageSize" ng-options="P.value as P.text for P in pageSizeArray"></select>
                            </div>

                        </div>

                    </div>
                    <div class="col-md-4 col-sm-3 col-xs-1">
                    </div>
                    <div class="col-md-4 col-sm-4 col-xs-5">
                        <div id="sample_3_filter" class="pull-right">
                            <input ng-model="q" id="search" class="form-control" placeholder="Filter text">
                        </div>
                    </div>
                </div>
                <table class="table table-bordered table-hover rounded">
                    <thead>
                        <tr class="btn-primary">
                            <th>SL</th>
                            <th>Client Name</th>
                            <th>Date</th>
                            <th>Contact Person</th>
                            <th>Contact No.</th>
                            <th>Propably Payment Date</th>
                            <th>Coments</th>
                            <th style="text-align:center">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr ng-show="phoneCallList.length <= 0"><td colspan="8" style="text-align:center;"><i class="fa fa-refresh"></i> Loading new data!!</td></tr>
                        <tr dir-paginate="item in phoneCallList| filter:q  | itemsPerPage: pageSize" current-page="currentPage">
                            <td>{{$index+1}}</td>
                            <td>{{item.FullName}}</td>
                            <td>{{item.CallDate |  date : "dd-MM-yyyy"}}</td>
                            <td>{{item.ContactPerson}}</td>
                            <td>{{item.ContactNo}}</td>
                            <td>{{item.ProbablePaymentDate |  date : "dd-MM-yyyy"}}</td>
                            <td>{{item.Comments}}</td>
                            <td align="center" >
                                <a href="javascript:;" class="btn btn-outline-brand btn-elevate btn-icon" ng-click="editBillingHead(item)" data-target="#addmodal" data-toggle="modal">
                                    <i class="fa fa-edit"></i>
                                </a>
                                <a ng-click="deletPhoneCall(item.Id)" href="javascript:;" class="btn btn-outline-danger btn-elevate btn-icon">
                                    <i class="fa fa-trash"></i>
                                </a>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <div class="row">
                    <dir-pagination-controls boundary-links="true" template-url="~/assets/angular/lib/dirPagination.tpl.html"></dir-pagination-controls>
                </div>
            </div>
        </div>
    </div>

    <!--Modal Area Start-->
    <div id="addmodal" class="modal fade" tabindex="-1" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-lg">
            <div class="modal-content ">
                <form name="addBasic" ng-submit="save()" class="form-horizontal" id="form_sample_1" novalidate>
                    <div class="modal-header">
                        <h4 class="modal-title">{{modalTitle}}</h4>
                        <button type="button" class="close" data-dismiss="modal" ng-click="resetForm();submitted=false" aria-hidden="true"></button>
                    </div>
                    <div class="modal-body">
                        <div class="form-body">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group row" ng-class="{ 'has-error' : submitted && addBasic.ClientId.$invalid}">
                                        <label class="col-md-6 control-label" style="text-align:right">
                                            Client :
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-6">
                                            <select class="form-control" ng-model="phoneCallObj.ClientId" ng-disabled="btnDisable" required name="ClientId" ng-options="aClient.Id as aClient.FullName for aClient in clientList">
                                                <option value="" selected="selected">Choose Option</option>
                                            </select>
                                            <div class="form-control-focus"> </div>
                                            <span ng-show="submitted && addBasic.ClientId.$error.required" class="help-block">Client Required</span>
                                        </div>
                                    </div>
                                </div>
                                 
                                <div class="col-md-6">
                                    <div class="form-group row" ng-class="{ 'has-error' : submitted && addBasic.CallDate.$invalid}">
                                        <label class="col-md-6 control-label" style="text-align:right">
                                            Date:
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-6">
                                            <input class="form-control" name="CallDate" type="datetime" placeholder="Date" readonly ng-click="p1=true" is-open="p1" uib-datepicker-popup="dd/MM/yyyy" ng-model="phoneCallObj.CallDate" required/>
                                            <div class="form-control-focus"> </div>
                                            <span ng-show="submitted && addBasic.CallDate.$error.required" class="help-block">Date Required</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group row" ng-class="{ 'has-error' : submitted && addBasic.ContactPerson.$invalid}">
                                        <label class="col-md-6 control-label" style="text-align:right">
                                            Person Name :
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-6">
                                            <input type="text" ng-model="phoneCallObj.ContactPerson" class="form-control" placeholder="Person Name" name="ContactPerson" required>
                                            <div class="form-control-focus"> </div>
                                            <span ng-show="submitted &&  addBasic.ContactPerson.$error.required" class="help-block">Contact Person Required</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group row" ng-class="{ 'has-error' : submitted && addBasic.ContactNo.$invalid}">
                                        <label class="col-md-6 control-label" style="text-align:right">
                                            Contact No. :
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-6">
                                            <input type="text" ng-model="phoneCallObj.ContactNo" maxlength="15" onkeypress='return (event.charCode >= 48 && event.charCode <= 57) || event.charCode == 0 || event.charCode == 46'  class="form-control" placeholder="Contact No." name="ContactNo" required>
                                            <div class="form-control-focus"> </div>
                                            <span ng-show="submitted &&  addBasic.ContactNo.$error.required" class="help-block">Contact No Required</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group row" ng-class="{ 'has-error' : submitted && addBasic.ProbablePaymentDate.$invalid}">
                                        <label class="col-md-6 control-label" style="text-align:right">
                                            Probable Payment Date :
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-6">
                                            <input class="form-control" name="ProbablePaymentDate" type="datetime" placeholder="Probable Payment Date" readonly ng-click="p2=true" is-open="p2" uib-datepicker-popup="dd/MM/yyyy" ng-model="phoneCallObj.ProbablePaymentDate" required />
                                            <div class="form-control-focus"> </div>
                                            <span ng-show="submitted && addBasic.ProbablePaymentDate.$error.required" class="help-block">Probable Payment Date Required</span>
                                        </div>
                                    </div>
                                </div>
                                
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group row" ng-class="{ 'has-error' : submitted && addBasic.Comments.$invalid}">
                                        <label class="col-md-3 control-label" style="text-align:right">
                                            Comments :
                                            <span class="required"></span>
                                            
                                        </label>
                                        <div class="col-md-9">
                                            <textarea ng-model="phoneCallObj.Comments" class="form-control" placeholder="Comments" name="Comments"></textarea>
                                            <div class="form-control-focus"> </div>
                                            <span ng-show="submitted &&  addBasic.Comments.$error.required" class="help-block">Head Name Required</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" data-dismiss="modal" class="btn btn-secondary" ng-click="resetForm();submitted=false">Cancel</button>
                        <button type="submit" ng-click="submitted=true" class="btn btn-success">{{modalbutton}}</button>
                    </div>
                </form>
            </div>
        </div>
    </div> 
    <!--Modal Area End-->
</div>
<!-- END FORM-->
@section Scripts{
    <script src="~/assets/global/plugins/bootstrap-fileinput/bootstrap-fileinput.js" type="text/javascript"></script>
    <script src="~/assets/pages/scripts/form-repeater.min.js"></script>
    <script type="text/javascript">
        for (i = new Date().getFullYear() ; i > 1900; i--) {
            $('#yearpicker').append($('<option />').val(i).html(i));
        }
    </script>
    <script type="text/javascript">
        OEMSApp.controller("ctrlSalaryHead", ["$scope", "$http", "SweetAlert", "$filter",
              function ($scope, $http, SweetAlert, $filter) {
                  init();
                  function init() {
                      initialize();
                      getAllClient();
                      GetAllPhoneCall();

                  }

                  function initialize() {
                      $scope.modalbutton = 'Save';
                      $scope.modalTitle = 'Phone Call';
                      $scope.brnlist = [];
                      $scope.phoneCallObj = {};
                      $scope.phoneCallList = [];
                      $scope.resetForm = resetForm;

                      $scope.pagesize = 10;
                      $scope.pageSizeArray = [];
                      $scope.pageSizeArray.push({ value: 5, text: 5 });
                      $scope.pageSizeArray.push({ value: 10, text: 10 });
                      $scope.pageSizeArray.push({ value: 20, text: 20 });
                      $scope.pageSizeArray.push({ value: 50, text: 50 });
                      $scope.currentPage = 1;
                      $scope.pageSize = 10;
                      $scope.phoneCallObj.Id = 0;
                      $scope.phoneCallObj.Status = 'A';
                      $scope.btnDisable = false;


                  }
                  function getAllClient() {
                      $scope.clientList = [];
                      $http({
                          method: 'GET',
                          url: baseUrl + 'Client/GetAllActiveClient/'
                      }).then(function successCallback(response) {
                          $scope.clientList = response.data.results;
                      }, function errorCallback(response) {
                          toastr["info"](response.data.Message);
                      });
                  }
                  
                  $scope.changeStatus = function changeStatus(item) {
                      $scope.phoneCallObj.Id = item.Id;
                      $scope.phoneCallObj.Status = item.Status;

                      SweetAlert.swal({
                          title: "Are you sure you want to change Activity Status ?", type: "warning", showCancelButton: true, confirmButtonColor: "#DD6B55",
                          confirmButtonText: "Yes, change it!",
                          closeOnConfirm: true
                      },
                        function (isConfirm) {
                            if (isConfirm) {
                                $http({
                                    method: 'PUT',
                                    url: baseUrl + 'Invoice/ChangeStatus/',
                                    data: $scope.phoneCallObj
                                }).then(function successCallback(response) {
                                    toastr["info"](response.data.message);
                                    if (response.data.httpStatusCode != 305) {
                                        GetAllPhoneCall();
                                        resetForm();
                                    }

                                }, function errorCallback(response) {
                                    toastr["warning"](response.data.Message);
                                });
                            }
                        });
                  }

                  function GetAllPhoneCall() {
                      $scope.phoneCallList = [];
                      $http({
                          method: 'GET',
                          url: baseUrl + 'Invoice/GetAllPhoneCall'
                      }).then(function successCallback(response) {
                          $scope.phoneCallList = response.data.results;
                      }, function errorCallback(response) {
                          toastr["info"](response.data.Message);
                      });
                  }

                  $scope.deletPhoneCall = function deletPhoneCall(id) {
                      SweetAlert.swal({
                          title: "Are you sure to delete it ?", type: "warning", showCancelButton: true, confirmButtonColor: "#DD6B55",
                          confirmButtonText: "Yes, delete it!",
                          closeOnConfirm: false
                      },
                        function (isConfirm) {
                            if (isConfirm) {
                                $http({
                                    method: 'DELETE',
                                    url: baseUrl + 'Invoice/DeletPhoneCall/' + id,

                                }).then(function successCallback(response) {
                                    SweetAlert.swal("Deleted!", "Your data has been deleted.", "success");
                                    GetAllPhoneCall();
                                }, function errorCallback(response) {
                                    toastr["error"](response.data.Message);
                                });
                            }
                        });
                  }

                  $scope.editBillingHead = function editBillingHead(item) {
                      $scope.modalTitle = "Update Phone Call";
                      $scope.modalbutton = 'Update';
                      $scope.phoneCallObj.Id = item.Id;
                      $scope.phoneCallObj = item;
                      //$scope.EMP = item.ClientId;
                      $scope.phoneCallObj.CallDate = new Date(item.CallDate), 'dd-MM-yyyy';
                      $scope.phoneCallObj.ProbablePaymentDate = new Date(item.ProbablePaymentDate), 'dd-MM-yyyy';
                      $scope.btnDisable = true;
                  }

                  $scope.save = function save() {
                      $scope.phoneCallObj.CallDate = $filter('date')($scope.phoneCallObj.CallDate, "MM/dd/yyyy");
                      $scope.phoneCallObj.ProbablePaymentDate = $filter('date')($scope.phoneCallObj.ProbablePaymentDate, "MM/dd/yyyy");
                      
                      if ($scope.addBasic.$invalid)
                          return;
                      else {
                            if ($scope.phoneCallObj.Id != 0) /// For Update
                            {
                                if ($scope.phoneCallObj != '') {
                                    $http({
                                        method: 'PUT',
                                        url: baseUrl + 'Invoice/UpdatePhoneCall',
                                        data: $scope.phoneCallObj
                                    }).then(function successCallback(response) {
                                        $('#addmodal').modal('toggle');
                                        toastr["info"](response.data.message);
                                        GetAllPhoneCall();
                                        resetForm();
                                    }, function errorCallback(response) {
                                        toastr["warning"](response.data.Message);
                                    });
                                }
                            }
                            else {  //  For Add
                            
                                $http({
                                    method: 'POST',
                                    url: baseUrl + 'Invoice/AddPhoneCall',
                                    data: $scope.phoneCallObj
                                }).then(function successCallback(response) {
                                    $('#addmodal').modal('toggle');
                                    toastr["info"](response.data.message);
                                    GetAllPhoneCall();
                                    resetForm();
                                }, function errorCallback(response) {
                                    toastr["warning"](response.data.Message);
                                });

                            }
                          }
                    }

                  function resetForm() {
                      $scope.modalTitle = "Add Phone Call";
                      $scope.phoneCallObj = {};
                      $scope.EMP = "";
                      $scope.phoneCallObj.Id = 0;
                      $scope.Id = '';
                      $scope.addBasic.$setUntouched();
                      $scope.addBasic.$setPristine();
                      $scope.modalbutton = 'Save';
                      $scope.submitted = false;
                      $scope.btnDisable = false;
                  }
                  
              }]);
    </script>
}




