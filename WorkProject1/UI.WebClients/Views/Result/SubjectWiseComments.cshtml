
@{
    ViewBag.Title = "Subject Wise Comments";
}

<div class="portlet box blue-hoki" ng-controller="SWC">
    <div class="portlet-title">
        <div class="caption">
            <i class="fa fa-user-plus"></i>@ViewBag.Title
        </div>
    </div>
    <div class="portlet-body form">
        <form novalidate name="mform" class="form-horizontal" id="form_sample_1">
            <div class="form-body">
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group" ng-class="{ 'has-error' : submitted && mform.Branch.$invalid}">
                            <label class="col-md-5 control-label">
                                Branch :
                                <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                <select class="form-control" ng-model="FilterSubWise.BranchID" required name="Branch" ng-options="GenerateResult.BranchId as GenerateResult.BranchName for GenerateResult in CommonFeilds.Branch">
                                    <option value="" selected="selected">Choose Option</option>
                                </select>
                                <div class="form-control-focus"> </div>
                                <span ng-show="submitted && mform.Branch.$error.required" class="help-block">Branch Name Required</span>
                            </div>
                        </div>
                        <div class="form-group" ng-class="{ 'has-error' : submitted && mform.Session.$invalid}">
                            <label class="col-md-5 control-label">
                                Session:
                                <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                <select class="form-control" ng-model="FilterSubWise.SessionId" name="Session" ng-options="studentInfo.SessionId as studentInfo.SessionName for studentInfo in CommonFeilds.Session" required>
                                    <option value="" selected="selected">Choose Option</option>
                                </select>
                                <div class="form-control-focus"> </div>
                                <span ng-show="submitted && mform.Session.$error.required" class="help-block">Session Required</span>
                            </div>
                        </div>
                        <div class="form-group" ng-class="{ 'has-error' : submitted && mform.class.$invalid}">
                            <label class="col-md-5 control-label">
                                Class
                                <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                <select class="form-control" ng-model="FilterSubWise.ClassId" name="class" required ng-options="class.ClassId as class.ClassName for class in CommonFeilds.ClassInfo">
                                    <option value="" selected="selected">Choose Option</option>
                                </select>
                                <div class="form-control-focus"> </div>
                                <span ng-show="submitted && mform.class.$error.required" class="help-block">Class Name Required</span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group" ng-class="{ 'has-error' : submitted && mform.Shift.$invalid}">
                            <label class="col-md-5 control-label">
                                Shift :
                                <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                <select class="form-control" ng-model="FilterSubWise.ShiftID" ng-disabled="FilterSubWise.BranchID==null" ng-change="GetSection()" required name="Shift" ng-options="GenerateResult.ShiftId as GenerateResult.ShiftName for GenerateResult in CommonFeilds.Shift | filter:{BranchId:FilterSubWise.BranchID}:true">
                                    <option value="" selected="selected">Choose Option</option>
                                </select>
                                <div class="form-control-focus"> </div>
                                <span ng-show="submitted && mform.Shift.$error.required" class="help-block">Shift Name Required</span>
                            </div>
                        </div>
                        <div class="form-group" ng-class="{ 'has-error' : submitted && mform.Term.$invalid}">
                            <label class="col-md-5 control-label">
                                Term :
                                <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                <select class="form-control" ng-model="FilterSubWise.TermId" ng-disabled="FilterSubWise.ClassId==null" name="Term" ng-options="T.TermId as T.Name for T in Terms |filter:{ClassId:FilterSubWise.ClassId}:true" required>
                                    <option value="" selected="selected">Choose Option</option>
                                </select>
                                <div class="form-control-focus"> </div>
                                <span ng-show="submitted && mform.Term.$error.required" class="help-block">Term Required</span>
                            </div>
                        </div>
                        <div class="form-group" ng-class="{ 'has-error' : submitted && mform.MainExam.$invalid}">
                            <label class="col-md-5 control-label">
                                Main Exam :
                                <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                <select class="form-control" ng-disabled="FilterSubWise.TermId==null" ng-change="getSubject()" ng-model="FilterSubWise.MainExamId" name="MainExam" ng-options="T.MainExamId as T.MainExamName for T in MainExams |filter:{TermId:FilterSubWise.TermId}:true" required>
                                    <option value="" selected="selected">Choose Option</option>
                                </select>
                                <div class="form-control-focus"> </div>
                                <span ng-show="submitted && mform.MainExam.$error.required" class="help-block">Main Exam Required</span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group" ng-class="{ 'has-error' : submitted && mform.Section.$invalid}">
                            <label class="col-md-5 control-label">
                                Section :
                                <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                <select class="form-control" ng-model="FilterSubWise.SectionId" required name="Section" ng-options="S.SectionId as S.SectionName for S in Sections">
                                    <option value="" selected="selected">Choose Option</option>
                                </select>
                                <div class="form-control-focus"> </div>
                                <span ng-show="submitted && mform.Section.$error.required" class="help-block">Section Name Required</span>
                            </div>
                        </div>
                        <div class="form-group" ng-class="{ 'has-error' : submitted && mform.Subject.$invalid}">
                            <label class="col-md-5 control-label">
                                Subject :
                                <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                <select class="form-control" ng-disabled="FilterSubWise.ClassId==null" ng-model="FilterSubWise.SubjectId" name="Subject" ng-options="S.SubID as S.SubjectName for S in SubjectSetups.results |filter:{ClassId:FilterSubWise.ClassId}:true" required>
                                    <option value="" selected="selected">Choose Option</option>
                                </select>
                                <div class="form-control-focus"> </div>
                                <span ng-show="submitted && mform.Subject.$error.required" class="help-block">Subject Required</span>
                            </div>
                        </div>
                    </div>

                </div>
                <div class="row" style="margin-top: 1%;">
                    <div class="col-md-4">

                    </div>
                    <div class="col-md-4">


                    </div>
                    <div class="col-md-4">
                        <div class="pull-right">
                            <button type="reset" ng-click="Reset()" class="btn red">Clear</button>
                            <button ng-click="submitted=true;Search()" class="btn green">Show</button>
                        </div>
                    </div>
                </div>
            </div>

        </form>

        <!-- BEGIN FORM-->

    </div>
    <div class="panel">
        <div class="panel-body">
            <form name="userForm" novalidate>
                <table class="table table-bordered table-inverse">
                    <thead class="btn-primary">
                        <tr>
                            @*  <th><input type="checkbox" ng-model="selectedAll" ng-click="selectAll()" />  All</th>*@
                            <th>SL</th>
                            <th> ID </th>
                            <th> Name </th>
                            <th> Roll</th>
                            <th> Grade Letter</th>
                            <th> Comments</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr ng-repeat="item in StudentInfos">
                            @*<td> <input type="checkbox" ng-model="item.Selected" value="false" ng-click="checkIfAllSelected()" /> </td>*@
                            <td>{{$index + 1}}</td>
                            <td> {{item.StudentInsID}} </td>
                            <td> {{item.FullName}}</td>
                            <td> {{item.RollNo}} </td>
                            <td> {{item.SubjectGL}} </td>
                            <td>
                                <select class="form-control" ng-model="item.Comments">
                                    <option value="" selected="selected">Choose Options</option>
                                    <option value="Due to effort">Due to effort</option>
                                    <option value="Due to absenteeism">Due to absenteeism</option>
                                    <option value="Due lack of effort">Due to lack of effort</option>
                                    <option value="Due lack of effort">Due to lack of effort and absenteeism</option>
                                </select>
                            </td>
                            <td width="10%" ng-show="item.Id==null">
                                <button type="submit" ng-click="Save(item)" class="btn green">Save</button>

                            </td>
                            <td width="10%" ng-hide="item.Id==null">
                                <button type="submit" ng-click="Update(item)" class="btn blue">Update</button>

                            </td>
                        </tr>
                    </tbody>
                </table>
            </form>
        </div>
    </div>
</div>


@section Scripts{
    <script type="text/javascript">
        OEMSApp.controller("SWC", ["$scope", "$http", "SweetAlert",
          function ($scope, $http, SweetAlert) {

              init();
              function init() {
                  initialize();
                  getAllCommons();
                  getTerms(1);
                  getMainExam(1);
                  // getMainExam();
              }
              function initialize() {
                  $scope.FilterSubWise = {};

                  $scope.FilterSubWise.SessionId = 0;
                  $scope.FilterSubWise.BranchID = 0;
                  $scope.FilterSubWise.ShiftID = 0;
                  $scope.FilterSubWise.ClassId = 0;

                  $scope.FilterSubWise.SectionId = 0;
                  $scope.FilterSubWise.HouseId = 0;
                  $scope.FilterSubWise.StudentType = 0;

                  //$scope.GenerateResult = {};

                  $scope.StudentInfos = [];
                  $scope.Dropdowns = [];
                  $scope.CommonFeilds = [];
                  $scope.currentPage = 1;
                  $scope.pageno = 1;
                  $scope.pagesize = 10;
                  $scope.total_count = 12;
                  $scope.txtsearch = '';

                  $scope.getMainExam = getMainExam;
              };
              function resetForm() {
                  $scope.submitted = false;
              };

              $scope.Reset = function Reset() {
                  $scope.FilterSubWise = {};
                  $scope.submitted = false;
                  $scope.selectedAll = false;
                  $scope.StudentInfos = [];
              };
              function getTerms() {
                  $scope.Terms = [];
                  $http({
                      method: 'GET',
                      url: baseUrl + 'SetupInstitution/GetAllTerm/'
                  }).then(function successCallback(response) {
                      // this callback will be called asynchronously
                      // when the response is available
                      $scope.Terms = response.data.results;
                      $scope.total_count = response.data.totalcount;
                      //console.log(response.data);
                  }, function errorCallback(response) {
                      toastr["warning"](response.data.Message);
                  });

              }

              $scope.GetSection = function GetSection() {
                  $scope.Sections = [];
                  $http({
                      method: 'GET',
                      url: baseUrl + 'Common/GetSection/' + $scope.FilterSubWise.SessionId + "/" + $scope.FilterSubWise.ShiftID + "/" + $scope.FilterSubWise.ClassId
                  }).then(function successCallback(response) {
                      $scope.Sections = response.data.results;
                  }, function errorCallback(response) {
                      toastr["error"](response.data.message);
                  });
              }
              function getMainExam() {
                  $scope.MainExams = [];
                  $http({
                      method: 'GET',
                      url: baseUrl + 'ExamSetup/GetAllMainExam/'
                  }).then(function successCallback(response) {
                      $scope.MainExams = response.data.results;
                      //console.log($scope.mainExams);
                      // $scope.AspNetRoles = response.data;
                      $scope.total_count = response.data.totalcount;
                      //console.log(response.data);
                  }, function errorCallback(response) {
                      toastr["warning"](response.data.Message);
                  });
              }
              $scope.getSubject = function getSubject() { // Get Subject List By VSCG
                  //if ($scope.mform.$invalid)
                  //    return;
                  //blockUI.start(); // spinning Start
                  $scope.SubjectSetups = [];
                  var searchtxt = $scope.search;
                  if ($scope.search == 'undefined' || $scope.search == '') {
                      searchtxt = 'null';
                  }
                  $http({
                      method: 'GET',
                      url: baseUrl + 'SubjectSetup/GetAllSubject/' + $scope.FilterSubWise.ClassId + '/' + $scope.FilterSubWise.SessionId
                  }).then(function successCallback(response) {
                      $scope.SubjectSetups = response.data;
                      $scope.total_count = response.data.totalcount;
                      if ($scope.pagesize == -1)
                          $scope.pagesize = 500;
                      //blockUI.stop();  // spinning Finished
                  }, function errorCallback(response) {
                      toastr["info"](response.data.message);
                      blockUI.stop();
                  });
              }
              $scope.selectAll = function () {
                  angular.forEach($scope.StudentInfos, function (item) {
                      item.Selected = $scope.selectedAll;
                  });

              };
              $scope.GetSelects = function GetSelects() {
                  var res = '';
                  angular.forEach($scope.StudentInfos, function (item) {
                      if (item.Selected) {
                          res = res + ',' + item.StudentIID
                      }
                  });

                  return res.trim()

              };


              $scope.checkIfAllSelected = function () {
                  $scope.selectedAll = $scope.StudentInfos.every(function (item) {
                      return item.Selected == true
                  })
              };
              $scope.Search = function Search() {
                  if ($scope.mform.$invalid)
                      return;

                  $scope.StudentInfos = [];
                  $http({
                      method: 'POST',
                      url: baseUrl + 'Result/GetSubjectWiseComments/' + $scope.FilterSubWise.BranchID + '/' + $scope.FilterSubWise.SessionId + '/' + $scope.FilterSubWise.ShiftID + '/' + $scope.FilterSubWise.ClassId + '/' + $scope.FilterSubWise.SectionId + '/' + $scope.FilterSubWise.TermId + '/' + $scope.FilterSubWise.MainExamId + '/' + $scope.FilterSubWise.SubjectId

                  }).then(function successCallback(response) {
                      $scope.StudentInfos = response.data.results;

                      $scope.selectedAll = true;
                      angular.forEach($scope.StudentInfos, function (item) {
                          item.Selected = $scope.selectedAll;
                      });

                      toastr["success"](response.data.message);
                  }, function errorCallback(response) {
                      toastr["error"](response.data.message);
                  });

              };
              function GetSubWiseComments(n) {
                  $http({
                      method: 'POST',
                      url: baseUrl + 'Result/GetSubjectWiseComments/' + $scope.FilterSubWise.BranchID + '/' + $scope.FilterSubWise.SessionId + '/' + $scope.FilterSubWise.ShiftID + '/' + $scope.FilterSubWise.ClassId + '/' + $scope.FilterSubWise.SectionId + '/' + $scope.FilterSubWise.TermId + '/' + $scope.FilterSubWise.MainExamId + '/' + $scope.FilterSubWise.SubjectId

                  }).then(function successCallback(response) {
                      $scope.StudentInfos = response.data.results;
                      //angular.forEach( n, function (item) {
                      //    angular.forEach($scope.SubjectWiseComments, function (item2) {
                      //        if (item2.StudentId == item.StudentIID) {
                      //            item.Comments = item2.Comments;
                      //            //console.log(item);
                      //            //console.log(item2);
                      //        } else {
                      //            item.Comments = 'No Comment';
                      //        }
                      //        //$scope.StudentInfos = n;
                      //        //console.log(item2);
                      //    });
                      //  });
                      console.log($scope.StudentInfos);

                  }, function errorCallback() { });
              }
              $scope.Save = function Save(n) {
                  n.MainExamId = $scope.FilterSubWise.MainExamId;
                  n.SubjectId = $scope.FilterSubWise.SubjectId;
                  n.StudentId = n.StudentIID;
                  n.TermId = $scope.FilterSubWise.TermId;
                  if (n.Comments == null || n.Comments == '') {
                      toastr["error"]('Field is Required.');
                      return;
                  } else {
                      $http(
                   {
                       method: 'POST',
                       url: baseUrl + 'Result/SubjectWiseCommentsAdd/',
                       data: n
                   }).then(function successCallback(response) {
                       toastr["success"](response.data.message);
                       $scope.Search();
                   }, function errorCallback(response) {
                       toastr["error"](response.data.Message);
                   })
                  }

              }

              $scope.Update = function (n) {
                  n.MainExamId = $scope.FilterSubWise.MainExamId;
                  n.SubjectId = $scope.FilterSubWise.SubjectId;
                  n.StudentId = n.StudentIID;
                  n.TermId = $scope.FilterSubWise.TermId;
                  if (n.Comments == null || n.Comments == '') {
                      toastr["error"]('Field Required.');
                      return;
                  } else {
                      $http(
                           {
                               method: 'PUT',
                               url: baseUrl + 'Result/SubjectWiseCommentsUpdate/',
                               data: n
                           }).then(function successCallback(response) {
                               toastr["success"](response.data.message);
                               $scope.Search();
                           }, function errorCallback(response) {
                               toastr["error"](response.data.Message);
                           });
                  }

              }

              function getAllCommons() {
                  $scope.CommonFeilds = [];

                  $http({
                      method: 'GET',
                      url: baseUrl + 'Common/GetCommonItem/'
                  }).then(function successCallback(response) {
                      $scope.CommonFeilds = response.data.results;
                  }, function errorCallback(response) {
                      toastr["error"](response.data.message);
                  });
              }



          }]);
    </script>
}

