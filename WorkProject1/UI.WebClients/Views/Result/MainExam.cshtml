
@{
    ViewBag.Title = "Main Exam";
}

<div ng-controller="mainExamClt">
    <!-- Begin: life time stats -->
    <div class="portlet light bordered">
        <div class="portlet-title">
            <div class="caption">
                <i class="icon-settings font-green"></i>
                <span class="caption-subject font-green sbold uppercase">@ViewBag.Title</span>
            </div>
            <div class="actions">
                <div class="btn-group btn-group-solid">
                    <button ng-click="resetForm()" class="btn green" data-target="#addmodal" data-toggle="modal"> <i class="fa fa-plus"></i> Add @ViewBag.Title</button>
                </div>
            </div>
        </div>
     <form novalidate name="mform" class="form-horizontal" id="form_sample_1">
         <div class="row" style="margin-right: -6px;">
             <div class="col-md-4">
                 <div class="form-group" ng-class="{ 'has-error' : submitted1 && mform.Session.$invalid}">
                     <label class="col-md-5 control-label">
                         Session:
                         <span class="required">*</span>
                     </label>
                     <div class="col-md-7">
                         <select class="form-control" ng-model="examfilter.SessionId" name="Session" ng-options="studentInfo.SessionId as studentInfo.SessionName for studentInfo in CommonFeilds.Session" required>
                             <option value="" selected="selected">Choose Option</option>
                         </select>
                         <div class="form-control-focus"> </div>
                         <span ng-show="submitted1 && mform.Session.$error.required" class="help-block">Session Required</span>

                     </div>
                 </div>
             </div>
             <div class="col-md-4">
                 <div class="form-group" ng-class="{ 'has-error' : submitted1 && mform.class.$invalid}">
                     <label class="col-md-5 control-label">
                         Class
                         <span class="required">*</span>
                     </label>
                     <div class="col-md-7">
                         <select class="form-control" ng-model="examfilter.ClassId" name="class" ng-disabled="examfilter.SessionId==null" required ng-options="class.ClassId as class.ClassName for class in CommonFeilds.ClassInfo">
                             <option value="" selected="selected">Choose Option</option>
                         </select>
                         <div class="form-control-focus"> </div>
                         <span ng-show="submitted1 && mform.class.$error.required" class="help-block">Class Name Required</span>
                     </div>
                 </div>
             </div>
             <div class="col-md-4">
                 <div class="form-group" ng-class="{ 'has-error' : submitted1 && mform.Term.$invalid}">
                     <label class="col-md-5 control-label">
                         Term :
                         <span class="required">*</span>
                     </label>
                     <div class="col-md-7">
                         <select class="form-control" ng-model="examfilter.TermId" ng-disabled="examfilter.ClassId==null" name="Term" ng-options="T.TermId as T.Name for T in Terms | filter:{ClassId:examfilter.ClassId}:true" required>
                             <option value="" selected="selected">Choose Option</option>
                         </select>
                         <div class="form-control-focus"> </div>
                         <span ng-show="submitted1 && mform.Term.$error.required" class="help-block">Term Required</span>
                     </div>
                 </div>
             </div>
        
         </div>
         <div class="row" style="margin-bottom: 1%;margin-right: -6px;">
                  <div class="col-md-6">

                    </div>
                    <div class="col-md-6">
                        <div class="pull-right">
                            <button type="reset" ng-click="submitted1=false" class="btn red">Reset</button>
                            <button ng-click="FilterMainExam(examfilter);submitted1=true" class="btn green">Show</button>
                        </div>
                     
                  </div>
         </div>
     </form>
        <hr />
        <div class="portlet-body">
            <div class="table-container">
                <div id="sample_3_wrapper" class="dataTables_wrapper no-footer">
                    <div class="row">
                        <div class="col-md-4 col-sm-5 col-xs-6">
                            <div class="form-group">
                                <div class="col-lg-3 col-md-5 col-sm-4 col-xs-8" style="padding-left:0px">
                                    <select class="form-control" ng-model="pageSize" ng-options="P.value as P.text for P in pageSizeArray"></select>
                                </div>
                                <div class="col-md-7  col-sm-8  col-xs-4">
                                    @*<label for="search" class="control-label" style="padding-top:5px">Items</label>*@
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 col-sm-3 col-xs-1">
                        </div>
                        <div class="col-md-4 col-sm-4 col-xs-5">
                            <div id="sample_3_filter" class="pull-right">
                                <input ng-model="q" id="search" class="form-control" placeholder="Filter text">
                            </div>
                        </div>
                    </div>
                    <div class="table-scrollable"> </div>
                    <table class="table table-bordered table-hover">
                        <thead>
                            <tr class="btn-primary">
                                <th>Main Exam Name</th>
                                <th>Term Name</th>
                                <th>Class Name</th>
                                <th>Session Name</th>
                               
                                <th>Enable For MarkEntry</th>
                                <th>Grand Show Order</th>
                           <th style="text-align:center">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr ng-show="mainExams.length <= 0"><td colspan="5" style="text-align:center;"><i class="fa fa-refresh"></i> Loading new data!!</td></tr>
                            <tr dir-paginate="item in mainExams | filter:q |itemsPerPage:pageSize" current-page="currentPage">
                                <td>{{item.MainExamName}}</td>
                                <td>{{item.Term.Name}}</td>
                                <td>{{item.ClassInfo.ClassName}}</td>
                               <td>{{item.Session.SessionName}}</td>
                             
                                <td><input type="checkbox" id="IsEnableForMakrsEntry" ng-disabled="item.IsDisableForMakrsEntry==true" ng-change="UpdateMainEexam(item)" ng-model="item.IsEnableForMakrsEntry" ng-checked="item.IsEnableForMakrsEntry==true" /></td>
                                <td>{{item.MainExamGrandShowOrder}}</td>
                            <td align="center">
                                    <a class="btn btn-icon-only green" ng-click="edit(item)" data-target="#addmodal" data-toggle="modal">
                                        <i class="fa fa-edit"></i>
                                    </a>
                                    <a ng-click="deletemainexam(item)" class="btn btn-icon-only red">
                                        <i class="fa fa-trash"></i>
                                    </a>
                                </td>
                            </tr>
                        </tbody>
                    </table>

                    <div class="row ">
                        <dir-pagination-controls boundary-links="true" template-url="~/assets/angular/lib/dirPagination.tpl.html"></dir-pagination-controls>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- End: life time stats -->
    <!--Modal Area Start-->
    <div id="addmodal" class="modal fade" tabindex="-1" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog">
            <div class="modal-content">
                <form name="addform" ng-submit="save()" class="form-horizontal" id="form_sample_1" novalidate>
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">X</button>
                        <h4 class="modal-title">{{aemodalTitle}}</h4>
                    </div>
                    <div class="modal-body">
                        <div class="form-body">
                            <div class="col-md-12">
                           <div class="form-group" ng-class="{ 'has-error' : submitted && addform.Session.$invalid}">
                                    <label class="col-md-3 control-label">
                                        Session :
                                        <span class="required">*</span>
                                    </label>
                                    <div class="col-md-9">
                                        <select class="form-control" ng-model="mainExam.SessionId" name="Session" ng-options="studentInfo.SessionId as studentInfo.SessionName for studentInfo in CommonFeilds.Session" required>
                                            <option value="" selected="selected">Choose Option</option>
                                        </select>
                                        <div class="form-control-focus"> </div>
                                        <span ng-show="submitted && addform.Session.$error.required" class="help-block">Session Required</span>

                                    </div>
                                </div>
                                <div class="form-group" ng-class="{ 'has-error' : submitted && addform.class.$invalid}">
                                    <label class="col-md-3 control-label">
                                        Class
                                        <span class="required">*</span>
                                    </label>
                                    <div class="col-md-9">
                                        <select class="form-control" ng-model="mainExam.ClassId" name="class" required ng-options="class.ClassId as class.ClassName for class in CommonFeilds.ClassInfo">
                                            <option value="" selected="selected">Choose Option</option>
                                        </select>
                                        <div class="form-control-focus"> </div>
                                        <span ng-show="submitted && addform.class.$error.required" class="help-block">Class Name Required</span>
                                    </div>
                                </div>
                                <div class="form-group" ng-class="{ 'has-error' : submitted && addform.Term.$invalid}">
                                    <label class="col-md-3 control-label">
                                        Term :
                                        <span class="required">*</span>
                                    </label>
                                    <div class="col-md-9">
                                        <select class="form-control" ng-model="mainExam.TermId" name="Term" ng-disabled="mainExam.ClassId==null" ng-options="T.TermId as T.Name for T in Terms | filter:{ClassId:mainExam.ClassId}:true" required >
                                            <option value="" selected="selected">Choose Option</option>
                                        </select>
                                        <div class="form-control-focus"> </div>
                                        <span ng-show="submitted && addform.Term.$error.required" class="help-block">Term Required</span>
                                    </div>
                                </div>
                                <div class="form-group" ng-class="{ 'has-error' : submitted && addform.Name.$invalid}">
                                    <label class="col-md-3 control-label" for="form_control_1">
                                      Main Exam Name
                                        <span class="required">*</span>
                                    </label>
                                    <div class="col-md-9">
                                        <input type="text" value="0" ng-model="mainExam.MainExamName" class="form-control" placeholder="Main Exam Name" name="Name" required>
                                        <div class="form-control-focus"> </div>
                                        <span ng-show="submitted && addform.Name.$error.required" class="help-block">Main Exam Name Required</span>
                                    </div>
                                </div>
                                @*<div class="mt-checkbox-inline col-md-offset-3">
                                    <label class="mt-checkbox">
                                        <input type="checkbox" value="true" ng-model="mainExam.IsEnableForMakrsEntry" class="ng-valid ng-dirty ng-valid-parse ng-touched ng-empty" style=""> Marks Entry
                                        <span></span>
                                    </label>
                                </div>*@
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" data-dismiss="modal" class="btn dark btn-outline" ng-click="resetForm();submitted=false">Cancel</button>
                        <button type="submit" ng-click="submitted=true" class="btn green">Save</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <!--Modal Area End-->
</div>
@section Scripts{
    <script type="text/javascript">
        OEMSApp.controller("mainExamClt", ["$scope", "$http", "SweetAlert",
           function ($scope, $http, SweetAlert) {
               init();
               function init() {
                   initialize();
                   getAllCommons();
                   getmainExams(1);
                   getTerms(1);
               }
               function initialize() {
                   $scope.aemodalTitle = "Add Main Exam";
                   $scope.currentPage = 1;
                   $scope.pageno = 1;
                   $scope.pagesize = 10;
                   $scope.total_count = 12;
                   $scope.search = '';
                   $scope.mainExam = {};
                   $scope.examfilter = {};
                   $scope.mainExams = [];
                   $scope.MainExamId = '';
                   $scope.res = {};
                   $scope.data = {};
                   $scope.resetForm = resetForm;

                   $scope.mainExam.MainExamId = 0;
                   $scope.Classes = [];
                   $scope.CommonFeilds = [];
                 
                    $scope.pageSizeArray = [];
                   $scope.pageSizeArray.push({ value: 5, text: 5 });
                   $scope.pageSizeArray.push({ value: 10, text: 10 });
                   $scope.pageSizeArray.push({ value: 20, text: 20 });
                   $scope.pageSizeArray.push({ value: 50, text: 50 });
                   $scope.currentPage = 1;
                   $scope.pageSize = 10;

               }
               function resetForm() {
                   $scope.aemodalTitle = "Add Main Exam";
                   $scope.mainExam = {};
                   $scope.addform.$setUntouched();
                   $scope.addform.$setPristine();
                   $scope.submitted = false;
                   $scope.MainExamId = '';
                   $scope.mainExam.MainExamId = 0;
                   getmainExams(1);
               }
               $scope.FilterMainExam = function FilterMainExam(n) {
                   $scope.mainExams = [];
                   if ($scope.mform.$invalid)
                       return;
                  
                   $http({
                       method: 'GET',
                       url: baseUrl + 'ExamSetup/GetMainExamBySession/' + n.TermId + '/' + n.SessionId + '/' + n.ClassId
                   }).then(function successCallback(response) {
                       $scope.mainExams = response.data.results;
                       toastr["info"](response.data.message);
                   
                       $scope.submitted1 = false;
                   }, function errorCallback(response) {
                       toastr["info"](response.data.message);
                   });
               }
               function getmainExams() {
                   $scope.mainExams = [];
                   $http({
                       method: 'GET',
                       url: baseUrl + 'ExamSetup/GetAllMainExam/'
                   }).then(function successCallback(response) {
                      $scope.mainExams = response.data.results;
                       //console.log($scope.mainExams);
                       // $scope.AspNetRoles = response.data;
                       $scope.total_count = response.data.totalcount;
                       //console.log(response.data);
                   }, function errorCallback(response) {
                       toastr["warning"](response.data.Message);
                   });
                   //$scope.AspNetRoles = $scope.data;
                   //console.log($scope.data.totalcount);
                   // $scope.totalcount = 3; //$scope.data.totalcount;
               }
               $scope.searchData = function () {
                   getTerms(1);
                   // $scope.total_count = 88;
               };
               $scope.edit = function (n) {
                   $scope.mainExam = {};
                   $scope.mainExam.MainExamId = n.MainExamId;
                   $scope.aemodalTitle = "Update Main Exam";
                
                   $scope.mainExam = n;
                   $scope.MainExamId = n.MainExamId;

               };
               $scope.save = function save() {
                   if ($scope.addform.$invalid)
                       return;
                   if ($scope.mainExam.MainExamId != 0) /// For Update
                   {
                       if ($scope.mainExam != '') {
                           $http({
                               method: 'PUT',
                               url: baseUrl + 'ExamSetup/UpdateMainExam/',
                               data: $scope.mainExam
                           }).then(function successCallback(response) {
                               $('#addmodal').modal('toggle');
                               getTerms(1);
                               toastr["info"](response.data.message);
                               resetForm();
                           }, function errorCallback(response) {
                               toastr["warning"](response.data.Message);
                           });
                       }
                   } else {  //  For Add
                       if ($scope.term != {}) {
                           $http({
                               method: 'POST',
                               url: baseUrl + 'ExamSetup/AddMainExam/',
                               data: $scope.mainExam
                           }).then(function successCallback(response) {

                               $('#addmodal').modal('toggle');
                               getTerms(1);
                               toastr["info"](response.data.message);
                               resetForm();
                           }, function errorCallback(response) {
                               toastr["warning"](response.data.Message);
                           });
                       }
                   }
               };
               $scope.UpdateMainEexam = function UpdateMainEexam(item) {

                   $http({
                       method: 'PUT',
                       url: baseUrl + 'ExamSetup/UpdateMainExam/',
                       data: item
                   }).then(function successCallback(response) {
                     getmainExams();
                         toastr["info"](response.data.message);
                   }, function errorCallback(response) {
                       toastr["error"](response.data.Message);
                   });

               };
               $scope.deletemainexam = function deletemainexam(n) {
                   // SweetAlert.swal("Good job!", "You clicked the button!", "success");
                   SweetAlert.swal({
                       title: "Are you sure to delete it ?", type: "warning", showCancelButton: true, confirmButtonColor: "#DD6B55",
                       confirmButtonText: "Yes, delete it!",
                       closeOnConfirm: false
                   },
                   function (isConfirm) {
                       if (isConfirm) {
                           $http({
                               method: 'PUT',
                               url: baseUrl + 'ExamSetup/DeleteMainExam/',
                               data:n
                           }).then(function successCallback(response) {
                               SweetAlert.swal("Deleted!", "Your data has been deleted.", "success");
                               getmainExams(1);
                           }, function errorCallback(response) {
                               toastr["info"](response.data.message);
                           });
                       }
                   });
               };
              
               function getAllClasses() {
                   $http({
                       method: 'GET',
                       url: baseUrl + 'SetupInstitution/GetClass/'
                   }).then(function successCallback(response) {
                       $scope.Classes = response.data.results;
                   }, function errorCallback(response) {
                       toastr["info"](response.data.message);
                   });
               }

               function getAllCommons() {
                   $scope.CommonFeilds = [];
                   $http({
                       method: 'GET',
                       url: baseUrl + 'Common/GetCommonItem/'
                   }).then(function successCallback(response) {
                       $scope.CommonFeilds = response.data.results;
                   }, function errorCallback(response) {
                       toastr["info"](response.data.message);
                   });
               }
               function getTerms() {
                   $scope.Terms = [];
                   $http({
                       method: 'GET',
                       url: baseUrl + 'SetupInstitution/GetAllTerm/'
                   }).then(function successCallback(response) {
                       // this callback will be called asynchronously
                       // when the response is available
                       $scope.Terms = response.data.results;
                       $scope.total_count = response.data.totalcount;
                       //console.log(response.data);
                   }, function errorCallback(response) {
                       toastr["warning"](response.data.Message);
                   });
         
               }

           }]);
    </script>



}

