
@{
    ViewBag.Title = "Exam Setup";
}

<div ng-controller="subExamClt">
    <!-- Begin: life time stats -->
    <div class="portlet light bordered">
        <div class="portlet-title">
            <div class="caption">
                <i class="icon-settings font-green"></i>
                <span class="caption-subject font-green sbold uppercase">@ViewBag.Title</span>
            </div>
            <div class="actions">
                @*<div class="btn-group btn-group-solid">
                        <button ng-click="resetForm()" class="btn green" data-target="#addmodal" data-toggle="modal"> <i class="fa fa-plus"></i> Add Assesstment</button>
                    </div>*@
            </div>
        </div>
        <form novalidate name="mform" class="form-horizontal" id="form_sample_1">
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group" ng-class="{ 'has-error' : submitted1 && mform.Session.$invalid}">
                        <label class="col-md-5 control-label">
                            Session:
                            <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            <select class="form-control" ng-model="filterAssestment.SessionId" name="Session" ng-options="studentInfo.SessionId as studentInfo.SessionName for studentInfo in CommonFeilds.Session" required>
                                <option value="" selected="selected">Choose Option</option>
                            </select>
                            <div class="form-control-focus"> </div>
                            <span ng-show="submitted1 && mform.Session.$error.required" class="help-block">Session Required</span>

                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group" ng-class="{ 'has-error' : submitted1 && mform.Term.$invalid}">
                        <label class="col-md-5 control-label">
                            Term :
                            <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            <select class="form-control" ng-model="filterAssestment.TermId" ng-disabled="filterAssestment.ClassId==null" name="Term" ng-options="T.TermId as T.Name for T in Terms |filter:{ClassId:filterAssestment.ClassId}:true" required>
                                <option value="" selected="selected">Choose Option</option>
                            </select>
                            <div class="form-control-focus"> </div>
                            <span ng-show="submitted1 && mform.Term.$error.required" class="help-block">Term Required</span>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group" ng-class="{ 'has-error' : submitted1 && mform.MainExam.$invalid}">
                        <label class="col-md-5 control-label">
                            Main Exam :
                            <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            <select class="form-control" ng-disabled="filterAssestment.TermId==null"  ng-model="filterAssestment.MainExamId" name="MainExam" ng-options="T.MainExamId as T.MainExamName for T in mainExams |filter:{TermId:filterAssestment.TermId}:true" required>
                                <option value="" selected="selected">Choose Option</option>
                            </select>
                            <div class="form-control-focus"> </div>
                            <span ng-show="submitted1 && mform.MainExam.$error.required" class="help-block">Main Exam Required</span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row" style="margin-top: 1%;">
                <div class="col-md-4">
                    <div class="form-group" ng-class="{ 'has-error' : submitted1 && mform.class.$invalid}">
                        <label class="col-md-5 control-label">
                            Class
                            <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            <select class="form-control" ng-model="filterAssestment.ClassId" name="class" required ng-options="class.ClassId as class.ClassName for class in CommonFeilds.ClassInfo">
                                <option value="" selected="selected">Choose Option</option>
                            </select>
                            <div class="form-control-focus"> </div>
                            <span ng-show="submitted1 && mform.class.$error.required" class="help-block">Class Name Required</span>
                        </div>
                    </div>

                </div>
                <div class="col-md-4">
                </div>
                <div class="col-md-4">
                    <div class="pull-right">
                            <button type="reset" ng-click="resetForm()" class="btn red">Clear</button>
                            <button ng-click="getSubject();submitted1=true" class="btn green">Show</button>
                        </div>
                </div>
            </div>
        </form>
        <div class="portlet-body">
            <div class="table-container">
                <div id="sample_3_wrapper" class="dataTables_wrapper no-footer">
                    <div class="row">
                        <div class="col-md-4 col-sm-5 col-xs-6">
                            <div class="form-group">
                                <div class="col-lg-3 col-md-5 col-sm-4 col-xs-8" style="padding-left:0px">
                                    <select class="form-control" ng-model="pageSize" ng-options="P.value as P.text for P in pageSizeArray"></select>
                                </div>
                                <div class="col-md-7  col-sm-8  col-xs-4">
                                    @*<label for="search" class="control-label" style="padding-top:5px">Items</label>*@
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 col-sm-3 col-xs-1">
                        </div>
                        <div class="col-md-4 col-sm-4 col-xs-5">
                            <div id="sample_3_filter" class="pull-right">
                                <input ng-model="q" id="search" class="form-control" placeholder="Filter text">
                            </div>
                        </div>
                    </div>
                    <div class="table-scrollable"> </div>
                    <table class="table table-bordered table-hover">
                        <thead>
                            <tr class="btn-primary">
                                <th>Subject Name</th>
                                <th style="text-align:center">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr ng-show="SubjectSetups.results.length <= 0"><td colspan="5" style="text-align:center;"><i class="fa fa-refresh"></i> Loading new data!!</td></tr>
                            <tr dir-paginate="item in SubjectSetups.results | filter:q |itemsPerPage:pageSize" current-page="currentPage">
                                <td>{{item.SubjectName}}</td>
                                <td align="center">
                                    <a class="btn green" ng-click="edit(item.SubID)">
                                     Create Sub Exam
                                    </a>
                                </td>
                            </tr>
                        </tbody>
                    </table>
              <div class="row ">
                        <dir-pagination-controls boundary-links="true" template-url="~/assets/angular/lib/dirPagination.tpl.html"></dir-pagination-controls>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts{
    <script type="text/javascript">
        OEMSApp.controller("subExamClt", ["$scope", "$http", "SweetAlert",
           function ($scope, $http, SweetAlert) {
               init();
               function init() {
                   initialize();
                   getAllCommons();
                   getmainExams(1);
                   getTerms(1);
                   }
               function initialize() {
                   $scope.aemodalTitle =  "Add Subject Wise Assessment";
                   $scope.currentPage = 1;
                   $scope.pageno = 1;
                   $scope.pagesize = 10;
                   $scope.total_count = 12;
                   $scope.search = '';

                   $scope.filterAssestment = {};
                   $scope.SubAssestment = {};
                   $scope.SubAssestment.Id = '';
                   $scope.Id = 0;
                   $scope.mainExams = [];
                   $scope.SubjectSetups = [];

                   $scope.res = {};
                   $scope.data = {};


                   $scope.Classes = [];
                   $scope.CommonFeilds = [];

                   $scope.pageSizeArray = [];
                   $scope.pageSizeArray.push({ value: 5, text: 5 });
                   $scope.pageSizeArray.push({ value: 10, text: 10 });
                   $scope.pageSizeArray.push({ value: 20, text: 20 });
                   $scope.pageSizeArray.push({ value: 50, text: 50 });
                   $scope.currentPage = 1;
                   $scope.pageSize = 10;

               }

               $scope.resetForm =  function resetForm() {
                   $scope.filterAssestment = {};
                   $scope.submitted1 = false;
               }
               $scope.edit = function edit(n) {
                   uri = '/Result/ExamEditWizard?MainExamId=' + $scope.filterAssestment.MainExamId + '&SubjectId=' + n;
                   window.open(uri, '_blank');
                   //window.open('@Url.Action("ExamEditWizard","Result")?MainExamId='+$scope.filterAssestment.MainExamId+"&SubjectId="+n', '_blank');

               }
        function getmainExams() {
                   $scope.mainExams = [];
                   $http({
                       method: 'GET',
                       url: baseUrl + 'ExamSetup/GetAllMainExam/'
                   }).then(function successCallback(response) {
                      $scope.mainExams = response.data.results;
                       //console.log($scope.mainExams);
                       // $scope.AspNetRoles = response.data;
                       $scope.total_count = response.data.totalcount;
                       //console.log(response.data);
                   }, function errorCallback(response) {
                       toastr["warning"](response.data.Message);
                   });
                   //$scope.AspNetRoles = $scope.data;
                   //console.log($scope.data.totalcount);
                   // $scope.totalcount = 3; //$scope.data.totalcount;
        }
        $scope.getSubject =  function getSubject() { // Get Subject List By VSCG
            if ($scope.mform.$invalid)
                return;
            //blockUI.start(); // spinning Start
            $scope.SubjectSetups = [];
            var searchtxt = $scope.search;
            if ($scope.search == 'undefined' || $scope.search == '') {
                searchtxt = 'null';
            }
            $http({
                method: 'GET',
                url: baseUrl + 'SubjectSetup/GetAllSubject/' + $scope.filterAssestment.ClassId + '/' + $scope.filterAssestment.SessionId 
            }).then(function successCallback(response) {
                $scope.SubjectSetups = response.data;
                $scope.total_count = response.data.totalcount;
                if ($scope.pagesize == -1)
                    $scope.pagesize = 500;
                //blockUI.stop();  // spinning Finished
            }, function errorCallback(response) {
                toastr["info"](response.data.message);
                blockUI.stop();
            });
        }

               function getAllClasses() {
                   $http({
                       method: 'GET',
                       url: baseUrl + 'SetupInstitution/GetClass/'
                   }).then(function successCallback(response) {
                       $scope.Classes = response.data.results;
                   }, function errorCallback(response) {
                       toastr["info"](response.data.message);
                   });
               }

               function getAllCommons() {
                   $scope.CommonFeilds = [];
                   $http({
                       method: 'GET',
                       url: baseUrl + 'Common/GetCommonItem/'
                   }).then(function successCallback(response) {
                       $scope.CommonFeilds = response.data.results;
                   }, function errorCallback(response) {
                       toastr["info"](response.data.message);
                   });
               }
               function getTerms() {
                   $scope.Terms = [];
                   $http({
                       method: 'GET',
                       url: baseUrl + 'SetupInstitution/GetAllTerm/'
                   }).then(function successCallback(response) {
                       // this callback will be called asynchronously
                       // when the response is available
                       $scope.Terms = response.data.results;
                       $scope.total_count = response.data.totalcount;
                       //console.log(response.data);
                   }, function errorCallback(response) {
                       toastr["warning"](response.data.Message);
                   });

               }

           }]);
    </script>

}




