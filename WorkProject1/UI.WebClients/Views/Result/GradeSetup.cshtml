@{
    ViewBag.Title = "Grade Setup";
}
<div ng-controller="GradeSetupCntrl">
    <!-- Begin: life time stats -->
    <div class="portlet light bordered">
        <div class="portlet-title">
            <div class="caption">
                <i class="icon-settings font-green"></i>
                <span class="caption-Grade font-green sbold uppercase">@ViewBag.Title</span>
            </div>
            <div class="actions">
                <div class="btn-group btn-group-solid">
                    <button ng-click="resetForm()" class="btn green" data-target="#addmodal" data-toggle="modal"> <i class="fa fa-plus"></i> Add Grade</button>
                </div>
            </div>
        </div>
        <div class="portlet-body">
            <form class="form-horizontal" ng-submit="getGrade()" id="frmCommon" name="formCommonFeilds" novalidate>
                <div class="form-body">
                    <div class="row">
                       <div class="col-md-6">
                            <div class="form-group" ng-class="{ 'has-error' : submitted1 && formCommonFeilds.Session.$invalid}">
                                <label class="col-md-5 control-label">
                                    Session :
                                    <span class="required">*</span>
                                </label>
                                <div class="col-md-7">
                                    <select class="form-control" ng-model="Fillter.SessionId" required name="Session" ng-options="GradeSetup.SessionId as GradeSetup.SessionName for GradeSetup in CommonFeilds.Session">
                                        <option value="" selected="selected">Select</option>
                                    </select>
                                    <div class="form-control-focus"> </div>
                                    <span ng-show="submitted1 && formCommonFeilds.Session.$error.required" class="help-block">Session Required</span>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group" ng-class="{ 'has-error' : submitted1 && formCommonFeilds.Class.$invalid}">
                                <label class="col-md-5 control-label">
                                    Class :

                                </label>
                                <div class="col-md-7">
                                    <select class="form-control" ng-model="Fillter.ClassId" name="Class" ng-options="GradeSetup.ClassId as GradeSetup.ClassName for GradeSetup in CommonFeilds.ClassInfo">
                                        <option value="" selected="selected">Select</option>
                                    </select>
                                    <div class="form-control-focus"> </div>
                                    <span ng-show="submitted1 && formCommonFeilds.Class.$error.required" class="help-block">Class Required</span>
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="btn-group btn-group-solid pull-right" style="margin-bottom:5px">
                        <button ng-click="submitted1=true" class="btn btn-primary btn-large">&nbsp;&nbsp; <i class="fa fa-search"></i> Show &nbsp;&nbsp;&nbsp;&nbsp;</button>
                        <a ng-click="generateReport()" style="margin-left:3px;" class="btn btn-primary">Report</a>
                    </div>

                </div>
            </form>

            <div class="table-container">
                <div id="sample_3_wrapper" class="dataTables_wrapper no-footer">
                    <div class="table-scrollable"> </div>
                    <table class="table table-bordered table-hover">
                        <thead>
                            <tr class="bg-primary">
                                <th width="15%">Class name</th>
                                <th width="10%">From</th>
                                <th width="10%">To</th>
                                <th width="15%">Letter Grade</th>
                                <th width="10%">Is Fail Grade</th>
                                <th width="10%">Comments</th>
                                <th width="15%">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr ng-show="GradeSetups.results.length <= 0"><td colspan="7" style="text-align:center;"><i class="fa fa-refresh"></i> Data not found!</td></tr>
                            <tr dir-paginate="item in GradeSetups.results|itemsPerPage:pagesize" total-items="total_count">
                                <td>{{item.ClassName}}</td>
                                <td>{{item.Marks_From}}</td>
                                <td>{{item.Marks_To}}</td>
                                <td>{{item.GL}}</td>
                                <td>
                                    <input type="checkbox" id="Assigned" ng-disabled="true" ng-model="item.IsFailGrade" ng-checked="item.IsFailGrade !=0" />
                                </td>
                                <td>{{item.Comments}}</td>
                                <td>
                                    <a href="javascript:;" class="btn btn-icon-only green" ng-click="edit(item)" data-target="#addmodal" data-toggle="modal">
                                        <i class="fa fa-edit"></i>
                                    </a>
                                    <a ng-click="deleteGrade(item)" href="javascript:;" class="btn btn-icon-only red">
                                        <i class="fa fa-trash"></i>
                                    </a>


                                </td>

                            </tr>
                        </tbody>

                    </table>


                </div>
            </div>
        </div>
    </div>
    <!-- End: life time stats -->
    <!--Modal Area Start-->
    <div id="addmodal" class="modal fade" tabindex="-1" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <form name="addform" ng-submit="save()" class="form-horizontal" id="form_sample_1" novalidate>
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">X</button>
                        <h4 class="modal-title">{{modalTitle}}</h4>
                    </div>
                    <div class="modal-body">
                        <div class="form-body">
                            <div class="row">
                                <div class="col-md-6">
                               <div class="form-group" ng-class="{ 'has-error' : submitted && addform.Session.$invalid}">
                                        <label class="col-md-4 control-label">
                                            Session :
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-8">
                                            <select class="form-control" ng-model="GradeSetup.SessionID" ng-disabled="GradeSetup.Clone==true" required name="Session" ng-options="GradeSetup.SessionId as GradeSetup.SessionName for GradeSetup in CommonFeilds.Session">
                                                <option value="" selected="selected">Select</option>
                                            </select>
                                            <div class="form-control-focus"> </div>
                                            <span ng-show="submitted && addform.Session.$error.required" class="help-block">Session Required</span>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="col-md-4 control-label">
                                            Clone :
                                            <input type="checkbox" ng-disabled="GradeSetup.SessionID==null" ng-change="filterSession();" ng-model="GradeSetup.Clone" ng-checked="GradeSetup.Clone==true">
                                        </label>
                                        <div class="col-md-8" ng-show="GradeSetup.Clone==true">
                                            <select class="form-control" ng-model="GradeSetup.NewSessionId" name="SessionNew" ng-options="GradeSetup.SessionId as GradeSetup.SessionName for GradeSetup in CloneSession.Session">
                                                <option value="" selected="selected">Select New Session</option>
                                            </select>
                                            <div class="form-control-focus"> </div>
                                        </div>
                                    </div>
                                    <fieldset ng-hide="GradeSetup.Clone" style="width:100%">
                                        <div class="form-group" ng-class="{ 'has-error' : submitted && addform.Class.$invalid}">
                                            <label class="col-md-4 control-label">
                                                Class :
                                                <span class="required">*</span>
                                            </label>
                                            <div class="col-md-8">
                                                <select class="form-control"  ng-model="GradeSetup.ClassID" name="Class" required ng-options="GradeSetup.ClassId as GradeSetup.ClassName for GradeSetup in CommonFeilds.ClassInfo">
                                                    <option value="" selected="selected">Select</option>
                                                </select>
                                                <div class="form-control-focus"> </div>
                                                <span ng-show="submitted && addform.Class.$error.required" class="help-block">Class Required</span>
                                            </div>
                                        </div>
                                        <div class="form-group" ng-class="{ 'has-error' : submitted && addform.Marks_From.$invalid}">
                                            <label class="col-md-4 control-label">
                                                From Marks :
                                                <span class="required">*</span>
                                            </label>
                                            <div class="col-md-8">
                                                <input type="text" ng-model="GradeSetup.Marks_From" class="form-control" placeholder="From Marks" name="Marks_From" required>
                                                <div class="form-control-focus"> </div>
                                                <span ng-show="submitted && addform.Marks_From.$error.required" class="help-block">From Marks Required</span>
                                            </div>
                                        </div>
                                        <div class="form-group" ng-class="{ 'has-error' : submitted && addform.Marks_To.$invalid}">
                                            <label class="col-md-4 control-label">
                                                To Marks :
                                            </label>
                                            <div class="col-md-8">
                                                <input type="text" ng-model="GradeSetup.Marks_To" class="form-control" placeholder="To Marks" name="Marks_To" required>
                                                <div class="form-control-focus"> </div>
                                                <span ng-show="submitted && addform.Marks_To.$error.required" class="help-block">To Marks Required</span>
                                            </div>
                                        </div>
                                    </fieldset>
                                </div>
                                <div class="col-md-6">
                                    <fieldset ng-hide="GradeSetup.Clone" style="width:100%">
                                        <div class="form-group" ng-class="{ 'has-error' : submitted && addform.GL.$invalid}">
                                            <label class="col-md-4 control-label">
                                                Grade Letter :
                                                <span class="required">*</span>
                                            </label>
                                            <div class="col-md-8">
                                                <input type="text" ng-model="GradeSetup.GL" class="form-control" placeholder="Grade Letter" name="GL" required>
                                                <div class="form-control-focus"> </div>
                                                <span ng-show="submitted &&  addform.GL.$error.required" class="help-block">Grade Letter Required</span>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="col-md-4 control-label">
                                                Is Fail Grade :
                                            </label>
                                            <div class="col-md-8" style="margin-top: 8px;">
                                                <input type="checkbox" id="IsPair" ng-model="GradeSetup.IsFailGrade" ng-checked="GradeSetup.IsFailGrade==true" />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="col-md-4 control-label">
                                                Comments :
                                            </label>
                                            <div class="col-md-8">
                                                <input type="text" ng-model="GradeSetup.Comments" class="form-control" placeholder="Comments">

                                            </div>
                                        </div>

                                    </fieldset>
                                </div>

                            </div>


                        </div>
                    </div>
                    <div class="modal-footer">
                        <button ng-show="GradeSetup.Clone==true && GradeSetup.NewSessionId!=null" type="button" ng-click="Clone();" class="btn green-haze">Clone</button>
                        <button type="button" data-dismiss="modal" class="btn dark btn-outline" ng-click="resetForm();submitted=false">Cancel</button>
                        <button type="submit" ng-hide="GradeSetup.Clone==true" ng-click="submitted=true" class="btn green-haze">Save</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <!--Modal Area End-->

</div>

@section Scripts{
    <script type="text/javascript">
        OEMSApp.controller("GradeSetupCntrl", ["$scope", "$http", "SweetAlert", "$window",
              function ($scope, $http, SweetAlert, $window) {

                  init();
                  function init() {
                      initialize();
                      getAllCommons();
                      getCloneSession();
                      getAllGrade();
                  }
                  function initialize() {
                      $scope.modalTitle = "Grade Setup";
                      $scope.GradeSetup = {};
                      $scope.Fillter = {};
                      $scope.GradeSetup.ID = 0;
                      $scope.currentPage = 1;
                      $scope.pageno = 1;
                      $scope.pagesize = 10000;
                      $scope.total_count = 12;
                      $scope.search = '';
                      $scope.GradeSetups = [];

                      $scope.CommonFeilds = [];

                      $scope.getGrade = getGrade;
                      $scope.res = {};
                      $scope.data = {};
                      $scope.resetForm = resetForm;
                      $scope.getAllCommons = getAllCommons;

                  }
                  //for class ways report ........
                  $scope.generateReport = function generateReport() {
                     
                     if ($scope.Fillter.SessionId == null) {
                          toastr["info"]("Select a Session.");
                      }
                      else {
                          $scope.uri = "@Url.Action("GradePolicyReport", "Report")?SessionID=" + $scope.Fillter.SessionId;
                          $window.open($scope.uri, '_blank');
                      }

                  }
                  function resetForm() {
                      $scope.modalTitle = "Add Grade";
                      $scope.GradeSetup = {};
                      $scope.GradeSetup.ID = 0;
                      $scope.submitted1 = false;
                      $scope.submitted = false;
                      $scope.Id = '';
                  }
                  function reset() {
                      $scope.modalTitle = "Add Grade";
                      $scope.GradeSetup.ID = 0;
                      $scope.GradeSetup.Marks_From = null;
                      $scope.GradeSetup.Marks_To = null;
                      $scope.GradeSetup.GL = null;
                      $scope.GradeSetup.GP = null;
                      $scope.GradeSetup.IsFailGrade = null;
                      $scope.GradeSetup.Comments = null;
                      $scope.submitted1 = false;
                      $scope.submitted = false;
                  }
                  function getAllCommons() {
                      //$scope.CommonFeilds = [];

                      $http({
                          method: 'GET',
                          url: baseUrl + 'Common/GetCommonItem/'
                      }).then(function successCallback(response) {
                          $scope.CommonFeilds = response.data.results;
                      }, function errorCallback(response) {
                          toastr["info"](response.data.message);
                      });
                  }
                  function getCloneSession() {//for clone
                      $scope.CloneSession = [];

                      $http({
                          method: 'GET',
                          url: baseUrl + 'Common/GetCommonItem/'
                      }).then(function successCallback(response) {
                          $scope.CloneSession = response.data.results;

                      }, function errorCallback(response) {
                          toastr["error"](response.data.message);
                      });
                  }
                  $scope.filterSession = function filterSession() {
                      var keepGoing1 = true;
                      angular.forEach($scope.CloneSession.Session, function (value, key) {
                          if (keepGoing1) {
                              if (value.SessionId == $scope.GradeSetup.SessionID) {
                                  var index = $scope.CloneSession.Session.indexOf(value);
                                  $scope.CloneSession.Session.splice(index, 1);
                                  keepGoing1 = false;
                              }
                          }
                      });
                  }
                  function getGrade() {
                      if ($scope.formCommonFeilds.$invalid)
                          return;
                      $scope.GradeSetups = [];

                      $http({
                          method: 'GET',
                          url: baseUrl + 'Result/GetGradeSetup/' + $scope.Fillter.SessionId + '/' + $scope.Fillter.ClassId
                      }).then(function successCallback(response) {
                          $scope.GradeSetups = response.data;
                          $scope.total_count = response.data.totalcount;
                          if ($scope.pagesize == -1)
                              $scope.pagesize = 500;

                      }, function errorCallback(response) {
                          toastr["info"](response.data.message);
                      });

                  }

                  function getAllGrade() {
                      $scope.GradeSetups = [];

                      $http({
                          method: 'GET',
                          url: baseUrl + 'Result/GetAllGradeSetup/'
                      }).then(function successCallback(response) {
                          $scope.GradeSetups = response.data;
                          $scope.total_count = response.data.totalcount;
                          if ($scope.pagesize == -1)
                              $scope.pagesize = 500;

                      }, function errorCallback(response) {
                          toastr["info"](response.data.message);
                      });

                  }

                  $scope.searchData = function () {
                      getSubject();
                  };

                  $scope.edit = function (n) {
                      $scope.modalTitle = "Update Grade";
                      $scope.GradeSetup = n;
                      $scope.ID = n.ID;
                      $scope.NoEffectOnExam;

                  };
                  $scope.Clone = function () {
                      if ($scope.GradeSetup.Clone == true) {
                          $http({
                              method: 'GET',
                              url: baseUrl + 'Result/CloneGrade/' + $scope.GradeSetup.Clone + '/' + $scope.GradeSetup.NewSessionId + '/' + $scope.GradeSetup.SessionID
                          }).then(function successCallback(response) {
                              toastr["info"](response.data.message);
                              $scope.GradeSetups = response.data;
                              reset();
                          }, function errorCallback(response) {
                              toastr["error"](response.data.Message);

                          });
                      }
                  };
                  $scope.save = function save() {

                      if ($scope.addform.$invalid)
                          return;

                      if ($scope.GradeSetup.ID != 0) /// For Update
                      {
                          if ($scope.GradeSetup != '') {
                              $http({
                                  method: 'PUT',
                                  url: baseUrl + '/Result/UpdateGrade/',
                                  data: $scope.GradeSetup
                              }).then(function successCallback(response) {
                                  $scope.GradeSetups = response.data;
                                  toastr["info"](response.data.message);
                                  reset();
                              }, function errorCallback(response) {
                                  toastr["error"](response.data.Message);
                              });
                          }
                      } else {  //  For Add
                          if ($scope.GradeSetup != {}) {
                              $http({
                                  method: 'POST',
                                  url: baseUrl + '/Result/AddGrade/',
                                  data: $scope.GradeSetup
                              }).then(function successCallback(response) {
                                  $scope.GradeSetups = response.data;
                                  toastr["info"](response.data.message);
                                  reset();
                              }, function errorCallback(response) {
                                  toastr["error"](response.data.Message);
                              });
                          }
                      }

                  };



                  $scope.deleteGrade = function deleteGrade(n) {

                      // SweetAlert.swal("Good job!", "You clicked the button!", "success");
                      SweetAlert.swal({
                          title: "Are you sure to delete it ?", type: "warning", showCancelButton: true, confirmButtonColor: "#DD6B55",
                          confirmButtonText: "Yes, delete it!",
                          closeOnConfirm: false
                      },
                      function (isConfirm) {


                          if (isConfirm) {
                              $http({
                                  method: 'DELETE',
                                  url: baseUrl + 'Result/DeleteGrade/' + n.ID
                              }).then(function successCallback(response) {
                                  SweetAlert.swal("Deleted!", "Your data has been deleted.", "success");
                                  getGrade();
                              }, function errorCallback(response) {
                                  toastr["error"](response.data.Message);
                              });

                          }
                      });


                  };

              }]);
        $(document).ready(function () {
            $('[data-toggle="tooltip"]').tooltip();
        });
    </script>

}
