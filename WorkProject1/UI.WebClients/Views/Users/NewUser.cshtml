@model UI.WebClients.Models.RegisterViewModel
@{
    ViewBag.Title = "Add New User";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/assets/global/plugins/bootstrap-fileinput/bootstrap-fileinput.css" rel="stylesheet" type="text/css" />
<div class="row" ng-controller="ctrlNewUser">
    <div class="col-md-12">
        <!-- BEGIN SAMPLE FORM PORTLET-->
        <div class="portlet light bordered">
            <div class="portlet-title">
                <div class="caption font-red-sunglo">
                    <i class="icon-settings font-red-sunglo"></i>
                    <span class="caption-subject bold uppercase">@ViewBag.Title</span>
                </div>
            </div>
            <div class="portlet-body form ">
                    <form name="frmAdd" ng-submit="Save()" class="form-horizontal" id="frmAdd" novalidate>
                        <div class="row">
                            <div class="col-md-7">
                                <div class="form-body">
                                    <div class="form-group">
                                        <label class="col-md-3 control-label"></label>
                                        <div class="col-md-9">
                                            <input type="checkbox" ng-model="IsEmp" value="false">From Employee
                                            <span class="help-block">  </span>
                                        </div>
                                    </div>
                                    <div class="form-group" ng-show="IsEmp">
                                        <label class="col-md-3 control-label">Empolyee(Optional)</label>
                                        <div class="col-md-9">
                                            <input type="text" ng-model="Emp" typeahead-on-select='onSelect($item, $model, $label)' placeholder="Search Employee By ID or Name" uib-typeahead="emp  as emp.Text for emp in Search($viewValue)" typeahead-loading="loadingLocations" typeahead-no-results="noResults" class="form-control">
                                            <i ng-show="loadingLocations" class="glyphicon glyphicon-refresh"></i>
                                            <div ng-show="noResults">
                                                <i class="glyphicon glyphicon-remove"></i> No Results Found
                                            </div>
                                            <input type="hidden" name="EmpId" value="{{Emp.Value}}" />
                                        </div>
                                    </div>
                                    <div class="form-group" ng-class="{ 'has-error' :submitted && frmAdd.FullName.$invalid}">
                                        <label class="col-md-3 control-label">
                                            Full Name
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-9">
                                            <input type="text" ng-model="Employee.FullName" id="FullName" name="FullName" class="form-control" placeholder="Full Name" required>
                                            <div class="form-control-focus"> </div>
                                            <span ng-show="submitted && frmAdd.FullName.$error.required" class="help-block">Full Name Required</span>
                                            <span class="help-block">  </span>
                                        </div>
                                    </div>
                                    <div class="form-group" ng-class="{ 'has-error' :submitted && frmAdd.UserName.$invalid}">
                                        <label class="col-md-3 control-label">User Name<span class="required">*</span></label>
                                        <div class="col-md-9">
                                            <input type="text" ng-model="Employee.UserName" id="UserName" name="UserName" class="form-control" placeholder="User Name" required>
                                            <div class="form-control-focus"> </div>
                                            <span ng-show="submitted && frmAdd.UserName.$error.required" class="help-block">User Name Required</span>
                                        </div>
                                    </div>
                                    <div class="form-group" ng-class="{ 'has-error' :submitted && frmAdd.version.$invalid}">
                                        <label class="col-md-3 control-label">Role<span class="required">*</span></label>
                                        <div class="col-md-9">
                                            <select class="form-control" ng-model="Employee.Role" name="version" required ng-options="item.Id as item.Name for item in AspNetRoles"></select>
                                            <div class="form-control-focus"> </div>
                                            <span ng-show="submitted && frmAdd.version.$error.required" class="help-block">Role Required</span>
                                        </div>
                                    </div>
                                    <div class="form-group" ng-class="{ 'has-error' :submitted && frmAdd.Email.$invalid}">
                                        <label class="col-md-3 control-label">
                                            Email
                                            <span class="required">*</span>
                                        </label>
                                        <div class="col-md-9">
                                            <input type="email" ng-model="Employee.Email" name="Email" id="Email" class="form-control" placeholder="Email" required>
                                            <div class="form-control-focus"> </div>
                                            <span ng-show="submitted && frmAdd.Email.$error.required" class="help-block">Email Required</span>
                                        </div>
                                    </div>
                                    <div class="form-group" ng-class="{ 'has-error' :submitted && frmAdd.MobileNo.$invalid}">
                                        <label class="col-md-3 control-label">
                                            Mobile No
                                            <span class="required">*</span>
                                        </label>

                                        <div class="col-md-9">
                                            <input type="text" ng-model="Employee.MobileNo" name="MobileNo" id="MobileNo" class="form-control" placeholder="Mobile No" required>
                                            <div class="form-control-focus"> </div>
                                            <span ng-show="submitted && frmAdd.MobileNo.$error.required" class="help-block">MobileNo Required</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-actions">
                                    <button type="submit"  ng-click="submitted=true;" class="btn blue">Save</button>
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="form-body">
                                    <div class="form-group">
                                        <div class="fileinput fileinput-new" data-provides="fileinput">
                                            <div class="fileinput-new thumbnail" style="width: 200px; height: 150px;">
                                                <img src="~/assets/global/no image.jpg" alt="" />
                                            </div>
                                            <div class="fileinput-preview fileinput-exists thumbnail" style="max-width: 200px; max-height: 150px;"> </div>
                                            <div>
                                                <span class="btn default btn-file">
                                                    <span class="fileinput-new"> Select image </span>
                                                    <span class="fileinput-exists"> Change </span>
                                                    <input type="file" id="img">
                                                </span>
                                                <a href="javascript:;" class="btn default fileinput-exists" data-dismiss="fileinput"> Remove </a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
            </div>
        </div>
        <!-- END SAMPLE FORM PORTLET-->
    </div>
</div>


@section Scripts{
    <script src="~/assets/global/plugins/bootstrap-fileinput/bootstrap-fileinput.js" type="text/javascript"></script>
   

<script type="text/javascript">

                OEMSApp.controller("ctrlNewUser", ["$scope", "$http", "SweetAlert", "blockUI",
                  function ($scope, $http, SweetAlert, blockUI) {

                      init();
                      function init() {
                          initialize();
                          $scope.getRoles();
                     
                      }
                      function initialize() {
                          $scope.getRoles = getRoles;
                      };
                    
                  
                      $scope.Reset = function Reset() {

                          initialize();
                        
                      };

                     function getRoles() {
                          $scope.AspNetRoles = [];
                          $http({
                              method: 'GET',
                              url: baseUrl + 'user/GetAllRoles'
                          }).then(function successCallback(response) {
                             
                              $scope.AspNetRoles = response.data.results;
                             

                          }, function errorCallback(response) {
                             
                          });

                      }

                     $scope.Save = function Save() {
                         if ($scope.frmAdd.$invalid)
                             return;

                         var files = $("#img").get(0).files;
                          $http({
                              method: 'POST',
                              url: baseUrl + '/Users/NewUsers/',
                              headers: { 'Content-Type': undefined },
                              transformRequest: function (data) {
                                  var formData = new FormData();
                                  formData.append('userinfo', JSON.stringify($scope.Employee));
                                  if (files.length > 0) {
                                      formData.append("img", files[0]);
                                  }
                                  return formData;
                              },
                              data: {  }

                          }).then(function successCallback(response) {
                              if (response.data.HasError)
                                  toastr["error"](response.data.message);
                              else {

                                  toastr["success"](response.data.results);
                              }
                          });
                      };
                     
                      $scope.Search = function (val) {
                          return $http.get(baseUrl + 'Employee/SearchEmployee/' + val, {
                              params: {
                                 
                              }
                          }).then(function (response) {
                              return response.data.results.map(function (item) {
                                  return item;
                              });
                          });
                      };
                      // for droupdown select list event....
                      $scope.onSelect = function onSelect($item, $model, $label) {
                        
                          $scope.Employee = {};
                          $http({
                              method: 'GET',
                              url: baseUrl + 'Employee/GetSingleEmployeeInfo/' + $item.Value
                          }).then(function successCallback(response) {
                              $scope.Employee.FullName = response.data.results.FullName;
                              $scope.Employee.UserName = response.data.results.EmpID;
                              $scope.Employee.Email = response.data.results.Email;
                              $scope.Employee.MobileNo = response.data.results.SMSNotificationNo;
                             

                              
                          }, function errorCallback(response) {
                              toastr["error"](response.data.message);
                          });
                      };
                     

                  }]);
</script>

}